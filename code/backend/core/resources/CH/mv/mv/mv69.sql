create materialized view if not exists mv69 engine = MergeTree() order by tuple() POPULATE as 
select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, title.id AS title_id_2, movie_info_idx.info AS movie_info_idx_info_3, movie_info.info AS movie_info_info_4, info_type.info AS info_type_info_5, name.gender AS gender, movie_info.movie_id AS movie_info_movie_id_7, name.id AS name_id_8, movie_info_idx.movie_id AS movie_info_idx_movie_id_9, title.title AS title, info_type.id AS info_type_id_11, movie_info.info_type_id AS info_type_id
 from cast_info,title,movie_info_idx,info_type,movie_info,name
 where ((cast_info.note = '(writer)') Or (cast_info.note =  '(head writer)') Or (cast_info.note =  '(written by)') Or (cast_info.note =  '(story)') Or (cast_info.note =  '(story editor)')) And title.id = cast_info.movie_id  And  cast_info.movie_id = movie_info.movie_id  And  cast_info.movie_id = movie_info_idx.movie_id And (name.id = cast_info.person_id) And title.id = movie_info.movie_id  And  title.id = movie_info_idx.movie_id  And  movie_info.movie_id = movie_info_idx.movie_id And (info_type.id = movie_info_idx.info_type_id) And info_type.id = movie_info.info_type_id  And ((movie_info.info = 'Horror') Or (movie_info.info =  'Action') Or (movie_info.info =  'Sci-Fi') Or (movie_info.info =  'Thriller') Or (movie_info.info =  'Crime') Or (movie_info.info =  'War')) And (name.gender = 'm')