create materialized view if not exists mv54 engine = MergeTree() order by tuple() POPULATE as 
select movie_info.movie_id AS movie_info_movie_id_0, company_name.name AS name, company_type.id AS company_type_id_2, company_type.kind AS company_type_kind_3, movie_info_idx.movie_id AS movie_info_idx_movie_id_4, movie_info.info_type_id AS info_type_id, kind_type.id AS kind_type_id_6, kind_type.kind AS kind_type_kind_7, company_name.id AS company_name_id_8, title.id AS title_id_9, movie_info_idx.info AS movie_info_idx_info_10, company_name.country_code AS country_code, info_type.info AS info_type_info_12, info_type.id AS info_type_id_13, title.title AS title, movie_companies.movie_id AS movie_companies_movie_id_15
 from movie_info_idx,company_type,kind_type,company_name,title,info_type,movie_info,movie_companies
 where movie_info_idx.movie_id = title.id  And  movie_info.movie_id = movie_info_idx.movie_id  And  movie_info_idx.movie_id = movie_companies.movie_id And (info_type.id = movie_info_idx.info_type_id) And (movie_info_idx.info = 'release dates') And (company_type.kind = 'production companies') And (company_type.id = movie_companies.company_type_id) And (kind_type.kind = 'movie') And (kind_type.id = title.kind_id) And (company_name.country_code = '[us]') And (company_name.id = movie_companies.company_id) And movie_info.movie_id = title.id  And  movie_companies.movie_id = title.id  And info_type.info = 'rating'  And  info_type.info = 'release dates' And info_type.id = movie_info.info_type_id  And  movie_info.movie_id = movie_companies.movie_id