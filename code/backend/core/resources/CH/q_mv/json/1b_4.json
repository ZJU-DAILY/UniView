[{"Plan": {"Node Type": "Expression", "Description": "(Projection + Before ORDER BY)", "Header": [{"Name": "production_note", "Type": "String"}, {"Name": "movie_title", "Type": "String"}, {"Name": "movie_year", "Type": "Int64"}], "Expression": {"Inputs": [{"Name": "min(note)", "Type": "String"}, {"Name": "min(title)", "Type": "String"}, {"Name": "min(production_year)", "Type": "Int64"}], "Actions": [{"Node Type": "INPUT", "Result Type": "INPUT", "Arguments": [0], "Removed Arguments": [], "Result": 0}, {"Node Type": "INPUT", "Result Type": "INPUT", "Arguments": [1], "Removed Arguments": [], "Result": 1}, {"Node Type": "INPUT", "Result Type": "INPUT", "Arguments": [2], "Removed Arguments": [], "Result": 2}, {"Node Type": "ALIAS", "Result Type": "ALIAS", "Arguments": [0], "Removed Arguments": [0], "Result": 3}, {"Node Type": "ALIAS", "Result Type": "ALIAS", "Arguments": [1], "Removed Arguments": [1], "Result": 0}, {"Node Type": "ALIAS", "Result Type": "ALIAS", "Arguments": [2], "Removed Arguments": [2], "Result": 1}], "Outputs": [{"Name": "production_note", "Type": "String"}, {"Name": "movie_title", "Type": "String"}, {"Name": "movie_year", "Type": "Int64"}], "Positions": [3, 0, 1], "Project Input": true}, "Plans": [{"Node Type": "Aggregating", "Header": [{"Name": "min(note)", "Type": "String"}, {"Name": "min(title)", "Type": "String"}, {"Name": "min(production_year)", "Type": "Int64"}], "Keys": [], "Aggregates": [{"Name": "min(note)", "Function": {"Name": "min", "Argument Types": ["String"], "Result Type": "String"}, "Arguments": ["note"], "Argument Positions": [2]}, {"Name": "min(title)", "Function": {"Name": "min", "Argument Types": ["String"], "Result Type": "String"}, "Arguments": ["title"], "Argument Positions": [1]}, {"Name": "min(production_year)", "Function": {"Name": "min", "Argument Types": ["Int64"], "Result Type": "Int64"}, "Arguments": ["production_year"], "Argument Positions": [0]}], "Plans": [{"Node Type": "Expression", "Description": "Before GROUP BY", "Header": [{"Name": "production_year", "Type": "Int64"}, {"Name": "title", "Type": "String"}, {"Name": "note", "Type": "String"}], "Expression": {"Inputs": [{"Name": "production_year", "Type": "Int64"}, {"Name": "title", "Type": "String"}, {"Name": "note", "Type": "String"}], "Actions": [{"Node Type": "INPUT", "Result Type": "INPUT", "Arguments": [0], "Removed Arguments": [0], "Result": 0}, {"Node Type": "INPUT", "Result Type": "INPUT", "Arguments": [1], "Removed Arguments": [1], "Result": 1}, {"Node Type": "INPUT", "Result Type": "INPUT", "Arguments": [2], "Removed Arguments": [2], "Result": 2}], "Outputs": [{"Name": "production_year", "Type": "Int64"}, {"Name": "title", "Type": "String"}, {"Name": "note", "Type": "String"}], "Positions": [0, 1, 2], "Project Input": true}, "Plans": [{"Node Type": "Filter", "Description": "WHERE", "Header": [{"Name": "production_year", "Type": "Int64"}, {"Name": "title", "Type": "String"}, {"Name": "note", "Type": "String"}], "Filter Column": "and(equals(--it.info, 'bottom 10 rank'), and(greaterOrEquals(production_year, 2005), lessOrEquals(production_year, 2010)), equals(--t.id, movie_id), equals(--t.id, --mi_idx.movie_id), equals(movie_id, --mi_idx.movie_id), equals(--it.id, info_type_id))", "Removes Filter": true, "Expression": {"Inputs": [{"Name": "--it.id", "Type": "Int64"}, {"Name": "--it.info", "Type": "String"}, {"Name": "info_type_id", "Type": "Int64"}, {"Name": "--mi_idx.movie_id", "Type": "Int64"}, {"Name": "production_year", "Type": "Int64"}, {"Name": "title", "Type": "String"}, {"Name": "--t.id", "Type": "Int64"}, {"Name": "note", "Type": "String"}, {"Name": "movie_id", "Type": "Int64"}], "Actions": [{"Node Type": "INPUT", "Result Type": "INPUT", "Arguments": [0], "Removed Arguments": [], "Result": 0}, {"Node Type": "INPUT", "Result Type": "INPUT", "Arguments": [1], "Removed Arguments": [], "Result": 1}, {"Node Type": "INPUT", "Result Type": "INPUT", "Arguments": [2], "Removed Arguments": [], "Result": 2}, {"Node Type": "INPUT", "Result Type": "INPUT", "Arguments": [3], "Removed Arguments": [], "Result": 3}, {"Node Type": "INPUT", "Result Type": "INPUT", "Arguments": [4], "Removed Arguments": [], "Result": 4}, {"Node Type": "INPUT", "Result Type": "INPUT", "Arguments": [5], "Removed Arguments": [5], "Result": 5}, {"Node Type": "INPUT", "Result Type": "INPUT", "Arguments": [6], "Removed Arguments": [], "Result": 6}, {"Node Type": "INPUT", "Result Type": "INPUT", "Arguments": [7], "Removed Arguments": [7], "Result": 7}, {"Node Type": "INPUT", "Result Type": "INPUT", "Arguments": [8], "Removed Arguments": [], "Result": 8}, {"Node Type": "COLUMN", "Result Type": "COLUMN", "Column": "Const(String)", "Arguments": [], "Removed Arguments": [], "Result": 9}, {"Node Type": "COLUMN", "Result Type": "COLUMN", "Column": "Const(UInt16)", "Arguments": [], "Removed Arguments": [], "Result": 10}, {"Node Type": "COLUMN", "Result Type": "COLUMN", "Column": "Const(UInt16)", "Arguments": [], "Removed Arguments": [], "Result": 11}, {"Node Type": "FUNCTION", "Result Type": "FUNCTION", "Function": "equals", "Compiled": false, "Arguments": [0, 2], "Removed Arguments": [0, 2], "Result": 12}, {"Node Type": "FUNCTION", "Result Type": "FUNCTION", "Function": "equals", "Compiled": false, "Arguments": [6, 8], "Removed Arguments": [6], "Result": 2}, {"Node Type": "FUNCTION", "Result Type": "FUNCTION", "Function": "equals", "Compiled": false, "Arguments": [8, 3], "Removed Arguments": [8, 3], "Result": 6}, {"Node Type": "FUNCTION", "Result Type": "FUNCTION", "Function": "equals", "Compiled": false, "Arguments": [1, 9], "Removed Arguments": [1, 9], "Result": 3}, {"Node Type": "FUNCTION", "Result Type": "FUNCTION", "Function": "greaterOrEquals", "Compiled": false, "Arguments": [4, 10], "Removed Arguments": [10], "Result": 9}, {"Node Type": "FUNCTION", "Result Type": "FUNCTION", "Function": "lessOrEquals", "Compiled": false, "Arguments": [4, 11], "Removed Arguments": [11], "Result": 10}, {"Node Type": "FUNCTION", "Result Type": "FUNCTION", "Function": "and", "Compiled": false, "Arguments": [3, 9, 10, 2, 6, 12], "Removed Arguments": [3, 9, 10, 2, 6, 12], "Result": 11}], "Outputs": [{"Name": "production_year", "Type": "Int64"}, {"Name": "title", "Type": "String"}, {"Name": "note", "Type": "String"}, {"Name": "and(equals(--it.info, 'bottom 10 rank'), and(greaterOrEquals(production_year, 2005), lessOrEquals(production_year, 2010)), equals(--t.id, movie_id), equals(--t.id, --mi_idx.movie_id), equals(movie_id, --mi_idx.movie_id), equals(--it.id, info_type_id))", "Type": "UInt8"}], "Positions": [4, 5, 7, 11], "Project Input": true}, "Plans": [{"Node Type": "Join", "Description": "JOIN", "Header": [{"Name": "--it.id", "Type": "Int64"}, {"Name": "--it.info", "Type": "String"}, {"Name": "info_type_id", "Type": "Int64"}, {"Name": "--mi_idx.movie_id", "Type": "Int64"}, {"Name": "production_year", "Type": "Int64"}, {"Name": "title", "Type": "String"}, {"Name": "--t.id", "Type": "Int64"}, {"Name": "note", "Type": "String"}, {"Name": "movie_id", "Type": "Int64"}], "Plans": [{"Node Type": "Filter", "Description": "( + (Before JOIN + (Projection + Before ORDER BY)))", "Header": [{"Name": "--it.id", "Type": "Int64"}, {"Name": "--it.info", "Type": "String"}, {"Name": "info_type_id", "Type": "Int64"}, {"Name": "--mi_idx.movie_id", "Type": "Int64"}, {"Name": "production_year", "Type": "Int64"}, {"Name": "title", "Type": "String"}, {"Name": "--t.id", "Type": "Int64"}], "Filter Column": "equals(--t.id, --mi_idx.movie_id)", "Removes Filter": true, "Expression": {"Inputs": [{"Name": "--it.id", "Type": "Int64"}, {"Name": "--it.info", "Type": "String"}, {"Name": "info_type_id", "Type": "Int64"}, {"Name": "--mi_idx.movie_id", "Type": "Int64"}, {"Name": "id", "Type": "Int64"}, {"Name": "title", "Type": "String"}, {"Name": "production_year", "Type": "Int64"}], "Actions": [{"Node Type": "INPUT", "Result Type": "INPUT", "Arguments": [0], "Removed Arguments": [0], "Result": 0}, {"Node Type": "INPUT", "Result Type": "INPUT", "Arguments": [1], "Removed Arguments": [1], "Result": 1}, {"Node Type": "INPUT", "Result Type": "INPUT", "Arguments": [2], "Removed Arguments": [2], "Result": 2}, {"Node Type": "INPUT", "Result Type": "INPUT", "Arguments": [3], "Removed Arguments": [], "Result": 3}, {"Node Type": "INPUT", "Result Type": "INPUT", "Arguments": [4], "Removed Arguments": [], "Result": 4}, {"Node Type": "INPUT", "Result Type": "INPUT", "Arguments": [5], "Removed Arguments": [5], "Result": 5}, {"Node Type": "INPUT", "Result Type": "INPUT", "Arguments": [6], "Removed Arguments": [6], "Result": 6}, {"Node Type": "ALIAS", "Result Type": "ALIAS", "Arguments": [4], "Removed Arguments": [4], "Result": 7}, {"Node Type": "FUNCTION", "Result Type": "FUNCTION", "Function": "equals", "Compiled": false, "Arguments": [7, 3], "Removed Arguments": [], "Result": 4}], "Outputs": [{"Name": "equals(--t.id, --mi_idx.movie_id)", "Type": "UInt8"}, {"Name": "--it.id", "Type": "Int64"}, {"Name": "--it.info", "Type": "String"}, {"Name": "info_type_id", "Type": "Int64"}, {"Name": "--mi_idx.movie_id", "Type": "Int64"}, {"Name": "production_year", "Type": "Int64"}, {"Name": "title", "Type": "String"}, {"Name": "--t.id", "Type": "Int64"}], "Positions": [4, 0, 1, 2, 3, 6, 5, 7], "Project Input": true}, "Plans": [{"Node Type": "Filter", "Description": "WHERE", "Header": [{"Name": "--it.id", "Type": "Int64"}, {"Name": "--it.info", "Type": "String"}, {"Name": "info_type_id", "Type": "Int64"}, {"Name": "--mi_idx.movie_id", "Type": "Int64"}, {"Name": "id", "Type": "Int64"}, {"Name": "title", "Type": "String"}, {"Name": "production_year", "Type": "Int64"}], "Filter Column": "and(and(and(and(lessOrEquals(production_year, 2010), greaterOrEquals(production_year, 2005)), equals(--it.id, info_type_id)), equals(id, --mi_idx.movie_id)), equals(--it.info, 'bottom 10 rank'))", "Removes Filter": true, "Expression": {"Inputs": [{"Name": "--it.id", "Type": "Int64"}, {"Name": "--it.info", "Type": "String"}, {"Name": "info_type_id", "Type": "Int64"}, {"Name": "--mi_idx.movie_id", "Type": "Int64"}, {"Name": "id", "Type": "Int64"}, {"Name": "title", "Type": "String"}, {"Name": "production_year", "Type": "Int64"}], "Actions": [{"Node Type": "INPUT", "Result Type": "INPUT", "Arguments": [0], "Removed Arguments": [], "Result": 0}, {"Node Type": "INPUT", "Result Type": "INPUT", "Arguments": [1], "Removed Arguments": [], "Result": 1}, {"Node Type": "INPUT", "Result Type": "INPUT", "Arguments": [2], "Removed Arguments": [], "Result": 2}, {"Node Type": "INPUT", "Result Type": "INPUT", "Arguments": [3], "Removed Arguments": [], "Result": 3}, {"Node Type": "INPUT", "Result Type": "INPUT", "Arguments": [4], "Removed Arguments": [], "Result": 4}, {"Node Type": "INPUT", "Result Type": "INPUT", "Arguments": [5], "Removed Arguments": [5], "Result": 5}, {"Node Type": "INPUT", "Result Type": "INPUT", "Arguments": [6], "Removed Arguments": [], "Result": 6}, {"Node Type": "COLUMN", "Result Type": "COLUMN", "Column": "Const(UInt16)", "Arguments": [], "Removed Arguments": [], "Result": 7}, {"Node Type": "COLUMN", "Result Type": "COLUMN", "Column": "Const(UInt16)", "Arguments": [], "Removed Arguments": [], "Result": 8}, {"Node Type": "COLUMN", "Result Type": "COLUMN", "Column": "Const(String)", "Arguments": [], "Removed Arguments": [], "Result": 9}, {"Node Type": "FUNCTION", "Result Type": "FUNCTION", "Function": "equals", "Compiled": false, "Arguments": [0, 2], "Removed Arguments": [], "Result": 10}, {"Node Type": "FUNCTION", "Result Type": "FUNCTION", "Function": "equals", "Compiled": false, "Arguments": [4, 3], "Removed Arguments": [], "Result": 11}, {"Node Type": "FUNCTION", "Result Type": "FUNCTION", "Function": "lessOrEquals", "Compiled": false, "Arguments": [6, 7], "Removed Arguments": [7], "Result": 12}, {"Node Type": "FUNCTION", "Result Type": "FUNCTION", "Function": "greaterOrEquals", "Compiled": false, "Arguments": [6, 8], "Removed Arguments": [8], "Result": 7}, {"Node Type": "FUNCTION", "Result Type": "FUNCTION", "Function": "equals", "Compiled": false, "Arguments": [1, 9], "Removed Arguments": [9], "Result": 8}, {"Node Type": "FUNCTION", "Result Type": "FUNCTION", "Function": "and", "Compiled": false, "Arguments": [12, 7], "Removed Arguments": [12, 7], "Result": 9}, {"Node Type": "FUNCTION", "Result Type": "FUNCTION", "Function": "and", "Compiled": false, "Arguments": [9, 10], "Removed Arguments": [9, 10], "Result": 7}, {"Node Type": "FUNCTION", "Result Type": "FUNCTION", "Function": "and", "Compiled": false, "Arguments": [7, 11], "Removed Arguments": [7, 11], "Result": 10}, {"Node Type": "FUNCTION", "Result Type": "FUNCTION", "Function": "and", "Compiled": false, "Arguments": [10, 8], "Removed Arguments": [10, 8], "Result": 11}], "Outputs": [{"Name": "--it.id", "Type": "Int64"}, {"Name": "--it.info", "Type": "String"}, {"Name": "info_type_id", "Type": "Int64"}, {"Name": "--mi_idx.movie_id", "Type": "Int64"}, {"Name": "id", "Type": "Int64"}, {"Name": "title", "Type": "String"}, {"Name": "production_year", "Type": "Int64"}, {"Name": "and(and(and(and(lessOrEquals(production_year, 2010), greaterOrEquals(production_year, 2005)), equals(--it.id, info_type_id)), equals(id, --mi_idx.movie_id)), equals(--it.info, 'bottom 10 rank'))", "Type": "UInt8"}], "Positions": [0, 1, 2, 3, 4, 5, 6, 11], "Project Input": true}, "Plans": [{"Node Type": "Join", "Description": "JOIN", "Header": [{"Name": "--it.id", "Type": "Int64"}, {"Name": "--it.info", "Type": "String"}, {"Name": "info_type_id", "Type": "Int64"}, {"Name": "--mi_idx.movie_id", "Type": "Int64"}, {"Name": "id", "Type": "Int64"}, {"Name": "title", "Type": "String"}, {"Name": "production_year", "Type": "Int64"}], "Plans": [{"Node Type": "Expression", "Description": "(Before JOIN + (Projection + Before ORDER BY))", "Header": [{"Name": "--it.id", "Type": "Int64"}, {"Name": "--it.info", "Type": "String"}, {"Name": "info_type_id", "Type": "Int64"}, {"Name": "--mi_idx.movie_id", "Type": "Int64"}], "Expression": {"Inputs": [{"Name": "info", "Type": "String"}, {"Name": "id", "Type": "Int64"}, {"Name": "movie_id", "Type": "Int64"}, {"Name": "info_type_id", "Type": "Int64"}], "Actions": [{"Node Type": "INPUT", "Result Type": "INPUT", "Arguments": [0], "Removed Arguments": [], "Result": 0}, {"Node Type": "INPUT", "Result Type": "INPUT", "Arguments": [1], "Removed Arguments": [], "Result": 1}, {"Node Type": "INPUT", "Result Type": "INPUT", "Arguments": [2], "Removed Arguments": [], "Result": 2}, {"Node Type": "INPUT", "Result Type": "INPUT", "Arguments": [3], "Removed Arguments": [3], "Result": 3}, {"Node Type": "ALIAS", "Result Type": "ALIAS", "Arguments": [0], "Removed Arguments": [0], "Result": 4}, {"Node Type": "ALIAS", "Result Type": "ALIAS", "Arguments": [1], "Removed Arguments": [1], "Result": 0}, {"Node Type": "ALIAS", "Result Type": "ALIAS", "Arguments": [2], "Removed Arguments": [2], "Result": 1}], "Outputs": [{"Name": "--it.id", "Type": "Int64"}, {"Name": "--it.info", "Type": "String"}, {"Name": "info_type_id", "Type": "Int64"}, {"Name": "--mi_idx.movie_id", "Type": "Int64"}], "Positions": [0, 4, 3, 1], "Project Input": true}, "Plans": [{"Node Type": "Filter", "Description": "WHERE", "Header": [{"Name": "info", "Type": "String"}, {"Name": "id", "Type": "Int64"}, {"Name": "movie_id", "Type": "Int64"}, {"Name": "info_type_id", "Type": "Int64"}], "Filter Column": "and(equals(info, 'bottom 10 rank'), equals(id, info_type_id))", "Removes Filter": true, "Expression": {"Inputs": [{"Name": "equals(info, 'bottom 10 rank')", "Type": "UInt8"}, {"Name": "info", "Type": "String"}, {"Name": "id", "Type": "Int64"}, {"Name": "movie_id", "Type": "Int64"}, {"Name": "info_type_id", "Type": "Int64"}], "Actions": [{"Node Type": "INPUT", "Result Type": "INPUT", "Arguments": [0], "Removed Arguments": [], "Result": 0}, {"Node Type": "INPUT", "Result Type": "INPUT", "Arguments": [1], "Removed Arguments": [1], "Result": 1}, {"Node Type": "INPUT", "Result Type": "INPUT", "Arguments": [2], "Removed Arguments": [], "Result": 2}, {"Node Type": "INPUT", "Result Type": "INPUT", "Arguments": [3], "Removed Arguments": [3], "Result": 3}, {"Node Type": "INPUT", "Result Type": "INPUT", "Arguments": [4], "Removed Arguments": [], "Result": 4}, {"Node Type": "FUNCTION", "Result Type": "FUNCTION", "Function": "equals", "Compiled": false, "Arguments": [2, 4], "Removed Arguments": [], "Result": 5}, {"Node Type": "FUNCTION", "Result Type": "FUNCTION", "Function": "and", "Compiled": false, "Arguments": [0, 5], "Removed Arguments": [0, 5], "Result": 6}], "Outputs": [{"Name": "info", "Type": "String"}, {"Name": "id", "Type": "Int64"}, {"Name": "movie_id", "Type": "Int64"}, {"Name": "info_type_id", "Type": "Int64"}, {"Name": "and(equals(info, 'bottom 10 rank'), equals(id, info_type_id))", "Type": "UInt8"}], "Positions": [1, 2, 3, 4, 6], "Project Input": true}, "Plans": [{"Node Type": "Join", "Description": "JOIN", "Header": [{"Name": "equals(info, 'bottom 10 rank')", "Type": "UInt8"}, {"Name": "info", "Type": "String"}, {"Name": "id", "Type": "Int64"}, {"Name": "movie_id", "Type": "Int64"}, {"Name": "info_type_id", "Type": "Int64"}], "Plans": [{"Node Type": "Expression", "Description": "Before JOIN", "Header": [{"Name": "equals(info, 'bottom 10 rank')", "Type": "UInt8"}, {"Name": "info", "Type": "String"}, {"Name": "id", "Type": "Int64"}], "Expression": {"Inputs": [{"Name": "equals(info, 'bottom 10 rank')", "Type": "UInt8"}, {"Name": "info", "Type": "String"}, {"Name": "id", "Type": "Int64"}], "Actions": [{"Node Type": "INPUT", "Result Type": "INPUT", "Arguments": [0], "Removed Arguments": [0], "Result": 0}, {"Node Type": "INPUT", "Result Type": "INPUT", "Arguments": [1], "Removed Arguments": [1], "Result": 1}, {"Node Type": "INPUT", "Result Type": "INPUT", "Arguments": [2], "Removed Arguments": [2], "Result": 2}], "Outputs": [{"Name": "equals(info, 'bottom 10 rank')", "Type": "UInt8"}, {"Name": "info", "Type": "String"}, {"Name": "id", "Type": "Int64"}], "Positions": [0, 1, 2], "Project Input": false}, "Plans": [{"Node Type": "SettingQuotaAndLimits", "Description": "Set limits and quota after reading from storage", "Header": [{"Name": "equals(info, 'bottom 10 rank')", "Type": "UInt8"}, {"Name": "info", "Type": "String"}, {"Name": "id", "Type": "Int64"}], "Plans": [{"Node Type": "ReadFromMergeTree", "Header": [{"Name": "equals(info, 'bottom 10 rank')", "Type": "UInt8"}, {"Name": "info", "Type": "String"}, {"Name": "id", "Type": "Int64"}], "Read Type": "Default", "Parts": 1, "Granules": 1}]}]}, {"Node Type": "Expression", "Description": "(Joined actions + (Rename joined columns + (Projection + Before ORDER BY)))", "Header": [{"Name": "info_type_id", "Type": "Int64"}, {"Name": "movie_id", "Type": "Int64"}], "Expression": {"Inputs": [{"Name": "movie_id", "Type": "Int64"}, {"Name": "info_type_id", "Type": "Int64"}], "Actions": [{"Node Type": "INPUT", "Result Type": "INPUT", "Arguments": [0], "Removed Arguments": [], "Result": 0}, {"Node Type": "INPUT", "Result Type": "INPUT", "Arguments": [1], "Removed Arguments": [], "Result": 1}, {"Node Type": "ALIAS", "Result Type": "ALIAS", "Arguments": [0], "Removed Arguments": [0], "Result": 2}, {"Node Type": "ALIAS", "Result Type": "ALIAS", "Arguments": [1], "Removed Arguments": [1], "Result": 0}], "Outputs": [{"Name": "info_type_id", "Type": "Int64"}, {"Name": "movie_id", "Type": "Int64"}], "Positions": [0, 2], "Project Input": true}, "Plans": [{"Node Type": "SettingQuotaAndLimits", "Description": "Set limits and quota after reading from storage", "Header": [{"Name": "movie_id", "Type": "Int64"}, {"Name": "info_type_id", "Type": "Int64"}], "Plans": [{"Node Type": "ReadFromMergeTree", "Header": [{"Name": "movie_id", "Type": "Int64"}, {"Name": "info_type_id", "Type": "Int64"}], "Read Type": "Default", "Parts": 2, "Granules": 169}]}]}]}]}]}, {"Node Type": "Expression", "Description": "(Joined actions + (Rename joined columns + (Projection + Before ORDER BY)))", "Header": [{"Name": "id", "Type": "Int64"}, {"Name": "--t.id", "Type": "Int64"}, {"Name": "title", "Type": "String"}, {"Name": "production_year", "Type": "Int64"}], "Expression": {"Inputs": [{"Name": "id", "Type": "Int64"}, {"Name": "title", "Type": "String"}, {"Name": "production_year", "Type": "Int64"}], "Actions": [{"Node Type": "INPUT", "Result Type": "INPUT", "Arguments": [0], "Removed Arguments": [], "Result": 0}, {"Node Type": "INPUT", "Result Type": "INPUT", "Arguments": [1], "Removed Arguments": [], "Result": 1}, {"Node Type": "INPUT", "Result Type": "INPUT", "Arguments": [2], "Removed Arguments": [], "Result": 2}, {"Node Type": "ALIAS", "Result Type": "ALIAS", "Arguments": [0], "Removed Arguments": [0], "Result": 3}, {"Node Type": "ALIAS", "Result Type": "ALIAS", "Arguments": [1], "Removed Arguments": [1], "Result": 0}, {"Node Type": "ALIAS", "Result Type": "ALIAS", "Arguments": [2], "Removed Arguments": [2], "Result": 1}, {"Node Type": "ALIAS", "Result Type": "ALIAS", "Arguments": [3], "Removed Arguments": [], "Result": 2}], "Outputs": [{"Name": "id", "Type": "Int64"}, {"Name": "--t.id", "Type": "Int64"}, {"Name": "title", "Type": "String"}, {"Name": "production_year", "Type": "Int64"}], "Positions": [3, 2, 0, 1], "Project Input": true}, "Plans": [{"Node Type": "SettingQuotaAndLimits", "Description": "Set limits and quota after reading from storage", "Header": [{"Name": "id", "Type": "Int64"}, {"Name": "title", "Type": "String"}, {"Name": "production_year", "Type": "Int64"}], "Plans": [{"Node Type": "ReadFromMergeTree", "Header": [{"Name": "id", "Type": "Int64"}, {"Name": "title", "Type": "String"}, {"Name": "production_year", "Type": "Int64"}], "Read Type": "Default", "Parts": 2, "Granules": 308}]}]}]}]}]}, {"Node Type": "Expression", "Description": "(Joined actions + (Rename joined columns + (Projection + Before ORDER BY)))", "Header": [{"Name": "movie_id", "Type": "Int64"}, {"Name": "note", "Type": "String"}], "Expression": {"Inputs": [{"Name": "note", "Type": "String"}, {"Name": "movie_id", "Type": "Int64"}], "Actions": [{"Node Type": "INPUT", "Result Type": "INPUT", "Arguments": [0], "Removed Arguments": [], "Result": 0}, {"Node Type": "INPUT", "Result Type": "INPUT", "Arguments": [1], "Removed Arguments": [], "Result": 1}, {"Node Type": "ALIAS", "Result Type": "ALIAS", "Arguments": [0], "Removed Arguments": [0], "Result": 2}, {"Node Type": "ALIAS", "Result Type": "ALIAS", "Arguments": [1], "Removed Arguments": [1], "Result": 0}], "Outputs": [{"Name": "movie_id", "Type": "Int64"}, {"Name": "note", "Type": "String"}], "Positions": [0, 2], "Project Input": true}, "Plans": [{"Node Type": "SettingQuotaAndLimits", "Description": "Set limits and quota after reading from storage", "Header": [{"Name": "note", "Type": "String"}, {"Name": "movie_id", "Type": "Int64"}], "Plans": [{"Node Type": "SettingQuotaAndLimits", "Description": "Lock destination table for MaterializedView", "Header": [{"Name": "note", "Type": "String"}, {"Name": "movie_id", "Type": "Int64"}], "Plans": [{"Node Type": "ReadFromMergeTree", "Header": [{"Name": "note", "Type": "String"}, {"Name": "movie_id", "Type": "Int64"}], "Read Type": "Default", "Parts": 1, "Granules": 163}]}]}]}]}]}]}]}]}}]