[{
	"Plan": {
		"Node Type": "Expression",
		"Description": "(Projection + Before ORDER BY)",
		"Header": [{
			"Name": "production_note",
			"Type": "String"
		}, {
			"Name": "movie_title",
			"Type": "String"
		}, {
			"Name": "movie_year",
			"Type": "Int64"
		}],
		"Expression": {
			"Inputs": [{
				"Name": "min(--mc.note)",
				"Type": "String"
			}, {
				"Name": "min(title)",
				"Type": "String"
			}, {
				"Name": "min(production_year)",
				"Type": "Int64"
			}],
			"Actions": [{
				"Node Type": "INPUT",
				"Result Type": "INPUT",
				"Arguments": [0],
				"Removed Arguments": [],
				"Result": 0
			}, {
				"Node Type": "INPUT",
				"Result Type": "INPUT",
				"Arguments": [1],
				"Removed Arguments": [],
				"Result": 1
			}, {
				"Node Type": "INPUT",
				"Result Type": "INPUT",
				"Arguments": [2],
				"Removed Arguments": [],
				"Result": 2
			}, {
				"Node Type": "ALIAS",
				"Result Type": "ALIAS",
				"Arguments": [0],
				"Removed Arguments": [0],
				"Result": 3
			}, {
				"Node Type": "ALIAS",
				"Result Type": "ALIAS",
				"Arguments": [1],
				"Removed Arguments": [1],
				"Result": 0
			}, {
				"Node Type": "ALIAS",
				"Result Type": "ALIAS",
				"Arguments": [2],
				"Removed Arguments": [2],
				"Result": 1
			}],
			"Outputs": [{
				"Name": "production_note",
				"Type": "String"
			}, {
				"Name": "movie_title",
				"Type": "String"
			}, {
				"Name": "movie_year",
				"Type": "Int64"
			}],
			"Positions": [3, 0, 1],
			"Project Input": true
		},
		"Plans": [{
			"Node Type": "Aggregating",
			"Header": [{
				"Name": "min(--mc.note)",
				"Type": "String"
			}, {
				"Name": "min(title)",
				"Type": "String"
			}, {
				"Name": "min(production_year)",
				"Type": "Int64"
			}],
			"Keys": [],
			"Aggregates": [{
				"Name": "min(--mc.note)",
				"Function": {
					"Name": "min",
					"Argument Types": ["String"],
					"Result Type": "String"
				},
				"Arguments": ["--mc.note"],
				"Argument Positions": [0]
			}, {
				"Name": "min(title)",
				"Function": {
					"Name": "min",
					"Argument Types": ["String"],
					"Result Type": "String"
				},
				"Arguments": ["title"],
				"Argument Positions": [1]
			}, {
				"Name": "min(production_year)",
				"Function": {
					"Name": "min",
					"Argument Types": ["Int64"],
					"Result Type": "Int64"
				},
				"Arguments": ["production_year"],
				"Argument Positions": [2]
			}],
			"Plans": [{
				"Node Type": "Expression",
				"Description": "Before GROUP BY",
				"Header": [{
					"Name": "--mc.note",
					"Type": "String"
				}, {
					"Name": "title",
					"Type": "String"
				}, {
					"Name": "production_year",
					"Type": "Int64"
				}],
				"Expression": {
					"Inputs": [{
						"Name": "--mc.note",
						"Type": "String"
					}, {
						"Name": "title",
						"Type": "String"
					}, {
						"Name": "production_year",
						"Type": "Int64"
					}],
					"Actions": [{
						"Node Type": "INPUT",
						"Result Type": "INPUT",
						"Arguments": [0],
						"Removed Arguments": [0],
						"Result": 0
					}, {
						"Node Type": "INPUT",
						"Result Type": "INPUT",
						"Arguments": [1],
						"Removed Arguments": [1],
						"Result": 1
					}, {
						"Node Type": "INPUT",
						"Result Type": "INPUT",
						"Arguments": [2],
						"Removed Arguments": [2],
						"Result": 2
					}],
					"Outputs": [{
						"Name": "--mc.note",
						"Type": "String"
					}, {
						"Name": "title",
						"Type": "String"
					}, {
						"Name": "production_year",
						"Type": "Int64"
					}],
					"Positions": [0, 1, 2],
					"Project Input": true
				},
				"Plans": [{
					"Node Type": "Filter",
					"Description": "WHERE",
					"Header": [{
						"Name": "--mc.note",
						"Type": "String"
					}, {
						"Name": "title",
						"Type": "String"
					}, {
						"Name": "production_year",
						"Type": "Int64"
					}],
					"Filter Column": "and(equals(kind, 'production companies'), equals(--it.info, 'top 250 rank'), notLike(--mc.note, '%(as Metro-Goldwyn-Mayer Pictures)%'), or(like(--mc.note, '%(co-production)%'), like(--mc.note, '%(presents)%')), equals(--ct.id, company_type_id), equals(id, --mc.movie_id), equals(id, --mi_idx.movie_id), equals(--mc.movie_id, --mi_idx.movie_id), equals(--it.id, info_type_id))",
					"Removes Filter": true,
					"Expression": {
						"Inputs": [{
							"Name": "kind",
							"Type": "String"
						}, {
							"Name": "--ct.id",
							"Type": "Int64"
						}, {
							"Name": "--it.id",
							"Type": "Int64"
						}, {
							"Name": "--it.info",
							"Type": "String"
						}, {
							"Name": "company_type_id",
							"Type": "Int64"
						}, {
							"Name": "--mc.movie_id",
							"Type": "Int64"
						}, {
							"Name": "--mc.note",
							"Type": "String"
						}, {
							"Name": "info_type_id",
							"Type": "Int64"
						}, {
							"Name": "--mi_idx.movie_id",
							"Type": "Int64"
						}, {
							"Name": "id",
							"Type": "Int64"
						}, {
							"Name": "title",
							"Type": "String"
						}, {
							"Name": "production_year",
							"Type": "Int64"
						}],
						"Actions": [{
							"Node Type": "INPUT",
							"Result Type": "INPUT",
							"Arguments": [0],
							"Removed Arguments": [],
							"Result": 0
						}, {
							"Node Type": "INPUT",
							"Result Type": "INPUT",
							"Arguments": [1],
							"Removed Arguments": [],
							"Result": 1
						}, {
							"Node Type": "INPUT",
							"Result Type": "INPUT",
							"Arguments": [2],
							"Removed Arguments": [],
							"Result": 2
						}, {
							"Node Type": "INPUT",
							"Result Type": "INPUT",
							"Arguments": [3],
							"Removed Arguments": [],
							"Result": 3
						}, {
							"Node Type": "INPUT",
							"Result Type": "INPUT",
							"Arguments": [4],
							"Removed Arguments": [],
							"Result": 4
						}, {
							"Node Type": "INPUT",
							"Result Type": "INPUT",
							"Arguments": [5],
							"Removed Arguments": [],
							"Result": 5
						}, {
							"Node Type": "INPUT",
							"Result Type": "INPUT",
							"Arguments": [6],
							"Removed Arguments": [],
							"Result": 6
						}, {
							"Node Type": "INPUT",
							"Result Type": "INPUT",
							"Arguments": [7],
							"Removed Arguments": [],
							"Result": 7
						}, {
							"Node Type": "INPUT",
							"Result Type": "INPUT",
							"Arguments": [8],
							"Removed Arguments": [],
							"Result": 8
						}, {
							"Node Type": "INPUT",
							"Result Type": "INPUT",
							"Arguments": [9],
							"Removed Arguments": [],
							"Result": 9
						}, {
							"Node Type": "INPUT",
							"Result Type": "INPUT",
							"Arguments": [10],
							"Removed Arguments": [10],
							"Result": 10
						}, {
							"Node Type": "INPUT",
							"Result Type": "INPUT",
							"Arguments": [11],
							"Removed Arguments": [11],
							"Result": 11
						}, {
							"Node Type": "COLUMN",
							"Result Type": "COLUMN",
							"Column": "Const(String)",
							"Arguments": [],
							"Removed Arguments": [],
							"Result": 12
						}, {
							"Node Type": "COLUMN",
							"Result Type": "COLUMN",
							"Column": "Const(String)",
							"Arguments": [],
							"Removed Arguments": [],
							"Result": 13
						}, {
							"Node Type": "COLUMN",
							"Result Type": "COLUMN",
							"Column": "Const(String)",
							"Arguments": [],
							"Removed Arguments": [],
							"Result": 14
						}, {
							"Node Type": "COLUMN",
							"Result Type": "COLUMN",
							"Column": "Const(String)",
							"Arguments": [],
							"Removed Arguments": [],
							"Result": 15
						}, {
							"Node Type": "COLUMN",
							"Result Type": "COLUMN",
							"Column": "Const(String)",
							"Arguments": [],
							"Removed Arguments": [],
							"Result": 16
						}, {
							"Node Type": "FUNCTION",
							"Result Type": "FUNCTION",
							"Function": "equals",
							"Compiled": false,
							"Arguments": [1, 4],
							"Removed Arguments": [1, 4],
							"Result": 17
						}, {
							"Node Type": "FUNCTION",
							"Result Type": "FUNCTION",
							"Function": "equals",
							"Compiled": false,
							"Arguments": [2, 7],
							"Removed Arguments": [2, 7],
							"Result": 4
						}, {
							"Node Type": "FUNCTION",
							"Result Type": "FUNCTION",
							"Function": "equals",
							"Compiled": false,
							"Arguments": [9, 5],
							"Removed Arguments": [5],
							"Result": 7
						}, {
							"Node Type": "FUNCTION",
							"Result Type": "FUNCTION",
							"Function": "equals",
							"Compiled": false,
							"Arguments": [9, 8],
							"Removed Arguments": [9, 8],
							"Result": 5
						}, {
							"Node Type": "FUNCTION",
							"Result Type": "FUNCTION",
							"Function": "equals",
							"Compiled": false,
							"Arguments": [0, 12],
							"Removed Arguments": [0, 12],
							"Result": 8
						}, {
							"Node Type": "FUNCTION",
							"Result Type": "FUNCTION",
							"Function": "equals",
							"Compiled": false,
							"Arguments": [3, 13],
							"Removed Arguments": [3, 13],
							"Result": 12
						}, {
							"Node Type": "FUNCTION",
							"Result Type": "FUNCTION",
							"Function": "notLike",
							"Compiled": false,
							"Arguments": [6, 14],
							"Removed Arguments": [14],
							"Result": 13
						}, {
							"Node Type": "FUNCTION",
							"Result Type": "FUNCTION",
							"Function": "like",
							"Compiled": false,
							"Arguments": [6, 15],
							"Removed Arguments": [15],
							"Result": 14
						}, {
							"Node Type": "FUNCTION",
							"Result Type": "FUNCTION",
							"Function": "like",
							"Compiled": false,
							"Arguments": [6, 16],
							"Removed Arguments": [16],
							"Result": 15
						}, {
							"Node Type": "FUNCTION",
							"Result Type": "FUNCTION",
							"Function": "or",
							"Compiled": false,
							"Arguments": [14, 15],
							"Removed Arguments": [14, 15],
							"Result": 16
						}, {
							"Node Type": "FUNCTION",
							"Result Type": "FUNCTION",
							"Function": "and",
							"Compiled": false,
							"Arguments": [8, 12, 13, 16, 17, 7, 5, 4],
							"Removed Arguments": [8, 12, 13, 16, 17, 7, 5, 4],
							"Result": 15
						}],
						"Outputs": [{
							"Name": "--mc.note",
							"Type": "String"
						}, {
							"Name": "title",
							"Type": "String"
						}, {
							"Name": "production_year",
							"Type": "Int64"
						}, {
							"Name": "and(equals(kind, 'production companies'), equals(--it.info, 'top 250 rank'), notLike(--mc.note, '%(as Metro-Goldwyn-Mayer Pictures)%'), or(like(--mc.note, '%(co-production)%'), like(--mc.note, '%(presents)%')), equals(--ct.id, company_type_id), equals(id, --mc.movie_id), equals(id, --mi_idx.movie_id), equals(--mc.movie_id, --mi_idx.movie_id), equals(--it.id, info_type_id))",
							"Type": "UInt8"
						}],
						"Positions": [6, 10, 11, 15],
						"Project Input": true
					},
					"Plans": [{
						"Node Type": "Join",
						"Description": "JOIN",
						"Header": [{
							"Name": "kind",
							"Type": "String"
						}, {
							"Name": "--ct.id",
							"Type": "Int64"
						}, {
							"Name": "--it.id",
							"Type": "Int64"
						}, {
							"Name": "--it.info",
							"Type": "String"
						}, {
							"Name": "company_type_id",
							"Type": "Int64"
						}, {
							"Name": "--mc.movie_id",
							"Type": "Int64"
						}, {
							"Name": "--mc.note",
							"Type": "String"
						}, {
							"Name": "info_type_id",
							"Type": "Int64"
						}, {
							"Name": "--mi_idx.movie_id",
							"Type": "Int64"
						}, {
							"Name": "title",
							"Type": "String"
						}, {
							"Name": "production_year",
							"Type": "Int64"
						}, {
							"Name": "id",
							"Type": "Int64"
						}],
						"Plans": [{
							"Node Type": "Filter",
							"Description": "( + (Before JOIN + (Projection + Before ORDER BY)))",
							"Header": [{
								"Name": "kind",
								"Type": "String"
							}, {
								"Name": "--ct.id",
								"Type": "Int64"
							}, {
								"Name": "--it.id",
								"Type": "Int64"
							}, {
								"Name": "--it.info",
								"Type": "String"
							}, {
								"Name": "company_type_id",
								"Type": "Int64"
							}, {
								"Name": "--mc.movie_id",
								"Type": "Int64"
							}, {
								"Name": "--mc.note",
								"Type": "String"
							}, {
								"Name": "info_type_id",
								"Type": "Int64"
							}, {
								"Name": "--mi_idx.movie_id",
								"Type": "Int64"
							}],
							"Filter Column": "equals(--mc.movie_id, --mi_idx.movie_id)",
							"Removes Filter": true,
							"Expression": {
								"Inputs": [{
									"Name": "kind",
									"Type": "String"
								}, {
									"Name": "--ct.id",
									"Type": "Int64"
								}, {
									"Name": "--it.id",
									"Type": "Int64"
								}, {
									"Name": "--it.info",
									"Type": "String"
								}, {
									"Name": "company_type_id",
									"Type": "Int64"
								}, {
									"Name": "--mc.movie_id",
									"Type": "Int64"
								}, {
									"Name": "--mc.note",
									"Type": "String"
								}, {
									"Name": "movie_id",
									"Type": "Int64"
								}, {
									"Name": "info_type_id",
									"Type": "Int64"
								}],
								"Actions": [{
									"Node Type": "INPUT",
									"Result Type": "INPUT",
									"Arguments": [0],
									"Removed Arguments": [0],
									"Result": 0
								}, {
									"Node Type": "INPUT",
									"Result Type": "INPUT",
									"Arguments": [1],
									"Removed Arguments": [1],
									"Result": 1
								}, {
									"Node Type": "INPUT",
									"Result Type": "INPUT",
									"Arguments": [2],
									"Removed Arguments": [2],
									"Result": 2
								}, {
									"Node Type": "INPUT",
									"Result Type": "INPUT",
									"Arguments": [3],
									"Removed Arguments": [3],
									"Result": 3
								}, {
									"Node Type": "INPUT",
									"Result Type": "INPUT",
									"Arguments": [4],
									"Removed Arguments": [4],
									"Result": 4
								}, {
									"Node Type": "INPUT",
									"Result Type": "INPUT",
									"Arguments": [5],
									"Removed Arguments": [],
									"Result": 5
								}, {
									"Node Type": "INPUT",
									"Result Type": "INPUT",
									"Arguments": [6],
									"Removed Arguments": [6],
									"Result": 6
								}, {
									"Node Type": "INPUT",
									"Result Type": "INPUT",
									"Arguments": [7],
									"Removed Arguments": [],
									"Result": 7
								}, {
									"Node Type": "INPUT",
									"Result Type": "INPUT",
									"Arguments": [8],
									"Removed Arguments": [8],
									"Result": 8
								}, {
									"Node Type": "ALIAS",
									"Result Type": "ALIAS",
									"Arguments": [7],
									"Removed Arguments": [7],
									"Result": 9
								}, {
									"Node Type": "FUNCTION",
									"Result Type": "FUNCTION",
									"Function": "equals",
									"Compiled": false,
									"Arguments": [5, 9],
									"Removed Arguments": [],
									"Result": 7
								}],
								"Outputs": [{
									"Name": "equals(--mc.movie_id, --mi_idx.movie_id)",
									"Type": "UInt8"
								}, {
									"Name": "kind",
									"Type": "String"
								}, {
									"Name": "--ct.id",
									"Type": "Int64"
								}, {
									"Name": "--it.id",
									"Type": "Int64"
								}, {
									"Name": "--it.info",
									"Type": "String"
								}, {
									"Name": "company_type_id",
									"Type": "Int64"
								}, {
									"Name": "--mc.movie_id",
									"Type": "Int64"
								}, {
									"Name": "--mc.note",
									"Type": "String"
								}, {
									"Name": "info_type_id",
									"Type": "Int64"
								}, {
									"Name": "--mi_idx.movie_id",
									"Type": "Int64"
								}],
								"Positions": [7, 0, 1, 2, 3, 4, 5, 6, 8, 9],
								"Project Input": true
							},
							"Plans": [{
								"Node Type": "Filter",
								"Description": "WHERE",
								"Header": [{
									"Name": "kind",
									"Type": "String"
								}, {
									"Name": "--ct.id",
									"Type": "Int64"
								}, {
									"Name": "--it.id",
									"Type": "Int64"
								}, {
									"Name": "--it.info",
									"Type": "String"
								}, {
									"Name": "company_type_id",
									"Type": "Int64"
								}, {
									"Name": "--mc.movie_id",
									"Type": "Int64"
								}, {
									"Name": "--mc.note",
									"Type": "String"
								}, {
									"Name": "movie_id",
									"Type": "Int64"
								}, {
									"Name": "info_type_id",
									"Type": "Int64"
								}],
								"Filter Column": "and(and(and(and(and(and(equals(--it.id, info_type_id), equals(--mc.movie_id, movie_id)), equals(--ct.id, company_type_id)), or(like(--mc.note, '%(co-production)%'), like(--mc.note, '%(presents)%'))), notLike(--mc.note, '%(as Metro-Goldwyn-Mayer Pictures)%')), equals(--it.info, 'top 250 rank')), equals(kind, 'production companies'))",
								"Removes Filter": true,
								"Expression": {
									"Inputs": [{
										"Name": "kind",
										"Type": "String"
									}, {
										"Name": "--ct.id",
										"Type": "Int64"
									}, {
										"Name": "--it.id",
										"Type": "Int64"
									}, {
										"Name": "--it.info",
										"Type": "String"
									}, {
										"Name": "company_type_id",
										"Type": "Int64"
									}, {
										"Name": "--mc.movie_id",
										"Type": "Int64"
									}, {
										"Name": "--mc.note",
										"Type": "String"
									}, {
										"Name": "movie_id",
										"Type": "Int64"
									}, {
										"Name": "info_type_id",
										"Type": "Int64"
									}],
									"Actions": [{
										"Node Type": "INPUT",
										"Result Type": "INPUT",
										"Arguments": [0],
										"Removed Arguments": [],
										"Result": 0
									}, {
										"Node Type": "INPUT",
										"Result Type": "INPUT",
										"Arguments": [1],
										"Removed Arguments": [],
										"Result": 1
									}, {
										"Node Type": "INPUT",
										"Result Type": "INPUT",
										"Arguments": [2],
										"Removed Arguments": [],
										"Result": 2
									}, {
										"Node Type": "INPUT",
										"Result Type": "INPUT",
										"Arguments": [3],
										"Removed Arguments": [],
										"Result": 3
									}, {
										"Node Type": "INPUT",
										"Result Type": "INPUT",
										"Arguments": [4],
										"Removed Arguments": [],
										"Result": 4
									}, {
										"Node Type": "INPUT",
										"Result Type": "INPUT",
										"Arguments": [5],
										"Removed Arguments": [],
										"Result": 5
									}, {
										"Node Type": "INPUT",
										"Result Type": "INPUT",
										"Arguments": [6],
										"Removed Arguments": [],
										"Result": 6
									}, {
										"Node Type": "INPUT",
										"Result Type": "INPUT",
										"Arguments": [7],
										"Removed Arguments": [],
										"Result": 7
									}, {
										"Node Type": "INPUT",
										"Result Type": "INPUT",
										"Arguments": [8],
										"Removed Arguments": [],
										"Result": 8
									}, {
										"Node Type": "COLUMN",
										"Result Type": "COLUMN",
										"Column": "Const(String)",
										"Arguments": [],
										"Removed Arguments": [],
										"Result": 9
									}, {
										"Node Type": "COLUMN",
										"Result Type": "COLUMN",
										"Column": "Const(String)",
										"Arguments": [],
										"Removed Arguments": [],
										"Result": 10
									}, {
										"Node Type": "COLUMN",
										"Result Type": "COLUMN",
										"Column": "Const(String)",
										"Arguments": [],
										"Removed Arguments": [],
										"Result": 11
									}, {
										"Node Type": "COLUMN",
										"Result Type": "COLUMN",
										"Column": "Const(String)",
										"Arguments": [],
										"Removed Arguments": [],
										"Result": 12
									}, {
										"Node Type": "COLUMN",
										"Result Type": "COLUMN",
										"Column": "Const(String)",
										"Arguments": [],
										"Removed Arguments": [],
										"Result": 13
									}, {
										"Node Type": "FUNCTION",
										"Result Type": "FUNCTION",
										"Function": "equals",
										"Compiled": false,
										"Arguments": [1, 4],
										"Removed Arguments": [],
										"Result": 14
									}, {
										"Node Type": "FUNCTION",
										"Result Type": "FUNCTION",
										"Function": "equals",
										"Compiled": false,
										"Arguments": [5, 7],
										"Removed Arguments": [],
										"Result": 15
									}, {
										"Node Type": "FUNCTION",
										"Result Type": "FUNCTION",
										"Function": "equals",
										"Compiled": false,
										"Arguments": [2, 8],
										"Removed Arguments": [],
										"Result": 16
									}, {
										"Node Type": "FUNCTION",
										"Result Type": "FUNCTION",
										"Function": "like",
										"Compiled": false,
										"Arguments": [6, 9],
										"Removed Arguments": [9],
										"Result": 17
									}, {
										"Node Type": "FUNCTION",
										"Result Type": "FUNCTION",
										"Function": "like",
										"Compiled": false,
										"Arguments": [6, 10],
										"Removed Arguments": [10],
										"Result": 9
									}, {
										"Node Type": "FUNCTION",
										"Result Type": "FUNCTION",
										"Function": "notLike",
										"Compiled": false,
										"Arguments": [6, 11],
										"Removed Arguments": [11],
										"Result": 10
									}, {
										"Node Type": "FUNCTION",
										"Result Type": "FUNCTION",
										"Function": "equals",
										"Compiled": false,
										"Arguments": [3, 12],
										"Removed Arguments": [12],
										"Result": 11
									}, {
										"Node Type": "FUNCTION",
										"Result Type": "FUNCTION",
										"Function": "equals",
										"Compiled": false,
										"Arguments": [0, 13],
										"Removed Arguments": [13],
										"Result": 12
									}, {
										"Node Type": "FUNCTION",
										"Result Type": "FUNCTION",
										"Function": "and",
										"Compiled": false,
										"Arguments": [16, 15],
										"Removed Arguments": [16, 15],
										"Result": 13
									}, {
										"Node Type": "FUNCTION",
										"Result Type": "FUNCTION",
										"Function": "or",
										"Compiled": false,
										"Arguments": [17, 9],
										"Removed Arguments": [17, 9],
										"Result": 15
									}, {
										"Node Type": "FUNCTION",
										"Result Type": "FUNCTION",
										"Function": "and",
										"Compiled": false,
										"Arguments": [13, 14],
										"Removed Arguments": [13, 14],
										"Result": 9
									}, {
										"Node Type": "FUNCTION",
										"Result Type": "FUNCTION",
										"Function": "and",
										"Compiled": false,
										"Arguments": [9, 15],
										"Removed Arguments": [9, 15],
										"Result": 14
									}, {
										"Node Type": "FUNCTION",
										"Result Type": "FUNCTION",
										"Function": "and",
										"Compiled": false,
										"Arguments": [14, 10],
										"Removed Arguments": [14, 10],
										"Result": 15
									}, {
										"Node Type": "FUNCTION",
										"Result Type": "FUNCTION",
										"Function": "and",
										"Compiled": false,
										"Arguments": [15, 11],
										"Removed Arguments": [15, 11],
										"Result": 10
									}, {
										"Node Type": "FUNCTION",
										"Result Type": "FUNCTION",
										"Function": "and",
										"Compiled": false,
										"Arguments": [10, 12],
										"Removed Arguments": [10, 12],
										"Result": 11
									}],
									"Outputs": [{
										"Name": "kind",
										"Type": "String"
									}, {
										"Name": "--ct.id",
										"Type": "Int64"
									}, {
										"Name": "--it.id",
										"Type": "Int64"
									}, {
										"Name": "--it.info",
										"Type": "String"
									}, {
										"Name": "company_type_id",
										"Type": "Int64"
									}, {
										"Name": "--mc.movie_id",
										"Type": "Int64"
									}, {
										"Name": "--mc.note",
										"Type": "String"
									}, {
										"Name": "movie_id",
										"Type": "Int64"
									}, {
										"Name": "info_type_id",
										"Type": "Int64"
									}, {
										"Name": "and(and(and(and(and(and(equals(--it.id, info_type_id), equals(--mc.movie_id, movie_id)), equals(--ct.id, company_type_id)), or(like(--mc.note, '%(co-production)%'), like(--mc.note, '%(presents)%'))), notLike(--mc.note, '%(as Metro-Goldwyn-Mayer Pictures)%')), equals(--it.info, 'top 250 rank')), equals(kind, 'production companies'))",
										"Type": "UInt8"
									}],
									"Positions": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11],
									"Project Input": true
								},
								"Plans": [{
									"Node Type": "Join",
									"Description": "JOIN",
									"Header": [{
										"Name": "kind",
										"Type": "String"
									}, {
										"Name": "--ct.id",
										"Type": "Int64"
									}, {
										"Name": "--it.id",
										"Type": "Int64"
									}, {
										"Name": "--it.info",
										"Type": "String"
									}, {
										"Name": "company_type_id",
										"Type": "Int64"
									}, {
										"Name": "--mc.movie_id",
										"Type": "Int64"
									}, {
										"Name": "--mc.note",
										"Type": "String"
									}, {
										"Name": "movie_id",
										"Type": "Int64"
									}, {
										"Name": "info_type_id",
										"Type": "Int64"
									}],
									"Plans": [{
										"Node Type": "Expression",
										"Description": "(Before JOIN + (Projection + Before ORDER BY))",
										"Header": [{
											"Name": "kind",
											"Type": "String"
										}, {
											"Name": "--ct.id",
											"Type": "Int64"
										}, {
											"Name": "--it.id",
											"Type": "Int64"
										}, {
											"Name": "--it.info",
											"Type": "String"
										}, {
											"Name": "company_type_id",
											"Type": "Int64"
										}, {
											"Name": "--mc.movie_id",
											"Type": "Int64"
										}, {
											"Name": "--mc.note",
											"Type": "String"
										}],
										"Expression": {
											"Inputs": [{
												"Name": "kind",
												"Type": "String"
											}, {
												"Name": "--ct.id",
												"Type": "Int64"
											}, {
												"Name": "--it.id",
												"Type": "Int64"
											}, {
												"Name": "--it.info",
												"Type": "String"
											}, {
												"Name": "movie_id",
												"Type": "Int64"
											}, {
												"Name": "company_type_id",
												"Type": "Int64"
											}, {
												"Name": "note",
												"Type": "String"
											}],
											"Actions": [{
												"Node Type": "INPUT",
												"Result Type": "INPUT",
												"Arguments": [0],
												"Removed Arguments": [0],
												"Result": 0
											}, {
												"Node Type": "INPUT",
												"Result Type": "INPUT",
												"Arguments": [1],
												"Removed Arguments": [1],
												"Result": 1
											}, {
												"Node Type": "INPUT",
												"Result Type": "INPUT",
												"Arguments": [2],
												"Removed Arguments": [2],
												"Result": 2
											}, {
												"Node Type": "INPUT",
												"Result Type": "INPUT",
												"Arguments": [3],
												"Removed Arguments": [3],
												"Result": 3
											}, {
												"Node Type": "INPUT",
												"Result Type": "INPUT",
												"Arguments": [4],
												"Removed Arguments": [],
												"Result": 4
											}, {
												"Node Type": "INPUT",
												"Result Type": "INPUT",
												"Arguments": [5],
												"Removed Arguments": [5],
												"Result": 5
											}, {
												"Node Type": "INPUT",
												"Result Type": "INPUT",
												"Arguments": [6],
												"Removed Arguments": [],
												"Result": 6
											}, {
												"Node Type": "ALIAS",
												"Result Type": "ALIAS",
												"Arguments": [4],
												"Removed Arguments": [4],
												"Result": 7
											}, {
												"Node Type": "ALIAS",
												"Result Type": "ALIAS",
												"Arguments": [6],
												"Removed Arguments": [6],
												"Result": 4
											}],
											"Outputs": [{
												"Name": "kind",
												"Type": "String"
											}, {
												"Name": "--ct.id",
												"Type": "Int64"
											}, {
												"Name": "--it.id",
												"Type": "Int64"
											}, {
												"Name": "--it.info",
												"Type": "String"
											}, {
												"Name": "company_type_id",
												"Type": "Int64"
											}, {
												"Name": "--mc.movie_id",
												"Type": "Int64"
											}, {
												"Name": "--mc.note",
												"Type": "String"
											}],
											"Positions": [0, 1, 2, 3, 5, 7, 4],
											"Project Input": true
										},
										"Plans": [{
											"Node Type": "Filter",
											"Description": "WHERE",
											"Header": [{
												"Name": "kind",
												"Type": "String"
											}, {
												"Name": "--ct.id",
												"Type": "Int64"
											}, {
												"Name": "--it.id",
												"Type": "Int64"
											}, {
												"Name": "--it.info",
												"Type": "String"
											}, {
												"Name": "movie_id",
												"Type": "Int64"
											}, {
												"Name": "company_type_id",
												"Type": "Int64"
											}, {
												"Name": "note",
												"Type": "String"
											}],
											"Filter Column": "and(and(and(and(equals(--ct.id, company_type_id), or(like(note, '%(co-production)%'), like(note, '%(presents)%'))), notLike(note, '%(as Metro-Goldwyn-Mayer Pictures)%')), equals(--it.info, 'top 250 rank')), equals(kind, 'production companies'))",
											"Removes Filter": true,
											"Expression": {
												"Inputs": [{
													"Name": "kind",
													"Type": "String"
												}, {
													"Name": "--ct.id",
													"Type": "Int64"
												}, {
													"Name": "--it.id",
													"Type": "Int64"
												}, {
													"Name": "--it.info",
													"Type": "String"
												}, {
													"Name": "movie_id",
													"Type": "Int64"
												}, {
													"Name": "company_type_id",
													"Type": "Int64"
												}, {
													"Name": "note",
													"Type": "String"
												}],
												"Actions": [{
													"Node Type": "INPUT",
													"Result Type": "INPUT",
													"Arguments": [0],
													"Removed Arguments": [],
													"Result": 0
												}, {
													"Node Type": "INPUT",
													"Result Type": "INPUT",
													"Arguments": [1],
													"Removed Arguments": [],
													"Result": 1
												}, {
													"Node Type": "INPUT",
													"Result Type": "INPUT",
													"Arguments": [2],
													"Removed Arguments": [2],
													"Result": 2
												}, {
													"Node Type": "INPUT",
													"Result Type": "INPUT",
													"Arguments": [3],
													"Removed Arguments": [],
													"Result": 3
												}, {
													"Node Type": "INPUT",
													"Result Type": "INPUT",
													"Arguments": [4],
													"Removed Arguments": [4],
													"Result": 4
												}, {
													"Node Type": "INPUT",
													"Result Type": "INPUT",
													"Arguments": [5],
													"Removed Arguments": [],
													"Result": 5
												}, {
													"Node Type": "INPUT",
													"Result Type": "INPUT",
													"Arguments": [6],
													"Removed Arguments": [],
													"Result": 6
												}, {
													"Node Type": "COLUMN",
													"Result Type": "COLUMN",
													"Column": "Const(String)",
													"Arguments": [],
													"Removed Arguments": [],
													"Result": 7
												}, {
													"Node Type": "COLUMN",
													"Result Type": "COLUMN",
													"Column": "Const(String)",
													"Arguments": [],
													"Removed Arguments": [],
													"Result": 8
												}, {
													"Node Type": "COLUMN",
													"Result Type": "COLUMN",
													"Column": "Const(String)",
													"Arguments": [],
													"Removed Arguments": [],
													"Result": 9
												}, {
													"Node Type": "COLUMN",
													"Result Type": "COLUMN",
													"Column": "Const(String)",
													"Arguments": [],
													"Removed Arguments": [],
													"Result": 10
												}, {
													"Node Type": "COLUMN",
													"Result Type": "COLUMN",
													"Column": "Const(String)",
													"Arguments": [],
													"Removed Arguments": [],
													"Result": 11
												}, {
													"Node Type": "FUNCTION",
													"Result Type": "FUNCTION",
													"Function": "equals",
													"Compiled": false,
													"Arguments": [1, 5],
													"Removed Arguments": [],
													"Result": 12
												}, {
													"Node Type": "FUNCTION",
													"Result Type": "FUNCTION",
													"Function": "like",
													"Compiled": false,
													"Arguments": [6, 7],
													"Removed Arguments": [7],
													"Result": 13
												}, {
													"Node Type": "FUNCTION",
													"Result Type": "FUNCTION",
													"Function": "like",
													"Compiled": false,
													"Arguments": [6, 8],
													"Removed Arguments": [8],
													"Result": 7
												}, {
													"Node Type": "FUNCTION",
													"Result Type": "FUNCTION",
													"Function": "notLike",
													"Compiled": false,
													"Arguments": [6, 9],
													"Removed Arguments": [9],
													"Result": 8
												}, {
													"Node Type": "FUNCTION",
													"Result Type": "FUNCTION",
													"Function": "equals",
													"Compiled": false,
													"Arguments": [3, 10],
													"Removed Arguments": [10],
													"Result": 9
												}, {
													"Node Type": "FUNCTION",
													"Result Type": "FUNCTION",
													"Function": "equals",
													"Compiled": false,
													"Arguments": [0, 11],
													"Removed Arguments": [11],
													"Result": 10
												}, {
													"Node Type": "FUNCTION",
													"Result Type": "FUNCTION",
													"Function": "or",
													"Compiled": false,
													"Arguments": [13, 7],
													"Removed Arguments": [13, 7],
													"Result": 11
												}, {
													"Node Type": "FUNCTION",
													"Result Type": "FUNCTION",
													"Function": "and",
													"Compiled": false,
													"Arguments": [12, 11],
													"Removed Arguments": [12, 11],
													"Result": 7
												}, {
													"Node Type": "FUNCTION",
													"Result Type": "FUNCTION",
													"Function": "and",
													"Compiled": false,
													"Arguments": [7, 8],
													"Removed Arguments": [7, 8],
													"Result": 11
												}, {
													"Node Type": "FUNCTION",
													"Result Type": "FUNCTION",
													"Function": "and",
													"Compiled": false,
													"Arguments": [11, 9],
													"Removed Arguments": [11, 9],
													"Result": 8
												}, {
													"Node Type": "FUNCTION",
													"Result Type": "FUNCTION",
													"Function": "and",
													"Compiled": false,
													"Arguments": [8, 10],
													"Removed Arguments": [8, 10],
													"Result": 9
												}],
												"Outputs": [{
													"Name": "kind",
													"Type": "String"
												}, {
													"Name": "--ct.id",
													"Type": "Int64"
												}, {
													"Name": "--it.id",
													"Type": "Int64"
												}, {
													"Name": "--it.info",
													"Type": "String"
												}, {
													"Name": "movie_id",
													"Type": "Int64"
												}, {
													"Name": "company_type_id",
													"Type": "Int64"
												}, {
													"Name": "note",
													"Type": "String"
												}, {
													"Name": "and(and(and(and(equals(--ct.id, company_type_id), or(like(note, '%(co-production)%'), like(note, '%(presents)%'))), notLike(note, '%(as Metro-Goldwyn-Mayer Pictures)%')), equals(--it.info, 'top 250 rank')), equals(kind, 'production companies'))",
													"Type": "UInt8"
												}],
												"Positions": [0, 1, 2, 3, 4, 5, 6, 9],
												"Project Input": true
											},
											"Plans": [{
												"Node Type": "Join",
												"Description": "JOIN",
												"Header": [{
													"Name": "kind",
													"Type": "String"
												}, {
													"Name": "--ct.id",
													"Type": "Int64"
												}, {
													"Name": "--it.id",
													"Type": "Int64"
												}, {
													"Name": "--it.info",
													"Type": "String"
												}, {
													"Name": "movie_id",
													"Type": "Int64"
												}, {
													"Name": "note",
													"Type": "String"
												}, {
													"Name": "company_type_id",
													"Type": "Int64"
												}],
												"Plans": [{
													"Node Type": "Expression",
													"Description": "(Before JOIN + (Projection + Before ORDER BY))",
													"Header": [{
														"Name": "kind",
														"Type": "String"
													}, {
														"Name": "--ct.id",
														"Type": "Int64"
													}, {
														"Name": "--it.id",
														"Type": "Int64"
													}, {
														"Name": "--it.info",
														"Type": "String"
													}],
													"Expression": {
														"Inputs": [{
															"Name": "kind",
															"Type": "String"
														}, {
															"Name": "id",
															"Type": "Int64"
														}, {
															"Name": "it.id",
															"Type": "Int64"
														}, {
															"Name": "info",
															"Type": "String"
														}],
														"Actions": [{
															"Node Type": "INPUT",
															"Result Type": "INPUT",
															"Arguments": [0],
															"Removed Arguments": [0],
															"Result": 0
														}, {
															"Node Type": "INPUT",
															"Result Type": "INPUT",
															"Arguments": [1],
															"Removed Arguments": [],
															"Result": 1
														}, {
															"Node Type": "INPUT",
															"Result Type": "INPUT",
															"Arguments": [2],
															"Removed Arguments": [],
															"Result": 2
														}, {
															"Node Type": "INPUT",
															"Result Type": "INPUT",
															"Arguments": [3],
															"Removed Arguments": [],
															"Result": 3
														}, {
															"Node Type": "ALIAS",
															"Result Type": "ALIAS",
															"Arguments": [1],
															"Removed Arguments": [1],
															"Result": 4
														}, {
															"Node Type": "ALIAS",
															"Result Type": "ALIAS",
															"Arguments": [2],
															"Removed Arguments": [2],
															"Result": 1
														}, {
															"Node Type": "ALIAS",
															"Result Type": "ALIAS",
															"Arguments": [3],
															"Removed Arguments": [3],
															"Result": 2
														}],
														"Outputs": [{
															"Name": "kind",
															"Type": "String"
														}, {
															"Name": "--ct.id",
															"Type": "Int64"
														}, {
															"Name": "--it.id",
															"Type": "Int64"
														}, {
															"Name": "--it.info",
															"Type": "String"
														}],
														"Positions": [0, 4, 1, 2],
														"Project Input": true
													},
													"Plans": [{
														"Node Type": "Filter",
														"Description": "WHERE",
														"Header": [{
															"Name": "kind",
															"Type": "String"
														}, {
															"Name": "id",
															"Type": "Int64"
														}, {
															"Name": "it.id",
															"Type": "Int64"
														}, {
															"Name": "info",
															"Type": "String"
														}],
														"Filter Column": "and(equals(kind, 'production companies'), equals(info, 'top 250 rank'))",
														"Removes Filter": true,
														"Expression": {
															"Inputs": [{
																"Name": "equals(kind, 'production companies')",
																"Type": "UInt8"
															}, {
																"Name": "kind",
																"Type": "String"
															}, {
																"Name": "id",
																"Type": "Int64"
															}, {
																"Name": "it.id",
																"Type": "Int64"
															}, {
																"Name": "info",
																"Type": "String"
															}],
															"Actions": [{
																"Node Type": "INPUT",
																"Result Type": "INPUT",
																"Arguments": [0],
																"Removed Arguments": [],
																"Result": 0
															}, {
																"Node Type": "INPUT",
																"Result Type": "INPUT",
																"Arguments": [1],
																"Removed Arguments": [1],
																"Result": 1
															}, {
																"Node Type": "INPUT",
																"Result Type": "INPUT",
																"Arguments": [2],
																"Removed Arguments": [2],
																"Result": 2
															}, {
																"Node Type": "INPUT",
																"Result Type": "INPUT",
																"Arguments": [3],
																"Removed Arguments": [3],
																"Result": 3
															}, {
																"Node Type": "INPUT",
																"Result Type": "INPUT",
																"Arguments": [4],
																"Removed Arguments": [],
																"Result": 4
															}, {
																"Node Type": "COLUMN",
																"Result Type": "COLUMN",
																"Column": "Const(String)",
																"Arguments": [],
																"Removed Arguments": [],
																"Result": 5
															}, {
																"Node Type": "FUNCTION",
																"Result Type": "FUNCTION",
																"Function": "equals",
																"Compiled": false,
																"Arguments": [4, 5],
																"Removed Arguments": [5],
																"Result": 6
															}, {
																"Node Type": "FUNCTION",
																"Result Type": "FUNCTION",
																"Function": "and",
																"Compiled": false,
																"Arguments": [0, 6],
																"Removed Arguments": [0, 6],
																"Result": 5
															}],
															"Outputs": [{
																"Name": "kind",
																"Type": "String"
															}, {
																"Name": "id",
																"Type": "Int64"
															}, {
																"Name": "it.id",
																"Type": "Int64"
															}, {
																"Name": "info",
																"Type": "String"
															}, {
																"Name": "and(equals(kind, 'production companies'), equals(info, 'top 250 rank'))",
																"Type": "UInt8"
															}],
															"Positions": [1, 2, 3, 4, 5],
															"Project Input": true
														},
														"Plans": [{
															"Node Type": "Join",
															"Description": "JOIN",
															"Header": [{
																"Name": "equals(kind, 'production companies')",
																"Type": "UInt8"
															}, {
																"Name": "kind",
																"Type": "String"
															}, {
																"Name": "id",
																"Type": "Int64"
															}, {
																"Name": "it.id",
																"Type": "Int64"
															}, {
																"Name": "info",
																"Type": "String"
															}],
															"Plans": [{
																"Node Type": "Expression",
																"Description": "Before JOIN",
																"Header": [{
																	"Name": "equals(kind, 'production companies')",
																	"Type": "UInt8"
																}, {
																	"Name": "kind",
																	"Type": "String"
																}, {
																	"Name": "id",
																	"Type": "Int64"
																}],
																"Expression": {
																	"Inputs": [{
																		"Name": "equals(kind, 'production companies')",
																		"Type": "UInt8"
																	}, {
																		"Name": "kind",
																		"Type": "String"
																	}, {
																		"Name": "id",
																		"Type": "Int64"
																	}],
																	"Actions": [{
																		"Node Type": "INPUT",
																		"Result Type": "INPUT",
																		"Arguments": [0],
																		"Removed Arguments": [0],
																		"Result": 0
																	}, {
																		"Node Type": "INPUT",
																		"Result Type": "INPUT",
																		"Arguments": [1],
																		"Removed Arguments": [1],
																		"Result": 1
																	}, {
																		"Node Type": "INPUT",
																		"Result Type": "INPUT",
																		"Arguments": [2],
																		"Removed Arguments": [2],
																		"Result": 2
																	}],
																	"Outputs": [{
																		"Name": "equals(kind, 'production companies')",
																		"Type": "UInt8"
																	}, {
																		"Name": "kind",
																		"Type": "String"
																	}, {
																		"Name": "id",
																		"Type": "Int64"
																	}],
																	"Positions": [0, 1, 2],
																	"Project Input": false
																},
																"Plans": [{
																	"Node Type": "SettingQuotaAndLimits",
																	"Description": "Set limits and quota after reading from storage",
																	"Header": [{
																		"Name": "equals(kind, 'production companies')",
																		"Type": "UInt8"
																	}, {
																		"Name": "kind",
																		"Type": "String"
																	}, {
																		"Name": "id",
																		"Type": "Int64"
																	}],
																	"Plans": [{
																		"Node Type": "ReadFromMergeTree",
																		"Header": [{
																			"Name": "equals(kind, 'production companies')",
																			"Type": "UInt8"
																		}, {
																			"Name": "kind",
																			"Type": "String"
																		}, {
																			"Name": "id",
																			"Type": "Int64"
																		}],
																		"Read Type": "Default",
																		"Parts": 1,
																		"Granules": 1
																	}]
																}]
															}, {
																"Node Type": "Expression",
																"Description": "(Joined actions + (Rename joined columns + (Projection + Before ORDER BY)))",
																"Header": [{
																	"Name": "it.id",
																	"Type": "Int64"
																}, {
																	"Name": "info",
																	"Type": "String"
																}],
																"Expression": {
																	"Inputs": [{
																		"Name": "id",
																		"Type": "Int64"
																	}, {
																		"Name": "info",
																		"Type": "String"
																	}],
																	"Actions": [{
																		"Node Type": "INPUT",
																		"Result Type": "INPUT",
																		"Arguments": [0],
																		"Removed Arguments": [],
																		"Result": 0
																	}, {
																		"Node Type": "INPUT",
																		"Result Type": "INPUT",
																		"Arguments": [1],
																		"Removed Arguments": [],
																		"Result": 1
																	}, {
																		"Node Type": "ALIAS",
																		"Result Type": "ALIAS",
																		"Arguments": [0],
																		"Removed Arguments": [0],
																		"Result": 2
																	}, {
																		"Node Type": "ALIAS",
																		"Result Type": "ALIAS",
																		"Arguments": [1],
																		"Removed Arguments": [1],
																		"Result": 0
																	}],
																	"Outputs": [{
																		"Name": "it.id",
																		"Type": "Int64"
																	}, {
																		"Name": "info",
																		"Type": "String"
																	}],
																	"Positions": [2, 0],
																	"Project Input": true
																},
																"Plans": [{
																	"Node Type": "SettingQuotaAndLimits",
																	"Description": "Set limits and quota after reading from storage",
																	"Header": [{
																		"Name": "id",
																		"Type": "Int64"
																	}, {
																		"Name": "info",
																		"Type": "String"
																	}],
																	"Plans": [{
																		"Node Type": "ReadFromMergeTree",
																		"Header": [{
																			"Name": "id",
																			"Type": "Int64"
																		}, {
																			"Name": "info",
																			"Type": "String"
																		}],
																		"Read Type": "Default",
																		"Parts": 1,
																		"Granules": 1
																	}]
																}]
															}]
														}]
													}]
												}, {
													"Node Type": "Expression",
													"Description": "(Joined actions + (Rename joined columns + (Projection + Before ORDER BY)))",
													"Header": [{
														"Name": "company_type_id",
														"Type": "Int64"
													}, {
														"Name": "movie_id",
														"Type": "Int64"
													}, {
														"Name": "note",
														"Type": "String"
													}],
													"Expression": {
														"Inputs": [{
															"Name": "movie_id",
															"Type": "Int64"
														}, {
															"Name": "company_type_id",
															"Type": "Int64"
														}, {
															"Name": "note",
															"Type": "String"
														}],
														"Actions": [{
															"Node Type": "INPUT",
															"Result Type": "INPUT",
															"Arguments": [0],
															"Removed Arguments": [],
															"Result": 0
														}, {
															"Node Type": "INPUT",
															"Result Type": "INPUT",
															"Arguments": [1],
															"Removed Arguments": [],
															"Result": 1
														}, {
															"Node Type": "INPUT",
															"Result Type": "INPUT",
															"Arguments": [2],
															"Removed Arguments": [],
															"Result": 2
														}, {
															"Node Type": "ALIAS",
															"Result Type": "ALIAS",
															"Arguments": [0],
															"Removed Arguments": [0],
															"Result": 3
														}, {
															"Node Type": "ALIAS",
															"Result Type": "ALIAS",
															"Arguments": [1],
															"Removed Arguments": [1],
															"Result": 0
														}, {
															"Node Type": "ALIAS",
															"Result Type": "ALIAS",
															"Arguments": [2],
															"Removed Arguments": [2],
															"Result": 1
														}],
														"Outputs": [{
															"Name": "company_type_id",
															"Type": "Int64"
														}, {
															"Name": "movie_id",
															"Type": "Int64"
														}, {
															"Name": "note",
															"Type": "String"
														}],
														"Positions": [0, 3, 1],
														"Project Input": true
													},
													"Plans": [{
														"Node Type": "SettingQuotaAndLimits",
														"Description": "Set limits and quota after reading from storage",
														"Header": [{
															"Name": "movie_id",
															"Type": "Int64"
														}, {
															"Name": "company_type_id",
															"Type": "Int64"
														}, {
															"Name": "note",
															"Type": "String"
														}],
														"Plans": [{
															"Node Type": "ReadFromMergeTree",
															"Header": [{
																"Name": "movie_id",
																"Type": "Int64"
															}, {
																"Name": "company_type_id",
																"Type": "Int64"
															}, {
																"Name": "note",
																"Type": "String"
															}],
															"Read Type": "Default",
															"Parts": 1,
															"Granules": 318
														}]
													}]
												}]
											}]
										}]
									}, {
										"Node Type": "Expression",
										"Description": "(Joined actions + (Rename joined columns + (Projection + Before ORDER BY)))",
										"Header": [{
											"Name": "movie_id",
											"Type": "Int64"
										}, {
											"Name": "info_type_id",
											"Type": "Int64"
										}, {
											"Name": "--mi_idx.movie_id",
											"Type": "Int64"
										}],
										"Expression": {
											"Inputs": [{
												"Name": "movie_id",
												"Type": "Int64"
											}, {
												"Name": "info_type_id",
												"Type": "Int64"
											}],
											"Actions": [{
												"Node Type": "INPUT",
												"Result Type": "INPUT",
												"Arguments": [0],
												"Removed Arguments": [],
												"Result": 0
											}, {
												"Node Type": "INPUT",
												"Result Type": "INPUT",
												"Arguments": [1],
												"Removed Arguments": [],
												"Result": 1
											}, {
												"Node Type": "ALIAS",
												"Result Type": "ALIAS",
												"Arguments": [0],
												"Removed Arguments": [0],
												"Result": 2
											}, {
												"Node Type": "ALIAS",
												"Result Type": "ALIAS",
												"Arguments": [1],
												"Removed Arguments": [1],
												"Result": 0
											}, {
												"Node Type": "ALIAS",
												"Result Type": "ALIAS",
												"Arguments": [2],
												"Removed Arguments": [],
												"Result": 1
											}],
											"Outputs": [{
												"Name": "movie_id",
												"Type": "Int64"
											}, {
												"Name": "info_type_id",
												"Type": "Int64"
											}, {
												"Name": "--mi_idx.movie_id",
												"Type": "Int64"
											}],
											"Positions": [2, 0, 1],
											"Project Input": true
										},
										"Plans": [{
											"Node Type": "SettingQuotaAndLimits",
											"Description": "Set limits and quota after reading from storage",
											"Header": [{
												"Name": "movie_id",
												"Type": "Int64"
											}, {
												"Name": "info_type_id",
												"Type": "Int64"
											}],
											"Plans": [{
												"Node Type": "ReadFromMergeTree",
												"Header": [{
													"Name": "movie_id",
													"Type": "Int64"
												}, {
													"Name": "info_type_id",
													"Type": "Int64"
												}],
												"Read Type": "Default",
												"Parts": 2,
												"Granules": 169
											}]
										}]
									}]
								}]
							}]
						}, {
							"Node Type": "Expression",
							"Description": "(Joined actions + (Rename joined columns + (Projection + Before ORDER BY)))",
							"Header": [{
								"Name": "id",
								"Type": "Int64"
							}, {
								"Name": "title",
								"Type": "String"
							}, {
								"Name": "production_year",
								"Type": "Int64"
							}],
							"Expression": {
								"Inputs": [{
									"Name": "id",
									"Type": "Int64"
								}, {
									"Name": "title",
									"Type": "String"
								}, {
									"Name": "production_year",
									"Type": "Int64"
								}],
								"Actions": [{
									"Node Type": "INPUT",
									"Result Type": "INPUT",
									"Arguments": [0],
									"Removed Arguments": [],
									"Result": 0
								}, {
									"Node Type": "INPUT",
									"Result Type": "INPUT",
									"Arguments": [1],
									"Removed Arguments": [],
									"Result": 1
								}, {
									"Node Type": "INPUT",
									"Result Type": "INPUT",
									"Arguments": [2],
									"Removed Arguments": [],
									"Result": 2
								}, {
									"Node Type": "ALIAS",
									"Result Type": "ALIAS",
									"Arguments": [0],
									"Removed Arguments": [0],
									"Result": 3
								}, {
									"Node Type": "ALIAS",
									"Result Type": "ALIAS",
									"Arguments": [1],
									"Removed Arguments": [1],
									"Result": 0
								}, {
									"Node Type": "ALIAS",
									"Result Type": "ALIAS",
									"Arguments": [2],
									"Removed Arguments": [2],
									"Result": 1
								}],
								"Outputs": [{
									"Name": "id",
									"Type": "Int64"
								}, {
									"Name": "title",
									"Type": "String"
								}, {
									"Name": "production_year",
									"Type": "Int64"
								}],
								"Positions": [3, 0, 1],
								"Project Input": true
							},
							"Plans": [{
								"Node Type": "SettingQuotaAndLimits",
								"Description": "Set limits and quota after reading from storage",
								"Header": [{
									"Name": "id",
									"Type": "Int64"
								}, {
									"Name": "title",
									"Type": "String"
								}, {
									"Name": "production_year",
									"Type": "Int64"
								}],
								"Plans": [{
									"Node Type": "ReadFromMergeTree",
									"Header": [{
										"Name": "id",
										"Type": "Int64"
									}, {
										"Name": "title",
										"Type": "String"
									}, {
										"Name": "production_year",
										"Type": "Int64"
									}],
									"Read Type": "Default",
									"Parts": 2,
									"Granules": 308
								}]
							}]
						}]
					}]
				}]
			}]
		}]
	}
}]