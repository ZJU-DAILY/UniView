== Physical Plan ==
TakeOrderedAndProject (108)
+- * Project (107)
   +- * SortMergeJoin Inner (106)
      :- * Project (91)
      :  +- * SortMergeJoin Inner (90)
      :     :- * Project (73)
      :     :  +- * SortMergeJoin Inner (72)
      :     :     :- * Project (57)
      :     :     :  +- * SortMergeJoin Inner (56)
      :     :     :     :- * SortMergeJoin Inner (39)
      :     :     :     :  :- * Sort (21)
      :     :     :     :  :  +- Exchange (20)
      :     :     :     :  :     +- * Filter (19)
      :     :     :     :  :        +- * HashAggregate (18)
      :     :     :     :  :           +- Exchange (17)
      :     :     :     :  :              +- * HashAggregate (16)
      :     :     :     :  :                 +- * Project (15)
      :     :     :     :  :                    +- * BroadcastHashJoin Inner BuildRight (14)
      :     :     :     :  :                       :- * Project (9)
      :     :     :     :  :                       :  +- * BroadcastHashJoin Inner BuildLeft (8)
      :     :     :     :  :                       :     :- BroadcastExchange (4)
      :     :     :     :  :                       :     :  +- * Filter (3)
      :     :     :     :  :                       :     :     +- * ColumnarToRow (2)
      :     :     :     :  :                       :     :        +- Scan orc tpcds_bin_partitioned_decimal_orc_2.customer (1)
      :     :     :     :  :                       :     +- * Filter (7)
      :     :     :     :  :                       :        +- * ColumnarToRow (6)
      :     :     :     :  :                       :           +- Scan orc tpcds_bin_partitioned_decimal_orc_2.store_sales (5)
      :     :     :     :  :                       +- BroadcastExchange (13)
      :     :     :     :  :                          +- * Filter (12)
      :     :     :     :  :                             +- * ColumnarToRow (11)
      :     :     :     :  :                                +- Scan orc tpcds_bin_partitioned_decimal_orc_2.date_dim (10)
      :     :     :     :  +- * Sort (38)
      :     :     :     :     +- Exchange (37)
      :     :     :     :        +- * HashAggregate (36)
      :     :     :     :           +- Exchange (35)
      :     :     :     :              +- * HashAggregate (34)
      :     :     :     :                 +- * Project (33)
      :     :     :     :                    +- * BroadcastHashJoin Inner BuildRight (32)
      :     :     :     :                       :- * Project (27)
      :     :     :     :                       :  +- * BroadcastHashJoin Inner BuildLeft (26)
      :     :     :     :                       :     :- ReusedExchange (22)
      :     :     :     :                       :     +- * Filter (25)
      :     :     :     :                       :        +- * ColumnarToRow (24)
      :     :     :     :                       :           +- Scan orc tpcds_bin_partitioned_decimal_orc_2.store_sales (23)
      :     :     :     :                       +- BroadcastExchange (31)
      :     :     :     :                          +- * Filter (30)
      :     :     :     :                             +- * ColumnarToRow (29)
      :     :     :     :                                +- Scan orc tpcds_bin_partitioned_decimal_orc_2.date_dim (28)
      :     :     :     +- * Sort (55)
      :     :     :        +- Exchange (54)
      :     :     :           +- * Project (53)
      :     :     :              +- * Filter (52)
      :     :     :                 +- * HashAggregate (51)
      :     :     :                    +- Exchange (50)
      :     :     :                       +- * HashAggregate (49)
      :     :     :                          +- * Project (48)
      :     :     :                             +- * BroadcastHashJoin Inner BuildRight (47)
      :     :     :                                :- * Project (45)
      :     :     :                                :  +- * BroadcastHashJoin Inner BuildLeft (44)
      :     :     :                                :     :- ReusedExchange (40)
      :     :     :                                :     +- * Filter (43)
      :     :     :                                :        +- * ColumnarToRow (42)
      :     :     :                                :           +- Scan orc tpcds_bin_partitioned_decimal_orc_2.catalog_sales (41)
      :     :     :                                +- ReusedExchange (46)
      :     :     +- * Sort (71)
      :     :        +- Exchange (70)
      :     :           +- * HashAggregate (69)
      :     :              +- Exchange (68)
      :     :                 +- * HashAggregate (67)
      :     :                    +- * Project (66)
      :     :                       +- * BroadcastHashJoin Inner BuildRight (65)
      :     :                          :- * Project (63)
      :     :                          :  +- * BroadcastHashJoin Inner BuildLeft (62)
      :     :                          :     :- ReusedExchange (58)
      :     :                          :     +- * Filter (61)
      :     :                          :        +- * ColumnarToRow (60)
      :     :                          :           +- Scan orc tpcds_bin_partitioned_decimal_orc_2.catalog_sales (59)
      :     :                          +- ReusedExchange (64)
      :     +- * Sort (89)
      :        +- Exchange (88)
      :           +- * Project (87)
      :              +- * Filter (86)
      :                 +- * HashAggregate (85)
      :                    +- Exchange (84)
      :                       +- * HashAggregate (83)
      :                          +- * Project (82)
      :                             +- * BroadcastHashJoin Inner BuildRight (81)
      :                                :- * Project (79)
      :                                :  +- * BroadcastHashJoin Inner BuildLeft (78)
      :                                :     :- ReusedExchange (74)
      :                                :     +- * Filter (77)
      :                                :        +- * ColumnarToRow (76)
      :                                :           +- Scan orc tpcds_bin_partitioned_decimal_orc_2.web_sales (75)
      :                                +- ReusedExchange (80)
      +- * Sort (105)
         +- Exchange (104)
            +- * HashAggregate (103)
               +- Exchange (102)
                  +- * HashAggregate (101)
                     +- * Project (100)
                        +- * BroadcastHashJoin Inner BuildRight (99)
                           :- * Project (97)
                           :  +- * BroadcastHashJoin Inner BuildLeft (96)
                           :     :- ReusedExchange (92)
                           :     +- * Filter (95)
                           :        +- * ColumnarToRow (94)
                           :           +- Scan orc tpcds_bin_partitioned_decimal_orc_2.web_sales (93)
                           +- ReusedExchange (98)


(1) Scan orc tpcds_bin_partitioned_decimal_orc_2.customer
Output [8]: [c_customer_sk#30L, c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46]
Batched: true
Location: InMemoryFileIndex [hdfs://server1:9000/user/hive/warehouse/tpcds_bin_partitioned_decimal_orc_2.db/customer]
PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_customer_id)]
ReadSchema: struct<c_customer_sk:bigint,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_cust_flag:string,c_birth_country:string,c_login:string,c_email_address:string>

(2) ColumnarToRow [codegen id : 1]
Input [8]: [c_customer_sk#30L, c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46]

(3) Filter [codegen id : 1]
Input [8]: [c_customer_sk#30L, c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46]
Condition : (isnotnull(c_customer_sk#30L) AND isnotnull(c_customer_id#31))

(4) BroadcastExchange
Input [8]: [c_customer_sk#30L, c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46]
Arguments: HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#801]

(5) Scan orc tpcds_bin_partitioned_decimal_orc_2.store_sales
Output [6]: [ss_customer_sk#50L, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, ss_sold_date_sk#70L]
Batched: true
Location: InMemoryFileIndex [hdfs://server1:9000/user/hive/warehouse/tpcds_bin_partitioned_decimal_orc_2.db/store_sales/ss_sold_date_sk=2450816, ... 1822 entries]
PartitionFilters: [isnotnull(ss_sold_date_sk#70L), dynamicpruningexpression(ss_sold_date_sk#70L IN dynamicpruning#1616)]
PushedFilters: [IsNotNull(ss_customer_sk)]
ReadSchema: struct<ss_customer_sk:bigint,ss_ext_discount_amt:decimal(7,2),ss_ext_sales_price:decimal(7,2),ss_ext_wholesale_cost:decimal(7,2),ss_ext_list_price:decimal(7,2)>

(6) ColumnarToRow
Input [6]: [ss_customer_sk#50L, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, ss_sold_date_sk#70L]

(7) Filter
Input [6]: [ss_customer_sk#50L, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, ss_sold_date_sk#70L]
Condition : isnotnull(ss_customer_sk#50L)

(8) BroadcastHashJoin [codegen id : 3]
Left keys [1]: [c_customer_sk#30L]
Right keys [1]: [ss_customer_sk#50L]
Join condition: None

(9) Project [codegen id : 3]
Output [12]: [c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, ss_sold_date_sk#70L]
Input [14]: [c_customer_sk#30L, c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, ss_customer_sk#50L, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, ss_sold_date_sk#70L]

(10) Scan orc tpcds_bin_partitioned_decimal_orc_2.date_dim
Output [2]: [d_date_sk#71L, d_year#77]
Batched: true
Location: InMemoryFileIndex [hdfs://server1:9000/user/hive/warehouse/tpcds_bin_partitioned_decimal_orc_2.db/date_dim]
PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:bigint,d_year:int>

(11) ColumnarToRow [codegen id : 2]
Input [2]: [d_date_sk#71L, d_year#77]

(12) Filter [codegen id : 2]
Input [2]: [d_date_sk#71L, d_year#77]
Condition : ((isnotnull(d_year#77) AND (d_year#77 = 2001)) AND isnotnull(d_date_sk#71L))

(13) BroadcastExchange
Input [2]: [d_date_sk#71L, d_year#77]
Arguments: HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#812]

(14) BroadcastHashJoin [codegen id : 3]
Left keys [1]: [ss_sold_date_sk#70L]
Right keys [1]: [d_date_sk#71L]
Join condition: None

(15) Project [codegen id : 3]
Output [12]: [c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, d_year#77]
Input [14]: [c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, ss_sold_date_sk#70L, d_date_sk#71L, d_year#77]

(16) HashAggregate [codegen id : 3]
Input [12]: [c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, ss_ext_discount_amt#61, ss_ext_sales_price#62, ss_ext_wholesale_cost#63, ss_ext_list_price#64, d_year#77]
Keys [8]: [c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, d_year#77]
Functions [1]: [partial_sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ss_ext_list_price#64 as decimal(8,2))) - promote_precision(cast(ss_ext_wholesale_cost#63 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(ss_ext_discount_amt#61 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(ss_ext_sales_price#62 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))]
Aggregate Attributes [2]: [sum#1622, isEmpty#1623]
Results [10]: [c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, d_year#77, sum#1624, isEmpty#1625]

(17) Exchange
Input [10]: [c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, d_year#77, sum#1624, isEmpty#1625]
Arguments: hashpartitioning(c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, d_year#77, 200), ENSURE_REQUIREMENTS, [id=#1404]

(18) HashAggregate [codegen id : 4]
Input [10]: [c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, d_year#77, sum#1624, isEmpty#1625]
Keys [8]: [c_customer_id#31, c_first_name#38, c_last_name#39, c_preferred_cust_flag#40, c_birth_country#44, c_login#45, c_email_address#46, d_year#77]
Functions [1]: [sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ss_ext_list_price#64 as decimal(8,2))) - promote_precision(cast(ss_ext_wholesale_cost#63 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(ss_ext_discount_amt#61 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(ss_ext_sales_price#62 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))]
Aggregate Attributes [1]: [sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ss_ext_list_price#64 as decimal(8,2))) - promote_precision(cast(ss_ext_wholesale_cost#63 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(ss_ext_discount_amt#61 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(ss_ext_sales_price#62 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))#1404]
Results [2]: [c_customer_id#31 AS customer_id#0, sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ss_ext_list_price#64 as decimal(8,2))) - promote_precision(cast(ss_ext_wholesale_cost#63 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(ss_ext_discount_amt#61 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(ss_ext_sales_price#62 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))#1404 AS year_total#8]

(19) Filter [codegen id : 4]
Input [2]: [customer_id#0, year_total#8]
Condition : (isnotnull(year_total#8) AND (year_total#8 > 0.000000))

(20) Exchange
Input [2]: [customer_id#0, year_total#8]
Arguments: hashpartitioning(customer_id#0, 200), ENSURE_REQUIREMENTS, [id=#1409]

(21) Sort [codegen id : 5]
Input [2]: [customer_id#0, year_total#8]
Arguments: [customer_id#0 ASC NULLS FIRST], false, 0

(22) ReusedExchange [Reuses operator id: 4]
Output [8]: [c_customer_sk#259L, c_customer_id#260, c_first_name#267, c_last_name#268, c_preferred_cust_flag#269, c_birth_country#273, c_login#274, c_email_address#275]

(23) Scan orc tpcds_bin_partitioned_decimal_orc_2.store_sales
Output [6]: [ss_customer_sk#279L, ss_ext_discount_amt#290, ss_ext_sales_price#291, ss_ext_wholesale_cost#292, ss_ext_list_price#293, ss_sold_date_sk#299L]
Batched: true
Location: InMemoryFileIndex [hdfs://server1:9000/user/hive/warehouse/tpcds_bin_partitioned_decimal_orc_2.db/store_sales/ss_sold_date_sk=2450816, ... 1822 entries]
PartitionFilters: [isnotnull(ss_sold_date_sk#299L), dynamicpruningexpression(ss_sold_date_sk#299L IN dynamicpruning#1617)]
PushedFilters: [IsNotNull(ss_customer_sk)]
ReadSchema: struct<ss_customer_sk:bigint,ss_ext_discount_amt:decimal(7,2),ss_ext_sales_price:decimal(7,2),ss_ext_wholesale_cost:decimal(7,2),ss_ext_list_price:decimal(7,2)>

(24) ColumnarToRow
Input [6]: [ss_customer_sk#279L, ss_ext_discount_amt#290, ss_ext_sales_price#291, ss_ext_wholesale_cost#292, ss_ext_list_price#293, ss_sold_date_sk#299L]

(25) Filter
Input [6]: [ss_customer_sk#279L, ss_ext_discount_amt#290, ss_ext_sales_price#291, ss_ext_wholesale_cost#292, ss_ext_list_price#293, ss_sold_date_sk#299L]
Condition : isnotnull(ss_customer_sk#279L)

(26) BroadcastHashJoin [codegen id : 8]
Left keys [1]: [c_customer_sk#259L]
Right keys [1]: [ss_customer_sk#279L]
Join condition: None

(27) Project [codegen id : 8]
Output [12]: [c_customer_id#260, c_first_name#267, c_last_name#268, c_preferred_cust_flag#269, c_birth_country#273, c_login#274, c_email_address#275, ss_ext_discount_amt#290, ss_ext_sales_price#291, ss_ext_wholesale_cost#292, ss_ext_list_price#293, ss_sold_date_sk#299L]
Input [14]: [c_customer_sk#259L, c_customer_id#260, c_first_name#267, c_last_name#268, c_preferred_cust_flag#269, c_birth_country#273, c_login#274, c_email_address#275, ss_customer_sk#279L, ss_ext_discount_amt#290, ss_ext_sales_price#291, ss_ext_wholesale_cost#292, ss_ext_list_price#293, ss_sold_date_sk#299L]

(28) Scan orc tpcds_bin_partitioned_decimal_orc_2.date_dim
Output [2]: [d_date_sk#300L, d_year#306]
Batched: true
Location: InMemoryFileIndex [hdfs://server1:9000/user/hive/warehouse/tpcds_bin_partitioned_decimal_orc_2.db/date_dim]
PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:bigint,d_year:int>

(29) ColumnarToRow [codegen id : 7]
Input [2]: [d_date_sk#300L, d_year#306]

(30) Filter [codegen id : 7]
Input [2]: [d_date_sk#300L, d_year#306]
Condition : ((isnotnull(d_year#306) AND (d_year#306 = 2002)) AND isnotnull(d_date_sk#300L))

(31) BroadcastExchange
Input [2]: [d_date_sk#300L, d_year#306]
Arguments: HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#843]

(32) BroadcastHashJoin [codegen id : 8]
Left keys [1]: [ss_sold_date_sk#299L]
Right keys [1]: [d_date_sk#300L]
Join condition: None

(33) Project [codegen id : 8]
Output [12]: [c_customer_id#260, c_first_name#267, c_last_name#268, c_preferred_cust_flag#269, c_birth_country#273, c_login#274, c_email_address#275, ss_ext_discount_amt#290, ss_ext_sales_price#291, ss_ext_wholesale_cost#292, ss_ext_list_price#293, d_year#306]
Input [14]: [c_customer_id#260, c_first_name#267, c_last_name#268, c_preferred_cust_flag#269, c_birth_country#273, c_login#274, c_email_address#275, ss_ext_discount_amt#290, ss_ext_sales_price#291, ss_ext_wholesale_cost#292, ss_ext_list_price#293, ss_sold_date_sk#299L, d_date_sk#300L, d_year#306]

(34) HashAggregate [codegen id : 8]
Input [12]: [c_customer_id#260, c_first_name#267, c_last_name#268, c_preferred_cust_flag#269, c_birth_country#273, c_login#274, c_email_address#275, ss_ext_discount_amt#290, ss_ext_sales_price#291, ss_ext_wholesale_cost#292, ss_ext_list_price#293, d_year#306]
Keys [8]: [c_customer_id#260, c_first_name#267, c_last_name#268, c_preferred_cust_flag#269, c_birth_country#273, c_login#274, c_email_address#275, d_year#306]
Functions [1]: [partial_sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ss_ext_list_price#293 as decimal(8,2))) - promote_precision(cast(ss_ext_wholesale_cost#292 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(ss_ext_discount_amt#290 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(ss_ext_sales_price#291 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))]
Aggregate Attributes [2]: [sum#1626, isEmpty#1627]
Results [10]: [c_customer_id#260, c_first_name#267, c_last_name#268, c_preferred_cust_flag#269, c_birth_country#273, c_login#274, c_email_address#275, d_year#306, sum#1628, isEmpty#1629]

(35) Exchange
Input [10]: [c_customer_id#260, c_first_name#267, c_last_name#268, c_preferred_cust_flag#269, c_birth_country#273, c_login#274, c_email_address#275, d_year#306, sum#1628, isEmpty#1629]
Arguments: hashpartitioning(c_customer_id#260, c_first_name#267, c_last_name#268, c_preferred_cust_flag#269, c_birth_country#273, c_login#274, c_email_address#275, d_year#306, 200), ENSURE_REQUIREMENTS, [id=#1426]

(36) HashAggregate [codegen id : 9]
Input [10]: [c_customer_id#260, c_first_name#267, c_last_name#268, c_preferred_cust_flag#269, c_birth_country#273, c_login#274, c_email_address#275, d_year#306, sum#1628, isEmpty#1629]
Keys [8]: [c_customer_id#260, c_first_name#267, c_last_name#268, c_preferred_cust_flag#269, c_birth_country#273, c_login#274, c_email_address#275, d_year#306]
Functions [1]: [sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ss_ext_list_price#293 as decimal(8,2))) - promote_precision(cast(ss_ext_wholesale_cost#292 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(ss_ext_discount_amt#290 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(ss_ext_sales_price#291 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))]
Aggregate Attributes [1]: [sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ss_ext_list_price#293 as decimal(8,2))) - promote_precision(cast(ss_ext_wholesale_cost#292 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(ss_ext_discount_amt#290 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(ss_ext_sales_price#291 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))#1407]
Results [8]: [c_customer_id#260 AS customer_id#1422, c_first_name#267 AS customer_first_name#1423, c_last_name#268 AS customer_last_name#1424, c_preferred_cust_flag#269 AS customer_preferred_cust_flag#1425, c_birth_country#273 AS customer_birth_country#1426, c_login#274 AS customer_login#1427, c_email_address#275 AS customer_email_address#1428, sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ss_ext_list_price#293 as decimal(8,2))) - promote_precision(cast(ss_ext_wholesale_cost#292 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(ss_ext_discount_amt#290 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(ss_ext_sales_price#291 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))#1407 AS year_total#1430]

(37) Exchange
Input [8]: [customer_id#1422, customer_first_name#1423, customer_last_name#1424, customer_preferred_cust_flag#1425, customer_birth_country#1426, customer_login#1427, customer_email_address#1428, year_total#1430]
Arguments: hashpartitioning(customer_id#1422, 200), ENSURE_REQUIREMENTS, [id=#1430]

(38) Sort [codegen id : 10]
Input [8]: [customer_id#1422, customer_first_name#1423, customer_last_name#1424, customer_preferred_cust_flag#1425, customer_birth_country#1426, customer_login#1427, customer_email_address#1428, year_total#1430]
Arguments: [customer_id#1422 ASC NULLS FIRST], false, 0

(39) SortMergeJoin [codegen id : 11]
Left keys [1]: [customer_id#0]
Right keys [1]: [customer_id#1422]
Join condition: None

(40) ReusedExchange [Reuses operator id: 4]
Output [8]: [c_customer_sk#557L, c_customer_id#558, c_first_name#565, c_last_name#566, c_preferred_cust_flag#567, c_birth_country#571, c_login#572, c_email_address#573]

(41) Scan orc tpcds_bin_partitioned_decimal_orc_2.catalog_sales
Output [6]: [cs_bill_customer_sk#577L, cs_ext_discount_amt#596, cs_ext_sales_price#597, cs_ext_wholesale_cost#598, cs_ext_list_price#599, cs_sold_date_sk#608L]
Batched: true
Location: InMemoryFileIndex [hdfs://server1:9000/user/hive/warehouse/tpcds_bin_partitioned_decimal_orc_2.db/catalog_sales/cs_sold_date_sk=2450815, ... 1838 entries]
PartitionFilters: [isnotnull(cs_sold_date_sk#608L), dynamicpruningexpression(cs_sold_date_sk#608L IN dynamicpruning#1616)]
PushedFilters: [IsNotNull(cs_bill_customer_sk)]
ReadSchema: struct<cs_bill_customer_sk:bigint,cs_ext_discount_amt:decimal(7,2),cs_ext_sales_price:decimal(7,2),cs_ext_wholesale_cost:decimal(7,2),cs_ext_list_price:decimal(7,2)>

(42) ColumnarToRow
Input [6]: [cs_bill_customer_sk#577L, cs_ext_discount_amt#596, cs_ext_sales_price#597, cs_ext_wholesale_cost#598, cs_ext_list_price#599, cs_sold_date_sk#608L]

(43) Filter
Input [6]: [cs_bill_customer_sk#577L, cs_ext_discount_amt#596, cs_ext_sales_price#597, cs_ext_wholesale_cost#598, cs_ext_list_price#599, cs_sold_date_sk#608L]
Condition : isnotnull(cs_bill_customer_sk#577L)

(44) BroadcastHashJoin [codegen id : 14]
Left keys [1]: [c_customer_sk#557L]
Right keys [1]: [cs_bill_customer_sk#577L]
Join condition: None

(45) Project [codegen id : 14]
Output [12]: [c_customer_id#558, c_first_name#565, c_last_name#566, c_preferred_cust_flag#567, c_birth_country#571, c_login#572, c_email_address#573, cs_ext_discount_amt#596, cs_ext_sales_price#597, cs_ext_wholesale_cost#598, cs_ext_list_price#599, cs_sold_date_sk#608L]
Input [14]: [c_customer_sk#557L, c_customer_id#558, c_first_name#565, c_last_name#566, c_preferred_cust_flag#567, c_birth_country#571, c_login#572, c_email_address#573, cs_bill_customer_sk#577L, cs_ext_discount_amt#596, cs_ext_sales_price#597, cs_ext_wholesale_cost#598, cs_ext_list_price#599, cs_sold_date_sk#608L]

(46) ReusedExchange [Reuses operator id: 13]
Output [2]: [d_date_sk#609L, d_year#615]

(47) BroadcastHashJoin [codegen id : 14]
Left keys [1]: [cs_sold_date_sk#608L]
Right keys [1]: [d_date_sk#609L]
Join condition: None

(48) Project [codegen id : 14]
Output [12]: [c_customer_id#558, c_first_name#565, c_last_name#566, c_preferred_cust_flag#567, c_birth_country#571, c_login#572, c_email_address#573, cs_ext_discount_amt#596, cs_ext_sales_price#597, cs_ext_wholesale_cost#598, cs_ext_list_price#599, d_year#615]
Input [14]: [c_customer_id#558, c_first_name#565, c_last_name#566, c_preferred_cust_flag#567, c_birth_country#571, c_login#572, c_email_address#573, cs_ext_discount_amt#596, cs_ext_sales_price#597, cs_ext_wholesale_cost#598, cs_ext_list_price#599, cs_sold_date_sk#608L, d_date_sk#609L, d_year#615]

(49) HashAggregate [codegen id : 14]
Input [12]: [c_customer_id#558, c_first_name#565, c_last_name#566, c_preferred_cust_flag#567, c_birth_country#571, c_login#572, c_email_address#573, cs_ext_discount_amt#596, cs_ext_sales_price#597, cs_ext_wholesale_cost#598, cs_ext_list_price#599, d_year#615]
Keys [8]: [c_customer_id#558, c_first_name#565, c_last_name#566, c_preferred_cust_flag#567, c_birth_country#571, c_login#572, c_email_address#573, d_year#615]
Functions [1]: [partial_sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cs_ext_list_price#599 as decimal(8,2))) - promote_precision(cast(cs_ext_wholesale_cost#598 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(cs_ext_discount_amt#596 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(cs_ext_sales_price#597 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))]
Aggregate Attributes [2]: [sum#1630, isEmpty#1631]
Results [10]: [c_customer_id#558, c_first_name#565, c_last_name#566, c_preferred_cust_flag#567, c_birth_country#571, c_login#572, c_email_address#573, d_year#615, sum#1632, isEmpty#1633]

(50) Exchange
Input [10]: [c_customer_id#558, c_first_name#565, c_last_name#566, c_preferred_cust_flag#567, c_birth_country#571, c_login#572, c_email_address#573, d_year#615, sum#1632, isEmpty#1633]
Arguments: hashpartitioning(c_customer_id#558, c_first_name#565, c_last_name#566, c_preferred_cust_flag#567, c_birth_country#571, c_login#572, c_email_address#573, d_year#615, 200), ENSURE_REQUIREMENTS, [id=#1556]

(51) HashAggregate [codegen id : 15]
Input [10]: [c_customer_id#558, c_first_name#565, c_last_name#566, c_preferred_cust_flag#567, c_birth_country#571, c_login#572, c_email_address#573, d_year#615, sum#1632, isEmpty#1633]
Keys [8]: [c_customer_id#558, c_first_name#565, c_last_name#566, c_preferred_cust_flag#567, c_birth_country#571, c_login#572, c_email_address#573, d_year#615]
Functions [1]: [sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cs_ext_list_price#599 as decimal(8,2))) - promote_precision(cast(cs_ext_wholesale_cost#598 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(cs_ext_discount_amt#596 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(cs_ext_sales_price#597 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))]
Aggregate Attributes [1]: [sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cs_ext_list_price#599 as decimal(8,2))) - promote_precision(cast(cs_ext_wholesale_cost#598 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(cs_ext_discount_amt#596 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(cs_ext_sales_price#597 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))#1411]
Results [2]: [c_customer_id#558 AS customer_id#10, sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cs_ext_list_price#599 as decimal(8,2))) - promote_precision(cast(cs_ext_wholesale_cost#598 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(cs_ext_discount_amt#596 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(cs_ext_sales_price#597 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))#1411 AS year_total#18]

(52) Filter [codegen id : 15]
Input [2]: [customer_id#10, year_total#18]
Condition : (isnotnull(year_total#18) AND (year_total#18 > 0.000000))

(53) Project [codegen id : 15]
Output [2]: [customer_id#10 AS customer_id#1432, year_total#18 AS year_total#1440]
Input [2]: [customer_id#10, year_total#18]

(54) Exchange
Input [2]: [customer_id#1432, year_total#1440]
Arguments: hashpartitioning(customer_id#1432, 200), ENSURE_REQUIREMENTS, [id=#1562]

(55) Sort [codegen id : 16]
Input [2]: [customer_id#1432, year_total#1440]
Arguments: [customer_id#1432 ASC NULLS FIRST], false, 0

(56) SortMergeJoin [codegen id : 17]
Left keys [1]: [customer_id#0]
Right keys [1]: [customer_id#1432]
Join condition: None

(57) Project [codegen id : 17]
Output [11]: [customer_id#0, year_total#8, customer_id#1422, customer_first_name#1423, customer_last_name#1424, customer_preferred_cust_flag#1425, customer_birth_country#1426, customer_login#1427, customer_email_address#1428, year_total#1430, year_total#1440]
Input [12]: [customer_id#0, year_total#8, customer_id#1422, customer_first_name#1423, customer_last_name#1424, customer_preferred_cust_flag#1425, customer_birth_country#1426, customer_login#1427, customer_email_address#1428, year_total#1430, customer_id#1432, year_total#1440]

(58) ReusedExchange [Reuses operator id: 4]
Output [8]: [c_customer_sk#786L, c_customer_id#787, c_first_name#794, c_last_name#795, c_preferred_cust_flag#796, c_birth_country#800, c_login#801, c_email_address#802]

(59) Scan orc tpcds_bin_partitioned_decimal_orc_2.catalog_sales
Output [6]: [cs_bill_customer_sk#806L, cs_ext_discount_amt#825, cs_ext_sales_price#826, cs_ext_wholesale_cost#827, cs_ext_list_price#828, cs_sold_date_sk#837L]
Batched: true
Location: InMemoryFileIndex [hdfs://server1:9000/user/hive/warehouse/tpcds_bin_partitioned_decimal_orc_2.db/catalog_sales/cs_sold_date_sk=2450815, ... 1838 entries]
PartitionFilters: [isnotnull(cs_sold_date_sk#837L), dynamicpruningexpression(cs_sold_date_sk#837L IN dynamicpruning#1617)]
PushedFilters: [IsNotNull(cs_bill_customer_sk)]
ReadSchema: struct<cs_bill_customer_sk:bigint,cs_ext_discount_amt:decimal(7,2),cs_ext_sales_price:decimal(7,2),cs_ext_wholesale_cost:decimal(7,2),cs_ext_list_price:decimal(7,2)>

(60) ColumnarToRow
Input [6]: [cs_bill_customer_sk#806L, cs_ext_discount_amt#825, cs_ext_sales_price#826, cs_ext_wholesale_cost#827, cs_ext_list_price#828, cs_sold_date_sk#837L]

(61) Filter
Input [6]: [cs_bill_customer_sk#806L, cs_ext_discount_amt#825, cs_ext_sales_price#826, cs_ext_wholesale_cost#827, cs_ext_list_price#828, cs_sold_date_sk#837L]
Condition : isnotnull(cs_bill_customer_sk#806L)

(62) BroadcastHashJoin [codegen id : 20]
Left keys [1]: [c_customer_sk#786L]
Right keys [1]: [cs_bill_customer_sk#806L]
Join condition: None

(63) Project [codegen id : 20]
Output [12]: [c_customer_id#787, c_first_name#794, c_last_name#795, c_preferred_cust_flag#796, c_birth_country#800, c_login#801, c_email_address#802, cs_ext_discount_amt#825, cs_ext_sales_price#826, cs_ext_wholesale_cost#827, cs_ext_list_price#828, cs_sold_date_sk#837L]
Input [14]: [c_customer_sk#786L, c_customer_id#787, c_first_name#794, c_last_name#795, c_preferred_cust_flag#796, c_birth_country#800, c_login#801, c_email_address#802, cs_bill_customer_sk#806L, cs_ext_discount_amt#825, cs_ext_sales_price#826, cs_ext_wholesale_cost#827, cs_ext_list_price#828, cs_sold_date_sk#837L]

(64) ReusedExchange [Reuses operator id: 31]
Output [2]: [d_date_sk#838L, d_year#844]

(65) BroadcastHashJoin [codegen id : 20]
Left keys [1]: [cs_sold_date_sk#837L]
Right keys [1]: [d_date_sk#838L]
Join condition: None

(66) Project [codegen id : 20]
Output [12]: [c_customer_id#787, c_first_name#794, c_last_name#795, c_preferred_cust_flag#796, c_birth_country#800, c_login#801, c_email_address#802, cs_ext_discount_amt#825, cs_ext_sales_price#826, cs_ext_wholesale_cost#827, cs_ext_list_price#828, d_year#844]
Input [14]: [c_customer_id#787, c_first_name#794, c_last_name#795, c_preferred_cust_flag#796, c_birth_country#800, c_login#801, c_email_address#802, cs_ext_discount_amt#825, cs_ext_sales_price#826, cs_ext_wholesale_cost#827, cs_ext_list_price#828, cs_sold_date_sk#837L, d_date_sk#838L, d_year#844]

(67) HashAggregate [codegen id : 20]
Input [12]: [c_customer_id#787, c_first_name#794, c_last_name#795, c_preferred_cust_flag#796, c_birth_country#800, c_login#801, c_email_address#802, cs_ext_discount_amt#825, cs_ext_sales_price#826, cs_ext_wholesale_cost#827, cs_ext_list_price#828, d_year#844]
Keys [8]: [c_customer_id#787, c_first_name#794, c_last_name#795, c_preferred_cust_flag#796, c_birth_country#800, c_login#801, c_email_address#802, d_year#844]
Functions [1]: [partial_sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cs_ext_list_price#828 as decimal(8,2))) - promote_precision(cast(cs_ext_wholesale_cost#827 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(cs_ext_discount_amt#825 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(cs_ext_sales_price#826 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))]
Aggregate Attributes [2]: [sum#1634, isEmpty#1635]
Results [10]: [c_customer_id#787, c_first_name#794, c_last_name#795, c_preferred_cust_flag#796, c_birth_country#800, c_login#801, c_email_address#802, d_year#844, sum#1636, isEmpty#1637]

(68) Exchange
Input [10]: [c_customer_id#787, c_first_name#794, c_last_name#795, c_preferred_cust_flag#796, c_birth_country#800, c_login#801, c_email_address#802, d_year#844, sum#1636, isEmpty#1637]
Arguments: hashpartitioning(c_customer_id#787, c_first_name#794, c_last_name#795, c_preferred_cust_flag#796, c_birth_country#800, c_login#801, c_email_address#802, d_year#844, 200), ENSURE_REQUIREMENTS, [id=#1583]

(69) HashAggregate [codegen id : 21]
Input [10]: [c_customer_id#787, c_first_name#794, c_last_name#795, c_preferred_cust_flag#796, c_birth_country#800, c_login#801, c_email_address#802, d_year#844, sum#1636, isEmpty#1637]
Keys [8]: [c_customer_id#787, c_first_name#794, c_last_name#795, c_preferred_cust_flag#796, c_birth_country#800, c_login#801, c_email_address#802, d_year#844]
Functions [1]: [sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cs_ext_list_price#828 as decimal(8,2))) - promote_precision(cast(cs_ext_wholesale_cost#827 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(cs_ext_discount_amt#825 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(cs_ext_sales_price#826 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))]
Aggregate Attributes [1]: [sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cs_ext_list_price#828 as decimal(8,2))) - promote_precision(cast(cs_ext_wholesale_cost#827 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(cs_ext_discount_amt#825 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(cs_ext_sales_price#826 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))#1414]
Results [2]: [c_customer_id#787 AS customer_id#1442, sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cs_ext_list_price#828 as decimal(8,2))) - promote_precision(cast(cs_ext_wholesale_cost#827 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(cs_ext_discount_amt#825 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(cs_ext_sales_price#826 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))#1414 AS year_total#1450]

(70) Exchange
Input [2]: [customer_id#1442, year_total#1450]
Arguments: hashpartitioning(customer_id#1442, 200), ENSURE_REQUIREMENTS, [id=#1587]

(71) Sort [codegen id : 22]
Input [2]: [customer_id#1442, year_total#1450]
Arguments: [customer_id#1442 ASC NULLS FIRST], false, 0

(72) SortMergeJoin [codegen id : 23]
Left keys [1]: [customer_id#0]
Right keys [1]: [customer_id#1442]
Join condition: (CASE WHEN (year_total#1440 > 0.000000) THEN CheckOverflow((promote_precision(year_total#1450) / promote_precision(year_total#1440)), DecimalType(38,14), true) ELSE null END > CASE WHEN (year_total#8 > 0.000000) THEN CheckOverflow((promote_precision(year_total#1430) / promote_precision(year_total#8)), DecimalType(38,14), true) ELSE null END)

(73) Project [codegen id : 23]
Output [10]: [customer_id#0, customer_id#1422, customer_first_name#1423, customer_last_name#1424, customer_preferred_cust_flag#1425, customer_birth_country#1426, customer_login#1427, customer_email_address#1428, year_total#1440, year_total#1450]
Input [13]: [customer_id#0, year_total#8, customer_id#1422, customer_first_name#1423, customer_last_name#1424, customer_preferred_cust_flag#1425, customer_birth_country#1426, customer_login#1427, customer_email_address#1428, year_total#1430, year_total#1440, customer_id#1442, year_total#1450]

(74) ReusedExchange [Reuses operator id: 4]
Output [8]: [c_customer_sk#1095L, c_customer_id#1096, c_first_name#1103, c_last_name#1104, c_preferred_cust_flag#1105, c_birth_country#1109, c_login#1110, c_email_address#1111]

(75) Scan orc tpcds_bin_partitioned_decimal_orc_2.web_sales
Output [6]: [ws_bill_customer_sk#1116L, ws_ext_discount_amt#1134, ws_ext_sales_price#1135, ws_ext_wholesale_cost#1136, ws_ext_list_price#1137, ws_sold_date_sk#1146L]
Batched: true
Location: InMemoryFileIndex [hdfs://server1:9000/user/hive/warehouse/tpcds_bin_partitioned_decimal_orc_2.db/web_sales/ws_sold_date_sk=2450816, ... 1822 entries]
PartitionFilters: [isnotnull(ws_sold_date_sk#1146L), dynamicpruningexpression(ws_sold_date_sk#1146L IN dynamicpruning#1616)]
PushedFilters: [IsNotNull(ws_bill_customer_sk)]
ReadSchema: struct<ws_bill_customer_sk:bigint,ws_ext_discount_amt:decimal(7,2),ws_ext_sales_price:decimal(7,2),ws_ext_wholesale_cost:decimal(7,2),ws_ext_list_price:decimal(7,2)>

(76) ColumnarToRow
Input [6]: [ws_bill_customer_sk#1116L, ws_ext_discount_amt#1134, ws_ext_sales_price#1135, ws_ext_wholesale_cost#1136, ws_ext_list_price#1137, ws_sold_date_sk#1146L]

(77) Filter
Input [6]: [ws_bill_customer_sk#1116L, ws_ext_discount_amt#1134, ws_ext_sales_price#1135, ws_ext_wholesale_cost#1136, ws_ext_list_price#1137, ws_sold_date_sk#1146L]
Condition : isnotnull(ws_bill_customer_sk#1116L)

(78) BroadcastHashJoin [codegen id : 26]
Left keys [1]: [c_customer_sk#1095L]
Right keys [1]: [ws_bill_customer_sk#1116L]
Join condition: None

(79) Project [codegen id : 26]
Output [12]: [c_customer_id#1096, c_first_name#1103, c_last_name#1104, c_preferred_cust_flag#1105, c_birth_country#1109, c_login#1110, c_email_address#1111, ws_ext_discount_amt#1134, ws_ext_sales_price#1135, ws_ext_wholesale_cost#1136, ws_ext_list_price#1137, ws_sold_date_sk#1146L]
Input [14]: [c_customer_sk#1095L, c_customer_id#1096, c_first_name#1103, c_last_name#1104, c_preferred_cust_flag#1105, c_birth_country#1109, c_login#1110, c_email_address#1111, ws_bill_customer_sk#1116L, ws_ext_discount_amt#1134, ws_ext_sales_price#1135, ws_ext_wholesale_cost#1136, ws_ext_list_price#1137, ws_sold_date_sk#1146L]

(80) ReusedExchange [Reuses operator id: 13]
Output [2]: [d_date_sk#1147L, d_year#1153]

(81) BroadcastHashJoin [codegen id : 26]
Left keys [1]: [ws_sold_date_sk#1146L]
Right keys [1]: [d_date_sk#1147L]
Join condition: None

(82) Project [codegen id : 26]
Output [12]: [c_customer_id#1096, c_first_name#1103, c_last_name#1104, c_preferred_cust_flag#1105, c_birth_country#1109, c_login#1110, c_email_address#1111, ws_ext_discount_amt#1134, ws_ext_sales_price#1135, ws_ext_wholesale_cost#1136, ws_ext_list_price#1137, d_year#1153]
Input [14]: [c_customer_id#1096, c_first_name#1103, c_last_name#1104, c_preferred_cust_flag#1105, c_birth_country#1109, c_login#1110, c_email_address#1111, ws_ext_discount_amt#1134, ws_ext_sales_price#1135, ws_ext_wholesale_cost#1136, ws_ext_list_price#1137, ws_sold_date_sk#1146L, d_date_sk#1147L, d_year#1153]

(83) HashAggregate [codegen id : 26]
Input [12]: [c_customer_id#1096, c_first_name#1103, c_last_name#1104, c_preferred_cust_flag#1105, c_birth_country#1109, c_login#1110, c_email_address#1111, ws_ext_discount_amt#1134, ws_ext_sales_price#1135, ws_ext_wholesale_cost#1136, ws_ext_list_price#1137, d_year#1153]
Keys [8]: [c_customer_id#1096, c_first_name#1103, c_last_name#1104, c_preferred_cust_flag#1105, c_birth_country#1109, c_login#1110, c_email_address#1111, d_year#1153]
Functions [1]: [partial_sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ws_ext_list_price#1137 as decimal(8,2))) - promote_precision(cast(ws_ext_wholesale_cost#1136 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(ws_ext_discount_amt#1134 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(ws_ext_sales_price#1135 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))]
Aggregate Attributes [2]: [sum#1638, isEmpty#1639]
Results [10]: [c_customer_id#1096, c_first_name#1103, c_last_name#1104, c_preferred_cust_flag#1105, c_birth_country#1109, c_login#1110, c_email_address#1111, d_year#1153, sum#1640, isEmpty#1641]

(84) Exchange
Input [10]: [c_customer_id#1096, c_first_name#1103, c_last_name#1104, c_preferred_cust_flag#1105, c_birth_country#1109, c_login#1110, c_email_address#1111, d_year#1153, sum#1640, isEmpty#1641]
Arguments: hashpartitioning(c_customer_id#1096, c_first_name#1103, c_last_name#1104, c_preferred_cust_flag#1105, c_birth_country#1109, c_login#1110, c_email_address#1111, d_year#1153, 200), ENSURE_REQUIREMENTS, [id=#1608]

(85) HashAggregate [codegen id : 27]
Input [10]: [c_customer_id#1096, c_first_name#1103, c_last_name#1104, c_preferred_cust_flag#1105, c_birth_country#1109, c_login#1110, c_email_address#1111, d_year#1153, sum#1640, isEmpty#1641]
Keys [8]: [c_customer_id#1096, c_first_name#1103, c_last_name#1104, c_preferred_cust_flag#1105, c_birth_country#1109, c_login#1110, c_email_address#1111, d_year#1153]
Functions [1]: [sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ws_ext_list_price#1137 as decimal(8,2))) - promote_precision(cast(ws_ext_wholesale_cost#1136 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(ws_ext_discount_amt#1134 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(ws_ext_sales_price#1135 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))]
Aggregate Attributes [1]: [sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ws_ext_list_price#1137 as decimal(8,2))) - promote_precision(cast(ws_ext_wholesale_cost#1136 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(ws_ext_discount_amt#1134 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(ws_ext_sales_price#1135 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))#1418]
Results [2]: [c_customer_id#1096 AS customer_id#20, sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ws_ext_list_price#1137 as decimal(8,2))) - promote_precision(cast(ws_ext_wholesale_cost#1136 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(ws_ext_discount_amt#1134 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(ws_ext_sales_price#1135 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))#1418 AS year_total#28]

(86) Filter [codegen id : 27]
Input [2]: [customer_id#20, year_total#28]
Condition : (isnotnull(year_total#28) AND (year_total#28 > 0.000000))

(87) Project [codegen id : 27]
Output [2]: [customer_id#20 AS customer_id#1452, year_total#28 AS year_total#1460]
Input [2]: [customer_id#20, year_total#28]

(88) Exchange
Input [2]: [customer_id#1452, year_total#1460]
Arguments: hashpartitioning(customer_id#1452, 200), ENSURE_REQUIREMENTS, [id=#1614]

(89) Sort [codegen id : 28]
Input [2]: [customer_id#1452, year_total#1460]
Arguments: [customer_id#1452 ASC NULLS FIRST], false, 0

(90) SortMergeJoin [codegen id : 29]
Left keys [1]: [customer_id#0]
Right keys [1]: [customer_id#1452]
Join condition: None

(91) Project [codegen id : 29]
Output [11]: [customer_id#0, customer_id#1422, customer_first_name#1423, customer_last_name#1424, customer_preferred_cust_flag#1425, customer_birth_country#1426, customer_login#1427, customer_email_address#1428, year_total#1440, year_total#1450, year_total#1460]
Input [12]: [customer_id#0, customer_id#1422, customer_first_name#1423, customer_last_name#1424, customer_preferred_cust_flag#1425, customer_birth_country#1426, customer_login#1427, customer_email_address#1428, year_total#1440, year_total#1450, customer_id#1452, year_total#1460]

(92) ReusedExchange [Reuses operator id: 4]
Output [8]: [c_customer_sk#1324L, c_customer_id#1325, c_first_name#1332, c_last_name#1333, c_preferred_cust_flag#1334, c_birth_country#1338, c_login#1339, c_email_address#1340]

(93) Scan orc tpcds_bin_partitioned_decimal_orc_2.web_sales
Output [6]: [ws_bill_customer_sk#1345L, ws_ext_discount_amt#1363, ws_ext_sales_price#1364, ws_ext_wholesale_cost#1365, ws_ext_list_price#1366, ws_sold_date_sk#1375L]
Batched: true
Location: InMemoryFileIndex [hdfs://server1:9000/user/hive/warehouse/tpcds_bin_partitioned_decimal_orc_2.db/web_sales/ws_sold_date_sk=2450816, ... 1822 entries]
PartitionFilters: [isnotnull(ws_sold_date_sk#1375L), dynamicpruningexpression(ws_sold_date_sk#1375L IN dynamicpruning#1617)]
PushedFilters: [IsNotNull(ws_bill_customer_sk)]
ReadSchema: struct<ws_bill_customer_sk:bigint,ws_ext_discount_amt:decimal(7,2),ws_ext_sales_price:decimal(7,2),ws_ext_wholesale_cost:decimal(7,2),ws_ext_list_price:decimal(7,2)>

(94) ColumnarToRow
Input [6]: [ws_bill_customer_sk#1345L, ws_ext_discount_amt#1363, ws_ext_sales_price#1364, ws_ext_wholesale_cost#1365, ws_ext_list_price#1366, ws_sold_date_sk#1375L]

(95) Filter
Input [6]: [ws_bill_customer_sk#1345L, ws_ext_discount_amt#1363, ws_ext_sales_price#1364, ws_ext_wholesale_cost#1365, ws_ext_list_price#1366, ws_sold_date_sk#1375L]
Condition : isnotnull(ws_bill_customer_sk#1345L)

(96) BroadcastHashJoin [codegen id : 32]
Left keys [1]: [c_customer_sk#1324L]
Right keys [1]: [ws_bill_customer_sk#1345L]
Join condition: None

(97) Project [codegen id : 32]
Output [12]: [c_customer_id#1325, c_first_name#1332, c_last_name#1333, c_preferred_cust_flag#1334, c_birth_country#1338, c_login#1339, c_email_address#1340, ws_ext_discount_amt#1363, ws_ext_sales_price#1364, ws_ext_wholesale_cost#1365, ws_ext_list_price#1366, ws_sold_date_sk#1375L]
Input [14]: [c_customer_sk#1324L, c_customer_id#1325, c_first_name#1332, c_last_name#1333, c_preferred_cust_flag#1334, c_birth_country#1338, c_login#1339, c_email_address#1340, ws_bill_customer_sk#1345L, ws_ext_discount_amt#1363, ws_ext_sales_price#1364, ws_ext_wholesale_cost#1365, ws_ext_list_price#1366, ws_sold_date_sk#1375L]

(98) ReusedExchange [Reuses operator id: 31]
Output [2]: [d_date_sk#1376L, d_year#1382]

(99) BroadcastHashJoin [codegen id : 32]
Left keys [1]: [ws_sold_date_sk#1375L]
Right keys [1]: [d_date_sk#1376L]
Join condition: None

(100) Project [codegen id : 32]
Output [12]: [c_customer_id#1325, c_first_name#1332, c_last_name#1333, c_preferred_cust_flag#1334, c_birth_country#1338, c_login#1339, c_email_address#1340, ws_ext_discount_amt#1363, ws_ext_sales_price#1364, ws_ext_wholesale_cost#1365, ws_ext_list_price#1366, d_year#1382]
Input [14]: [c_customer_id#1325, c_first_name#1332, c_last_name#1333, c_preferred_cust_flag#1334, c_birth_country#1338, c_login#1339, c_email_address#1340, ws_ext_discount_amt#1363, ws_ext_sales_price#1364, ws_ext_wholesale_cost#1365, ws_ext_list_price#1366, ws_sold_date_sk#1375L, d_date_sk#1376L, d_year#1382]

(101) HashAggregate [codegen id : 32]
Input [12]: [c_customer_id#1325, c_first_name#1332, c_last_name#1333, c_preferred_cust_flag#1334, c_birth_country#1338, c_login#1339, c_email_address#1340, ws_ext_discount_amt#1363, ws_ext_sales_price#1364, ws_ext_wholesale_cost#1365, ws_ext_list_price#1366, d_year#1382]
Keys [8]: [c_customer_id#1325, c_first_name#1332, c_last_name#1333, c_preferred_cust_flag#1334, c_birth_country#1338, c_login#1339, c_email_address#1340, d_year#1382]
Functions [1]: [partial_sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ws_ext_list_price#1366 as decimal(8,2))) - promote_precision(cast(ws_ext_wholesale_cost#1365 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(ws_ext_discount_amt#1363 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(ws_ext_sales_price#1364 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))]
Aggregate Attributes [2]: [sum#1642, isEmpty#1643]
Results [10]: [c_customer_id#1325, c_first_name#1332, c_last_name#1333, c_preferred_cust_flag#1334, c_birth_country#1338, c_login#1339, c_email_address#1340, d_year#1382, sum#1644, isEmpty#1645]

(102) Exchange
Input [10]: [c_customer_id#1325, c_first_name#1332, c_last_name#1333, c_preferred_cust_flag#1334, c_birth_country#1338, c_login#1339, c_email_address#1340, d_year#1382, sum#1644, isEmpty#1645]
Arguments: hashpartitioning(c_customer_id#1325, c_first_name#1332, c_last_name#1333, c_preferred_cust_flag#1334, c_birth_country#1338, c_login#1339, c_email_address#1340, d_year#1382, 200), ENSURE_REQUIREMENTS, [id=#1635]

(103) HashAggregate [codegen id : 33]
Input [10]: [c_customer_id#1325, c_first_name#1332, c_last_name#1333, c_preferred_cust_flag#1334, c_birth_country#1338, c_login#1339, c_email_address#1340, d_year#1382, sum#1644, isEmpty#1645]
Keys [8]: [c_customer_id#1325, c_first_name#1332, c_last_name#1333, c_preferred_cust_flag#1334, c_birth_country#1338, c_login#1339, c_email_address#1340, d_year#1382]
Functions [1]: [sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ws_ext_list_price#1366 as decimal(8,2))) - promote_precision(cast(ws_ext_wholesale_cost#1365 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(ws_ext_discount_amt#1363 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(ws_ext_sales_price#1364 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))]
Aggregate Attributes [1]: [sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ws_ext_list_price#1366 as decimal(8,2))) - promote_precision(cast(ws_ext_wholesale_cost#1365 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(ws_ext_discount_amt#1363 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(ws_ext_sales_price#1364 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))#1421]
Results [2]: [c_customer_id#1325 AS customer_id#1462, sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ws_ext_list_price#1366 as decimal(8,2))) - promote_precision(cast(ws_ext_wholesale_cost#1365 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(ws_ext_discount_amt#1363 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(ws_ext_sales_price#1364 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))#1421 AS year_total#1470]

(104) Exchange
Input [2]: [customer_id#1462, year_total#1470]
Arguments: hashpartitioning(customer_id#1462, 200), ENSURE_REQUIREMENTS, [id=#1639]

(105) Sort [codegen id : 34]
Input [2]: [customer_id#1462, year_total#1470]
Arguments: [customer_id#1462 ASC NULLS FIRST], false, 0

(106) SortMergeJoin [codegen id : 35]
Left keys [1]: [customer_id#0]
Right keys [1]: [customer_id#1462]
Join condition: (CASE WHEN (year_total#1440 > 0.000000) THEN CheckOverflow((promote_precision(year_total#1450) / promote_precision(year_total#1440)), DecimalType(38,14), true) ELSE null END > CASE WHEN (year_total#1460 > 0.000000) THEN CheckOverflow((promote_precision(year_total#1470) / promote_precision(year_total#1460)), DecimalType(38,14), true) ELSE null END)

(107) Project [codegen id : 35]
Output [7]: [customer_id#1422, customer_first_name#1423, customer_last_name#1424, customer_preferred_cust_flag#1425, customer_birth_country#1426, customer_login#1427, customer_email_address#1428]
Input [13]: [customer_id#0, customer_id#1422, customer_first_name#1423, customer_last_name#1424, customer_preferred_cust_flag#1425, customer_birth_country#1426, customer_login#1427, customer_email_address#1428, year_total#1440, year_total#1450, year_total#1460, customer_id#1462, year_total#1470]

(108) TakeOrderedAndProject
Input [7]: [customer_id#1422, customer_first_name#1423, customer_last_name#1424, customer_preferred_cust_flag#1425, customer_birth_country#1426, customer_login#1427, customer_email_address#1428]
Arguments: 100, [customer_id#1422 ASC NULLS FIRST, customer_first_name#1423 ASC NULLS FIRST, customer_last_name#1424 ASC NULLS FIRST, customer_preferred_cust_flag#1425 ASC NULLS FIRST, customer_birth_country#1426 ASC NULLS FIRST, customer_login#1427 ASC NULLS FIRST, customer_email_address#1428 ASC NULLS FIRST], [customer_id#1422, customer_first_name#1423, customer_last_name#1424, customer_preferred_cust_flag#1425, customer_birth_country#1426, customer_login#1427, customer_email_address#1428]

===== Subqueries =====

Subquery:1 Hosting operator id = 5 Hosting Expression = ss_sold_date_sk#70L IN dynamicpruning#1616
ReusedExchange (109)


(109) ReusedExchange [Reuses operator id: 13]
Output [2]: [d_date_sk#71L, d_year#77]

Subquery:2 Hosting operator id = 23 Hosting Expression = ss_sold_date_sk#299L IN dynamicpruning#1617
ReusedExchange (110)


(110) ReusedExchange [Reuses operator id: 31]
Output [2]: [d_date_sk#300L, d_year#306]

Subquery:3 Hosting operator id = 41 Hosting Expression = cs_sold_date_sk#608L IN dynamicpruning#1616

Subquery:4 Hosting operator id = 59 Hosting Expression = cs_sold_date_sk#837L IN dynamicpruning#1617

Subquery:5 Hosting operator id = 75 Hosting Expression = ws_sold_date_sk#1146L IN dynamicpruning#1616

Subquery:6 Hosting operator id = 93 Hosting Expression = ws_sold_date_sk#1375L IN dynamicpruning#1617


