== Physical Plan ==
TakeOrderedAndProject (32)
+- * Project (31)
   +- Window (30)
      +- * Sort (29)
         +- Exchange (28)
            +- * HashAggregate (27)
               +- Exchange (26)
                  +- * HashAggregate (25)
                     +- * Expand (24)
                        +- * Project (23)
                           +- * BroadcastHashJoin Inner BuildRight (22)
                              :- * Project (16)
                              :  +- * BroadcastHashJoin Inner BuildRight (15)
                              :     :- * Project (10)
                              :     :  +- * BroadcastHashJoin Inner BuildRight (9)
                              :     :     :- * Filter (3)
                              :     :     :  +- * ColumnarToRow (2)
                              :     :     :     +- Scan orc tpcds_bin_partitioned_decimal_orc_2.store_sales (1)
                              :     :     +- BroadcastExchange (8)
                              :     :        +- * Project (7)
                              :     :           +- * Filter (6)
                              :     :              +- * ColumnarToRow (5)
                              :     :                 +- Scan orc tpcds_bin_partitioned_decimal_orc_2.date_dim (4)
                              :     +- BroadcastExchange (14)
                              :        +- * Filter (13)
                              :           +- * ColumnarToRow (12)
                              :              +- Scan orc tpcds_bin_partitioned_decimal_orc_2.item (11)
                              +- BroadcastExchange (21)
                                 +- * Project (20)
                                    +- * Filter (19)
                                       +- * ColumnarToRow (18)
                                          +- Scan orc tpcds_bin_partitioned_decimal_orc_2.store (17)


(1) Scan orc tpcds_bin_partitioned_decimal_orc_2.store_sales
Output [5]: [ss_item_sk#6L, ss_store_sk#11L, ss_ext_sales_price#19, ss_net_profit#26, ss_sold_date_sk#27L]
Batched: true
Location: InMemoryFileIndex [hdfs://server1:9000/user/hive/warehouse/tpcds_bin_partitioned_decimal_orc_2.db/store_sales/ss_sold_date_sk=2450816, ... 1822 entries]
PartitionFilters: [isnotnull(ss_sold_date_sk#27L), dynamicpruningexpression(ss_sold_date_sk#27L IN dynamicpruning#247)]
PushedFilters: [IsNotNull(ss_item_sk), IsNotNull(ss_store_sk)]
ReadSchema: struct<ss_item_sk:bigint,ss_store_sk:bigint,ss_ext_sales_price:decimal(7,2),ss_net_profit:decimal(7,2)>

(2) ColumnarToRow [codegen id : 4]
Input [5]: [ss_item_sk#6L, ss_store_sk#11L, ss_ext_sales_price#19, ss_net_profit#26, ss_sold_date_sk#27L]

(3) Filter [codegen id : 4]
Input [5]: [ss_item_sk#6L, ss_store_sk#11L, ss_ext_sales_price#19, ss_net_profit#26, ss_sold_date_sk#27L]
Condition : (isnotnull(ss_item_sk#6L) AND isnotnull(ss_store_sk#11L))

(4) Scan orc tpcds_bin_partitioned_decimal_orc_2.date_dim
Output [2]: [d_date_sk#28L, d_year#34]
Batched: true
Location: InMemoryFileIndex [hdfs://server1:9000/user/hive/warehouse/tpcds_bin_partitioned_decimal_orc_2.db/date_dim]
PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:bigint,d_year:int>

(5) ColumnarToRow [codegen id : 1]
Input [2]: [d_date_sk#28L, d_year#34]

(6) Filter [codegen id : 1]
Input [2]: [d_date_sk#28L, d_year#34]
Condition : ((isnotnull(d_year#34) AND (d_year#34 = 2001)) AND isnotnull(d_date_sk#28L))

(7) Project [codegen id : 1]
Output [1]: [d_date_sk#28L]
Input [2]: [d_date_sk#28L, d_year#34]

(8) BroadcastExchange
Input [1]: [d_date_sk#28L]
Arguments: HashedRelationBroadcastMode(List(input[0, bigint, true]),false), [id=#196]

(9) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [ss_sold_date_sk#27L]
Right keys [1]: [d_date_sk#28L]
Join condition: None

(10) Project [codegen id : 4]
Output [4]: [ss_item_sk#6L, ss_store_sk#11L, ss_ext_sales_price#19, ss_net_profit#26]
Input [6]: [ss_item_sk#6L, ss_store_sk#11L, ss_ext_sales_price#19, ss_net_profit#26, ss_sold_date_sk#27L, d_date_sk#28L]

(11) Scan orc tpcds_bin_partitioned_decimal_orc_2.item
Output [3]: [i_item_sk#56L, i_class#66, i_category#68]
Batched: true
Location: InMemoryFileIndex [hdfs://server1:9000/user/hive/warehouse/tpcds_bin_partitioned_decimal_orc_2.db/item]
PushedFilters: [IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:bigint,i_class:string,i_category:string>

(12) ColumnarToRow [codegen id : 2]
Input [3]: [i_item_sk#56L, i_class#66, i_category#68]

(13) Filter [codegen id : 2]
Input [3]: [i_item_sk#56L, i_class#66, i_category#68]
Condition : isnotnull(i_item_sk#56L)

(14) BroadcastExchange
Input [3]: [i_item_sk#56L, i_class#66, i_category#68]
Arguments: HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#204]

(15) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [ss_item_sk#6L]
Right keys [1]: [i_item_sk#56L]
Join condition: None

(16) Project [codegen id : 4]
Output [5]: [ss_store_sk#11L, ss_ext_sales_price#19, ss_net_profit#26, i_class#66, i_category#68]
Input [7]: [ss_item_sk#6L, ss_store_sk#11L, ss_ext_sales_price#19, ss_net_profit#26, i_item_sk#56L, i_class#66, i_category#68]

(17) Scan orc tpcds_bin_partitioned_decimal_orc_2.store
Output [2]: [s_store_sk#78L, s_state#102]
Batched: true
Location: InMemoryFileIndex [hdfs://server1:9000/user/hive/warehouse/tpcds_bin_partitioned_decimal_orc_2.db/store]
PushedFilters: [IsNotNull(s_state), EqualTo(s_state,TN), IsNotNull(s_store_sk)]
ReadSchema: struct<s_store_sk:bigint,s_state:string>

(18) ColumnarToRow [codegen id : 3]
Input [2]: [s_store_sk#78L, s_state#102]

(19) Filter [codegen id : 3]
Input [2]: [s_store_sk#78L, s_state#102]
Condition : ((isnotnull(s_state#102) AND (s_state#102 = TN)) AND isnotnull(s_store_sk#78L))

(20) Project [codegen id : 3]
Output [1]: [s_store_sk#78L]
Input [2]: [s_store_sk#78L, s_state#102]

(21) BroadcastExchange
Input [1]: [s_store_sk#78L]
Arguments: HashedRelationBroadcastMode(List(input[0, bigint, true]),false), [id=#213]

(22) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [ss_store_sk#11L]
Right keys [1]: [s_store_sk#78L]
Join condition: None

(23) Project [codegen id : 4]
Output [4]: [ss_ext_sales_price#19, ss_net_profit#26, i_category#68, i_class#66]
Input [6]: [ss_store_sk#11L, ss_ext_sales_price#19, ss_net_profit#26, i_class#66, i_category#68, s_store_sk#78L]

(24) Expand [codegen id : 4]
Input [4]: [ss_ext_sales_price#19, ss_net_profit#26, i_category#68, i_class#66]
Arguments: [List(ss_ext_sales_price#19, ss_net_profit#26, i_category#68, i_class#66, 0), List(ss_ext_sales_price#19, ss_net_profit#26, i_category#68, null, 1), List(ss_ext_sales_price#19, ss_net_profit#26, null, null, 3)], [ss_ext_sales_price#19, ss_net_profit#26, i_category#114, i_class#115, spark_grouping_id#113L]

(25) HashAggregate [codegen id : 4]
Input [5]: [ss_ext_sales_price#19, ss_net_profit#26, i_category#114, i_class#115, spark_grouping_id#113L]
Keys [3]: [i_category#114, i_class#115, spark_grouping_id#113L]
Functions [2]: [partial_sum(UnscaledValue(ss_net_profit#26)), partial_sum(UnscaledValue(ss_ext_sales_price#19))]
Aggregate Attributes [2]: [sum#248L, sum#249L]
Results [5]: [i_category#114, i_class#115, spark_grouping_id#113L, sum#250L, sum#251L]

(26) Exchange
Input [5]: [i_category#114, i_class#115, spark_grouping_id#113L, sum#250L, sum#251L]
Arguments: hashpartitioning(i_category#114, i_class#115, spark_grouping_id#113L, 200), ENSURE_REQUIREMENTS, [id=#264]

(27) HashAggregate [codegen id : 5]
Input [5]: [i_category#114, i_class#115, spark_grouping_id#113L, sum#250L, sum#251L]
Keys [3]: [i_category#114, i_class#115, spark_grouping_id#113L]
Functions [2]: [sum(UnscaledValue(ss_net_profit#26)), sum(UnscaledValue(ss_ext_sales_price#19))]
Aggregate Attributes [2]: [sum(UnscaledValue(ss_net_profit#26))#107L, sum(UnscaledValue(ss_ext_sales_price#19))#108L]
Results [7]: [CheckOverflow((promote_precision(MakeDecimal(sum(UnscaledValue(ss_net_profit#26))#107L,17,2)) / promote_precision(MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#19))#108L,17,2))), DecimalType(37,20), true) AS gross_margin#0, i_category#114, i_class#115, (cast((shiftright(spark_grouping_id#113L, 1) & 1) as tinyint) + cast((shiftright(spark_grouping_id#113L, 0) & 1) as tinyint)) AS lochierarchy#1, (cast((shiftright(spark_grouping_id#113L, 1) & 1) as tinyint) + cast((shiftright(spark_grouping_id#113L, 0) & 1) as tinyint)) AS _w1#128, CASE WHEN (cast((shiftright(spark_grouping_id#113L, 0) & 1) as tinyint) = 0) THEN i_category#114 END AS _w2#129, CheckOverflow((promote_precision(MakeDecimal(sum(UnscaledValue(ss_net_profit#26))#107L,17,2)) / promote_precision(MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#19))#108L,17,2))), DecimalType(37,20), true) AS _w3#130]

(28) Exchange
Input [7]: [gross_margin#0, i_category#114, i_class#115, lochierarchy#1, _w1#128, _w2#129, _w3#130]
Arguments: hashpartitioning(_w1#128, _w2#129, 200), ENSURE_REQUIREMENTS, [id=#268]

(29) Sort [codegen id : 6]
Input [7]: [gross_margin#0, i_category#114, i_class#115, lochierarchy#1, _w1#128, _w2#129, _w3#130]
Arguments: [_w1#128 ASC NULLS FIRST, _w2#129 ASC NULLS FIRST, _w3#130 ASC NULLS FIRST], false, 0

(30) Window
Input [7]: [gross_margin#0, i_category#114, i_class#115, lochierarchy#1, _w1#128, _w2#129, _w3#130]
Arguments: [rank(_w3#130) windowspecdefinition(_w1#128, _w2#129, _w3#130 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rank_within_parent#2], [_w1#128, _w2#129], [_w3#130 ASC NULLS FIRST]

(31) Project [codegen id : 7]
Output [5]: [gross_margin#0, i_category#114, i_class#115, lochierarchy#1, rank_within_parent#2]
Input [8]: [gross_margin#0, i_category#114, i_class#115, lochierarchy#1, _w1#128, _w2#129, _w3#130, rank_within_parent#2]

(32) TakeOrderedAndProject
Input [5]: [gross_margin#0, i_category#114, i_class#115, lochierarchy#1, rank_within_parent#2]
Arguments: 100, [lochierarchy#1 DESC NULLS LAST, CASE WHEN (lochierarchy#1 = 0) THEN i_category#114 END ASC NULLS FIRST, rank_within_parent#2 ASC NULLS FIRST], [gross_margin#0, i_category#114, i_class#115, lochierarchy#1, rank_within_parent#2]

===== Subqueries =====

Subquery:1 Hosting operator id = 1 Hosting Expression = ss_sold_date_sk#27L IN dynamicpruning#247
ReusedExchange (33)


(33) ReusedExchange [Reuses operator id: 8]
Output [1]: [d_date_sk#28L]


