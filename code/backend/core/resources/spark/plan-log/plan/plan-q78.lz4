== Physical Plan ==
TakeOrderedAndProject (73)
+- * Project (72)
   +- * SortMergeJoin Inner (71)
      :- * Project (48)
      :  +- * SortMergeJoin Inner (47)
      :     :- * Sort (24)
      :     :  +- * HashAggregate (23)
      :     :     +- Exchange (22)
      :     :        +- * HashAggregate (21)
      :     :           +- * Project (20)
      :     :              +- * BroadcastHashJoin Inner BuildRight (19)
      :     :                 :- * Project (14)
      :     :                 :  +- * Filter (13)
      :     :                 :     +- SortMergeJoin LeftOuter (12)
      :     :                 :        :- * Sort (5)
      :     :                 :        :  +- Exchange (4)
      :     :                 :        :     +- * Filter (3)
      :     :                 :        :        +- * ColumnarToRow (2)
      :     :                 :        :           +- Scan orc tpcds_bin_partitioned_decimal_orc_2.store_sales (1)
      :     :                 :        +- * Sort (11)
      :     :                 :           +- Exchange (10)
      :     :                 :              +- * Project (9)
      :     :                 :                 +- * Filter (8)
      :     :                 :                    +- * ColumnarToRow (7)
      :     :                 :                       +- Scan orc tpcds_bin_partitioned_decimal_orc_2.store_returns (6)
      :     :                 +- BroadcastExchange (18)
      :     :                    +- * Filter (17)
      :     :                       +- * ColumnarToRow (16)
      :     :                          +- Scan orc tpcds_bin_partitioned_decimal_orc_2.date_dim (15)
      :     +- * Sort (46)
      :        +- * Filter (45)
      :           +- * HashAggregate (44)
      :              +- Exchange (43)
      :                 +- * HashAggregate (42)
      :                    +- * Project (41)
      :                       +- * BroadcastHashJoin Inner BuildRight (40)
      :                          :- * Project (38)
      :                          :  +- * Filter (37)
      :                          :     +- SortMergeJoin LeftOuter (36)
      :                          :        :- * Sort (29)
      :                          :        :  +- Exchange (28)
      :                          :        :     +- * Filter (27)
      :                          :        :        +- * ColumnarToRow (26)
      :                          :        :           +- Scan orc tpcds_bin_partitioned_decimal_orc_2.web_sales (25)
      :                          :        +- * Sort (35)
      :                          :           +- Exchange (34)
      :                          :              +- * Project (33)
      :                          :                 +- * Filter (32)
      :                          :                    +- * ColumnarToRow (31)
      :                          :                       +- Scan orc tpcds_bin_partitioned_decimal_orc_2.web_returns (30)
      :                          +- ReusedExchange (39)
      +- * Sort (70)
         +- * Filter (69)
            +- * HashAggregate (68)
               +- Exchange (67)
                  +- * HashAggregate (66)
                     +- * Project (65)
                        +- * BroadcastHashJoin Inner BuildRight (64)
                           :- * Project (62)
                           :  +- * Filter (61)
                           :     +- SortMergeJoin LeftOuter (60)
                           :        :- * Sort (53)
                           :        :  +- Exchange (52)
                           :        :     +- * Filter (51)
                           :        :        +- * ColumnarToRow (50)
                           :        :           +- Scan orc tpcds_bin_partitioned_decimal_orc_2.catalog_sales (49)
                           :        +- * Sort (59)
                           :           +- Exchange (58)
                           :              +- * Project (57)
                           :                 +- * Filter (56)
                           :                    +- * ColumnarToRow (55)
                           :                       +- Scan orc tpcds_bin_partitioned_decimal_orc_2.catalog_returns (54)
                           +- ReusedExchange (63)


(1) Scan orc tpcds_bin_partitioned_decimal_orc_2.store_sales
Output [7]: [ss_item_sk#22L, ss_customer_sk#23L, ss_ticket_number#29L, ss_quantity#30, ss_wholesale_cost#31, ss_sales_price#33, ss_sold_date_sk#43L]
Batched: true
Location: InMemoryFileIndex [hdfs://server1:9000/user/hive/warehouse/tpcds_bin_partitioned_decimal_orc_2.db/store_sales/ss_sold_date_sk=2450816, ... 1822 entries]
PartitionFilters: [isnotnull(ss_sold_date_sk#43L), dynamicpruningexpression(ss_sold_date_sk#43L IN dynamicpruning#473)]
PushedFilters: [IsNotNull(ss_item_sk), IsNotNull(ss_customer_sk)]
ReadSchema: struct<ss_item_sk:bigint,ss_customer_sk:bigint,ss_ticket_number:bigint,ss_quantity:int,ss_wholesale_cost:decimal(7,2),ss_sales_price:decimal(7,2)>

(2) ColumnarToRow [codegen id : 1]
Input [7]: [ss_item_sk#22L, ss_customer_sk#23L, ss_ticket_number#29L, ss_quantity#30, ss_wholesale_cost#31, ss_sales_price#33, ss_sold_date_sk#43L]

(3) Filter [codegen id : 1]
Input [7]: [ss_item_sk#22L, ss_customer_sk#23L, ss_ticket_number#29L, ss_quantity#30, ss_wholesale_cost#31, ss_sales_price#33, ss_sold_date_sk#43L]
Condition : (isnotnull(ss_item_sk#22L) AND isnotnull(ss_customer_sk#23L))

(4) Exchange
Input [7]: [ss_item_sk#22L, ss_customer_sk#23L, ss_ticket_number#29L, ss_quantity#30, ss_wholesale_cost#31, ss_sales_price#33, ss_sold_date_sk#43L]
Arguments: hashpartitioning(ss_ticket_number#29L, ss_item_sk#22L, 200), ENSURE_REQUIREMENTS, [id=#620]

(5) Sort [codegen id : 2]
Input [7]: [ss_item_sk#22L, ss_customer_sk#23L, ss_ticket_number#29L, ss_quantity#30, ss_wholesale_cost#31, ss_sales_price#33, ss_sold_date_sk#43L]
Arguments: [ss_ticket_number#29L ASC NULLS FIRST, ss_item_sk#22L ASC NULLS FIRST], false, 0

(6) Scan orc tpcds_bin_partitioned_decimal_orc_2.store_returns
Output [3]: [sr_item_sk#45L, sr_ticket_number#52L, sr_returned_date_sk#63L]
Batched: true
Location: CatalogFileIndex [hdfs://server1:9000/user/hive/warehouse/tpcds_bin_partitioned_decimal_orc_2.db/store_returns]
PushedFilters: [IsNotNull(sr_ticket_number), IsNotNull(sr_item_sk)]
ReadSchema: struct<sr_item_sk:bigint,sr_ticket_number:bigint>

(7) ColumnarToRow [codegen id : 3]
Input [3]: [sr_item_sk#45L, sr_ticket_number#52L, sr_returned_date_sk#63L]

(8) Filter [codegen id : 3]
Input [3]: [sr_item_sk#45L, sr_ticket_number#52L, sr_returned_date_sk#63L]
Condition : (isnotnull(sr_ticket_number#52L) AND isnotnull(sr_item_sk#45L))

(9) Project [codegen id : 3]
Output [2]: [sr_item_sk#45L, sr_ticket_number#52L]
Input [3]: [sr_item_sk#45L, sr_ticket_number#52L, sr_returned_date_sk#63L]

(10) Exchange
Input [2]: [sr_item_sk#45L, sr_ticket_number#52L]
Arguments: hashpartitioning(sr_ticket_number#52L, sr_item_sk#45L, 200), ENSURE_REQUIREMENTS, [id=#445]

(11) Sort [codegen id : 4]
Input [2]: [sr_item_sk#45L, sr_ticket_number#52L]
Arguments: [sr_ticket_number#52L ASC NULLS FIRST, sr_item_sk#45L ASC NULLS FIRST], false, 0

(12) SortMergeJoin
Left keys [2]: [ss_ticket_number#29L, ss_item_sk#22L]
Right keys [2]: [sr_ticket_number#52L, sr_item_sk#45L]
Join condition: None

(13) Filter [codegen id : 6]
Input [9]: [ss_item_sk#22L, ss_customer_sk#23L, ss_ticket_number#29L, ss_quantity#30, ss_wholesale_cost#31, ss_sales_price#33, ss_sold_date_sk#43L, sr_item_sk#45L, sr_ticket_number#52L]
Condition : isnull(sr_ticket_number#52L)

(14) Project [codegen id : 6]
Output [6]: [ss_item_sk#22L, ss_customer_sk#23L, ss_quantity#30, ss_wholesale_cost#31, ss_sales_price#33, ss_sold_date_sk#43L]
Input [9]: [ss_item_sk#22L, ss_customer_sk#23L, ss_ticket_number#29L, ss_quantity#30, ss_wholesale_cost#31, ss_sales_price#33, ss_sold_date_sk#43L, sr_item_sk#45L, sr_ticket_number#52L]

(15) Scan orc tpcds_bin_partitioned_decimal_orc_2.date_dim
Output [2]: [d_date_sk#64L, d_year#70]
Batched: true
Location: InMemoryFileIndex [hdfs://server1:9000/user/hive/warehouse/tpcds_bin_partitioned_decimal_orc_2.db/date_dim]
PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2000), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:bigint,d_year:int>

(16) ColumnarToRow [codegen id : 5]
Input [2]: [d_date_sk#64L, d_year#70]

(17) Filter [codegen id : 5]
Input [2]: [d_date_sk#64L, d_year#70]
Condition : ((isnotnull(d_year#70) AND (d_year#70 = 2000)) AND isnotnull(d_date_sk#64L))

(18) BroadcastExchange
Input [2]: [d_date_sk#64L, d_year#70]
Arguments: HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#457]

(19) BroadcastHashJoin [codegen id : 6]
Left keys [1]: [ss_sold_date_sk#43L]
Right keys [1]: [d_date_sk#64L]
Join condition: None

(20) Project [codegen id : 6]
Output [6]: [ss_item_sk#22L, ss_customer_sk#23L, ss_quantity#30, ss_wholesale_cost#31, ss_sales_price#33, d_year#70]
Input [8]: [ss_item_sk#22L, ss_customer_sk#23L, ss_quantity#30, ss_wholesale_cost#31, ss_sales_price#33, ss_sold_date_sk#43L, d_date_sk#64L, d_year#70]

(21) HashAggregate [codegen id : 6]
Input [6]: [ss_item_sk#22L, ss_customer_sk#23L, ss_quantity#30, ss_wholesale_cost#31, ss_sales_price#33, d_year#70]
Keys [3]: [d_year#70, ss_item_sk#22L, ss_customer_sk#23L]
Functions [3]: [partial_sum(cast(ss_quantity#30 as bigint)), partial_sum(UnscaledValue(ss_wholesale_cost#31)), partial_sum(UnscaledValue(ss_sales_price#33))]
Aggregate Attributes [3]: [sum#476L, sum#477L, sum#478L]
Results [6]: [d_year#70, ss_item_sk#22L, ss_customer_sk#23L, sum#479L, sum#480L, sum#481L]

(22) Exchange
Input [6]: [d_year#70, ss_item_sk#22L, ss_customer_sk#23L, sum#479L, sum#480L, sum#481L]
Arguments: hashpartitioning(d_year#70, ss_item_sk#22L, ss_customer_sk#23L, 200), ENSURE_REQUIREMENTS, [id=#632]

(23) HashAggregate [codegen id : 7]
Input [6]: [d_year#70, ss_item_sk#22L, ss_customer_sk#23L, sum#479L, sum#480L, sum#481L]
Keys [3]: [d_year#70, ss_item_sk#22L, ss_customer_sk#23L]
Functions [3]: [sum(cast(ss_quantity#30 as bigint)), sum(UnscaledValue(ss_wholesale_cost#31)), sum(UnscaledValue(ss_sales_price#33))]
Aggregate Attributes [3]: [sum(cast(ss_quantity#30 as bigint))#267L, sum(UnscaledValue(ss_wholesale_cost#31))#268L, sum(UnscaledValue(ss_sales_price#33))#269L]
Results [6]: [d_year#70 AS ss_sold_year#17, ss_item_sk#22L, ss_customer_sk#23L, sum(cast(ss_quantity#30 as bigint))#267L AS ss_qty#18L, MakeDecimal(sum(UnscaledValue(ss_wholesale_cost#31))#268L,17,2) AS ss_wc#19, MakeDecimal(sum(UnscaledValue(ss_sales_price#33))#269L,17,2) AS ss_sp#20]

(24) Sort [codegen id : 7]
Input [6]: [ss_sold_year#17, ss_item_sk#22L, ss_customer_sk#23L, ss_qty#18L, ss_wc#19, ss_sp#20]
Arguments: [ss_sold_year#17 ASC NULLS FIRST, ss_item_sk#22L ASC NULLS FIRST, ss_customer_sk#23L ASC NULLS FIRST], false, 0

(25) Scan orc tpcds_bin_partitioned_decimal_orc_2.web_sales
Output [7]: [ws_item_sk#94L, ws_bill_customer_sk#95L, ws_order_number#108L, ws_quantity#109, ws_wholesale_cost#110, ws_sales_price#112, ws_sold_date_sk#125L]
Batched: true
Location: InMemoryFileIndex [hdfs://server1:9000/user/hive/warehouse/tpcds_bin_partitioned_decimal_orc_2.db/web_sales/ws_sold_date_sk=2450816, ... 1822 entries]
PartitionFilters: [isnotnull(ws_sold_date_sk#125L), dynamicpruningexpression(ws_sold_date_sk#125L IN dynamicpruning#473)]
PushedFilters: [IsNotNull(ws_item_sk), IsNotNull(ws_bill_customer_sk)]
ReadSchema: struct<ws_item_sk:bigint,ws_bill_customer_sk:bigint,ws_order_number:bigint,ws_quantity:int,ws_wholesale_cost:decimal(7,2),ws_sales_price:decimal(7,2)>

(26) ColumnarToRow [codegen id : 8]
Input [7]: [ws_item_sk#94L, ws_bill_customer_sk#95L, ws_order_number#108L, ws_quantity#109, ws_wholesale_cost#110, ws_sales_price#112, ws_sold_date_sk#125L]

(27) Filter [codegen id : 8]
Input [7]: [ws_item_sk#94L, ws_bill_customer_sk#95L, ws_order_number#108L, ws_quantity#109, ws_wholesale_cost#110, ws_sales_price#112, ws_sold_date_sk#125L]
Condition : (isnotnull(ws_item_sk#94L) AND isnotnull(ws_bill_customer_sk#95L))

(28) Exchange
Input [7]: [ws_item_sk#94L, ws_bill_customer_sk#95L, ws_order_number#108L, ws_quantity#109, ws_wholesale_cost#110, ws_sales_price#112, ws_sold_date_sk#125L]
Arguments: hashpartitioning(ws_order_number#108L, ws_item_sk#94L, 200), ENSURE_REQUIREMENTS, [id=#718]

(29) Sort [codegen id : 9]
Input [7]: [ws_item_sk#94L, ws_bill_customer_sk#95L, ws_order_number#108L, ws_quantity#109, ws_wholesale_cost#110, ws_sales_price#112, ws_sold_date_sk#125L]
Arguments: [ws_order_number#108L ASC NULLS FIRST, ws_item_sk#94L ASC NULLS FIRST], false, 0

(30) Scan orc tpcds_bin_partitioned_decimal_orc_2.web_returns
Output [3]: [wr_item_sk#127L, wr_order_number#138L, wr_returned_date_sk#149L]
Batched: true
Location: CatalogFileIndex [hdfs://server1:9000/user/hive/warehouse/tpcds_bin_partitioned_decimal_orc_2.db/web_returns]
PushedFilters: [IsNotNull(wr_order_number), IsNotNull(wr_item_sk)]
ReadSchema: struct<wr_item_sk:bigint,wr_order_number:bigint>

(31) ColumnarToRow [codegen id : 10]
Input [3]: [wr_item_sk#127L, wr_order_number#138L, wr_returned_date_sk#149L]

(32) Filter [codegen id : 10]
Input [3]: [wr_item_sk#127L, wr_order_number#138L, wr_returned_date_sk#149L]
Condition : (isnotnull(wr_order_number#138L) AND isnotnull(wr_item_sk#127L))

(33) Project [codegen id : 10]
Output [2]: [wr_item_sk#127L, wr_order_number#138L]
Input [3]: [wr_item_sk#127L, wr_order_number#138L, wr_returned_date_sk#149L]

(34) Exchange
Input [2]: [wr_item_sk#127L, wr_order_number#138L]
Arguments: hashpartitioning(wr_order_number#138L, wr_item_sk#127L, 200), ENSURE_REQUIREMENTS, [id=#482]

(35) Sort [codegen id : 11]
Input [2]: [wr_item_sk#127L, wr_order_number#138L]
Arguments: [wr_order_number#138L ASC NULLS FIRST, wr_item_sk#127L ASC NULLS FIRST], false, 0

(36) SortMergeJoin
Left keys [2]: [ws_order_number#108L, ws_item_sk#94L]
Right keys [2]: [wr_order_number#138L, wr_item_sk#127L]
Join condition: None

(37) Filter [codegen id : 13]
Input [9]: [ws_item_sk#94L, ws_bill_customer_sk#95L, ws_order_number#108L, ws_quantity#109, ws_wholesale_cost#110, ws_sales_price#112, ws_sold_date_sk#125L, wr_item_sk#127L, wr_order_number#138L]
Condition : isnull(wr_order_number#138L)

(38) Project [codegen id : 13]
Output [6]: [ws_item_sk#94L, ws_bill_customer_sk#95L, ws_quantity#109, ws_wholesale_cost#110, ws_sales_price#112, ws_sold_date_sk#125L]
Input [9]: [ws_item_sk#94L, ws_bill_customer_sk#95L, ws_order_number#108L, ws_quantity#109, ws_wholesale_cost#110, ws_sales_price#112, ws_sold_date_sk#125L, wr_item_sk#127L, wr_order_number#138L]

(39) ReusedExchange [Reuses operator id: 18]
Output [2]: [d_date_sk#150L, d_year#156]

(40) BroadcastHashJoin [codegen id : 13]
Left keys [1]: [ws_sold_date_sk#125L]
Right keys [1]: [d_date_sk#150L]
Join condition: None

(41) Project [codegen id : 13]
Output [6]: [ws_item_sk#94L, ws_bill_customer_sk#95L, ws_quantity#109, ws_wholesale_cost#110, ws_sales_price#112, d_year#156]
Input [8]: [ws_item_sk#94L, ws_bill_customer_sk#95L, ws_quantity#109, ws_wholesale_cost#110, ws_sales_price#112, ws_sold_date_sk#125L, d_date_sk#150L, d_year#156]

(42) HashAggregate [codegen id : 13]
Input [6]: [ws_item_sk#94L, ws_bill_customer_sk#95L, ws_quantity#109, ws_wholesale_cost#110, ws_sales_price#112, d_year#156]
Keys [3]: [d_year#156, ws_item_sk#94L, ws_bill_customer_sk#95L]
Functions [3]: [partial_sum(cast(ws_quantity#109 as bigint)), partial_sum(UnscaledValue(ws_wholesale_cost#110)), partial_sum(UnscaledValue(ws_sales_price#112))]
Aggregate Attributes [3]: [sum#482L, sum#483L, sum#484L]
Results [6]: [d_year#156, ws_item_sk#94L, ws_bill_customer_sk#95L, sum#485L, sum#486L, sum#487L]

(43) Exchange
Input [6]: [d_year#156, ws_item_sk#94L, ws_bill_customer_sk#95L, sum#485L, sum#486L, sum#487L]
Arguments: hashpartitioning(d_year#156, ws_item_sk#94L, ws_bill_customer_sk#95L, 200), ENSURE_REQUIREMENTS, [id=#730]

(44) HashAggregate [codegen id : 14]
Input [6]: [d_year#156, ws_item_sk#94L, ws_bill_customer_sk#95L, sum#485L, sum#486L, sum#487L]
Keys [3]: [d_year#156, ws_item_sk#94L, ws_bill_customer_sk#95L]
Functions [3]: [sum(cast(ws_quantity#109 as bigint)), sum(UnscaledValue(ws_wholesale_cost#110)), sum(UnscaledValue(ws_sales_price#112))]
Aggregate Attributes [3]: [sum(cast(ws_quantity#109 as bigint))#270L, sum(UnscaledValue(ws_wholesale_cost#110))#271L, sum(UnscaledValue(ws_sales_price#112))#272L]
Results [6]: [d_year#156 AS ws_sold_year#7, ws_item_sk#94L, ws_bill_customer_sk#95L AS ws_customer_sk#8L, sum(cast(ws_quantity#109 as bigint))#270L AS ws_qty#9L, MakeDecimal(sum(UnscaledValue(ws_wholesale_cost#110))#271L,17,2) AS ws_wc#10, MakeDecimal(sum(UnscaledValue(ws_sales_price#112))#272L,17,2) AS ws_sp#11]

(45) Filter [codegen id : 14]
Input [6]: [ws_sold_year#7, ws_item_sk#94L, ws_customer_sk#8L, ws_qty#9L, ws_wc#10, ws_sp#11]
Condition : (coalesce(ws_qty#9L, 0) > 0)

(46) Sort [codegen id : 14]
Input [6]: [ws_sold_year#7, ws_item_sk#94L, ws_customer_sk#8L, ws_qty#9L, ws_wc#10, ws_sp#11]
Arguments: [ws_sold_year#7 ASC NULLS FIRST, ws_item_sk#94L ASC NULLS FIRST, ws_customer_sk#8L ASC NULLS FIRST], false, 0

(47) SortMergeJoin [codegen id : 15]
Left keys [3]: [ss_sold_year#17, ss_item_sk#22L, ss_customer_sk#23L]
Right keys [3]: [ws_sold_year#7, ws_item_sk#94L, ws_customer_sk#8L]
Join condition: None

(48) Project [codegen id : 15]
Output [9]: [ss_sold_year#17, ss_item_sk#22L, ss_customer_sk#23L, ss_qty#18L, ss_wc#19, ss_sp#20, ws_qty#9L, ws_wc#10, ws_sp#11]
Input [12]: [ss_sold_year#17, ss_item_sk#22L, ss_customer_sk#23L, ss_qty#18L, ss_wc#19, ss_sp#20, ws_sold_year#7, ws_item_sk#94L, ws_customer_sk#8L, ws_qty#9L, ws_wc#10, ws_sp#11]

(49) Scan orc tpcds_bin_partitioned_decimal_orc_2.catalog_sales
Output [7]: [cs_bill_customer_sk#180L, cs_item_sk#192L, cs_order_number#194L, cs_quantity#195, cs_wholesale_cost#196, cs_sales_price#198, cs_sold_date_sk#211L]
Batched: true
Location: InMemoryFileIndex [hdfs://server1:9000/user/hive/warehouse/tpcds_bin_partitioned_decimal_orc_2.db/catalog_sales/cs_sold_date_sk=2450815, ... 1838 entries]
PartitionFilters: [isnotnull(cs_sold_date_sk#211L), dynamicpruningexpression(cs_sold_date_sk#211L IN dynamicpruning#473)]
PushedFilters: [IsNotNull(cs_item_sk), IsNotNull(cs_bill_customer_sk)]
ReadSchema: struct<cs_bill_customer_sk:bigint,cs_item_sk:bigint,cs_order_number:bigint,cs_quantity:int,cs_wholesale_cost:decimal(7,2),cs_sales_price:decimal(7,2)>

(50) ColumnarToRow [codegen id : 16]
Input [7]: [cs_bill_customer_sk#180L, cs_item_sk#192L, cs_order_number#194L, cs_quantity#195, cs_wholesale_cost#196, cs_sales_price#198, cs_sold_date_sk#211L]

(51) Filter [codegen id : 16]
Input [7]: [cs_bill_customer_sk#180L, cs_item_sk#192L, cs_order_number#194L, cs_quantity#195, cs_wholesale_cost#196, cs_sales_price#198, cs_sold_date_sk#211L]
Condition : (isnotnull(cs_item_sk#192L) AND isnotnull(cs_bill_customer_sk#180L))

(52) Exchange
Input [7]: [cs_bill_customer_sk#180L, cs_item_sk#192L, cs_order_number#194L, cs_quantity#195, cs_wholesale_cost#196, cs_sales_price#198, cs_sold_date_sk#211L]
Arguments: hashpartitioning(cs_order_number#194L, cs_item_sk#192L, 200), ENSURE_REQUIREMENTS, [id=#748]

(53) Sort [codegen id : 17]
Input [7]: [cs_bill_customer_sk#180L, cs_item_sk#192L, cs_order_number#194L, cs_quantity#195, cs_wholesale_cost#196, cs_sales_price#198, cs_sold_date_sk#211L]
Arguments: [cs_order_number#194L ASC NULLS FIRST, cs_item_sk#192L ASC NULLS FIRST], false, 0

(54) Scan orc tpcds_bin_partitioned_decimal_orc_2.catalog_returns
Output [3]: [cr_item_sk#213L, cr_order_number#227L, cr_returned_date_sk#238L]
Batched: true
Location: CatalogFileIndex [hdfs://server1:9000/user/hive/warehouse/tpcds_bin_partitioned_decimal_orc_2.db/catalog_returns]
PushedFilters: [IsNotNull(cr_order_number), IsNotNull(cr_item_sk)]
ReadSchema: struct<cr_item_sk:bigint,cr_order_number:bigint>

(55) ColumnarToRow [codegen id : 18]
Input [3]: [cr_item_sk#213L, cr_order_number#227L, cr_returned_date_sk#238L]

(56) Filter [codegen id : 18]
Input [3]: [cr_item_sk#213L, cr_order_number#227L, cr_returned_date_sk#238L]
Condition : (isnotnull(cr_order_number#227L) AND isnotnull(cr_item_sk#213L))

(57) Project [codegen id : 18]
Output [2]: [cr_item_sk#213L, cr_order_number#227L]
Input [3]: [cr_item_sk#213L, cr_order_number#227L, cr_returned_date_sk#238L]

(58) Exchange
Input [2]: [cr_item_sk#213L, cr_order_number#227L]
Arguments: hashpartitioning(cr_order_number#227L, cr_item_sk#213L, 200), ENSURE_REQUIREMENTS, [id=#524]

(59) Sort [codegen id : 19]
Input [2]: [cr_item_sk#213L, cr_order_number#227L]
Arguments: [cr_order_number#227L ASC NULLS FIRST, cr_item_sk#213L ASC NULLS FIRST], false, 0

(60) SortMergeJoin
Left keys [2]: [cs_order_number#194L, cs_item_sk#192L]
Right keys [2]: [cr_order_number#227L, cr_item_sk#213L]
Join condition: None

(61) Filter [codegen id : 21]
Input [9]: [cs_bill_customer_sk#180L, cs_item_sk#192L, cs_order_number#194L, cs_quantity#195, cs_wholesale_cost#196, cs_sales_price#198, cs_sold_date_sk#211L, cr_item_sk#213L, cr_order_number#227L]
Condition : isnull(cr_order_number#227L)

(62) Project [codegen id : 21]
Output [6]: [cs_bill_customer_sk#180L, cs_item_sk#192L, cs_quantity#195, cs_wholesale_cost#196, cs_sales_price#198, cs_sold_date_sk#211L]
Input [9]: [cs_bill_customer_sk#180L, cs_item_sk#192L, cs_order_number#194L, cs_quantity#195, cs_wholesale_cost#196, cs_sales_price#198, cs_sold_date_sk#211L, cr_item_sk#213L, cr_order_number#227L]

(63) ReusedExchange [Reuses operator id: 18]
Output [2]: [d_date_sk#239L, d_year#245]

(64) BroadcastHashJoin [codegen id : 21]
Left keys [1]: [cs_sold_date_sk#211L]
Right keys [1]: [d_date_sk#239L]
Join condition: None

(65) Project [codegen id : 21]
Output [6]: [cs_bill_customer_sk#180L, cs_item_sk#192L, cs_quantity#195, cs_wholesale_cost#196, cs_sales_price#198, d_year#245]
Input [8]: [cs_bill_customer_sk#180L, cs_item_sk#192L, cs_quantity#195, cs_wholesale_cost#196, cs_sales_price#198, cs_sold_date_sk#211L, d_date_sk#239L, d_year#245]

(66) HashAggregate [codegen id : 21]
Input [6]: [cs_bill_customer_sk#180L, cs_item_sk#192L, cs_quantity#195, cs_wholesale_cost#196, cs_sales_price#198, d_year#245]
Keys [3]: [d_year#245, cs_item_sk#192L, cs_bill_customer_sk#180L]
Functions [3]: [partial_sum(cast(cs_quantity#195 as bigint)), partial_sum(UnscaledValue(cs_wholesale_cost#196)), partial_sum(UnscaledValue(cs_sales_price#198))]
Aggregate Attributes [3]: [sum#488L, sum#489L, sum#490L]
Results [6]: [d_year#245, cs_item_sk#192L, cs_bill_customer_sk#180L, sum#491L, sum#492L, sum#493L]

(67) Exchange
Input [6]: [d_year#245, cs_item_sk#192L, cs_bill_customer_sk#180L, sum#491L, sum#492L, sum#493L]
Arguments: hashpartitioning(d_year#245, cs_item_sk#192L, cs_bill_customer_sk#180L, 200), ENSURE_REQUIREMENTS, [id=#760]

(68) HashAggregate [codegen id : 22]
Input [6]: [d_year#245, cs_item_sk#192L, cs_bill_customer_sk#180L, sum#491L, sum#492L, sum#493L]
Keys [3]: [d_year#245, cs_item_sk#192L, cs_bill_customer_sk#180L]
Functions [3]: [sum(cast(cs_quantity#195 as bigint)), sum(UnscaledValue(cs_wholesale_cost#196)), sum(UnscaledValue(cs_sales_price#198))]
Aggregate Attributes [3]: [sum(cast(cs_quantity#195 as bigint))#273L, sum(UnscaledValue(cs_wholesale_cost#196))#274L, sum(UnscaledValue(cs_sales_price#198))#275L]
Results [6]: [d_year#245 AS cs_sold_year#12, cs_item_sk#192L, cs_bill_customer_sk#180L AS cs_customer_sk#13L, sum(cast(cs_quantity#195 as bigint))#273L AS cs_qty#14L, MakeDecimal(sum(UnscaledValue(cs_wholesale_cost#196))#274L,17,2) AS cs_wc#15, MakeDecimal(sum(UnscaledValue(cs_sales_price#198))#275L,17,2) AS cs_sp#16]

(69) Filter [codegen id : 22]
Input [6]: [cs_sold_year#12, cs_item_sk#192L, cs_customer_sk#13L, cs_qty#14L, cs_wc#15, cs_sp#16]
Condition : (coalesce(cs_qty#14L, 0) > 0)

(70) Sort [codegen id : 22]
Input [6]: [cs_sold_year#12, cs_item_sk#192L, cs_customer_sk#13L, cs_qty#14L, cs_wc#15, cs_sp#16]
Arguments: [cs_sold_year#12 ASC NULLS FIRST, cs_item_sk#192L ASC NULLS FIRST, cs_customer_sk#13L ASC NULLS FIRST], false, 0

(71) SortMergeJoin [codegen id : 23]
Left keys [3]: [ss_sold_year#17, ss_item_sk#22L, ss_customer_sk#23L]
Right keys [3]: [cs_sold_year#12, cs_item_sk#192L, cs_customer_sk#13L]
Join condition: None

(72) Project [codegen id : 23]
Output [12]: [round((cast(ss_qty#18L as double) / cast(coalesce((ws_qty#9L + cs_qty#14L), 1) as double)), 2) AS ratio#0, ss_qty#18L AS store_qty#1L, ss_wc#19 AS store_wholesale_cost#2, ss_sp#20 AS store_sales_price#3, (coalesce(ws_qty#9L, 0) + coalesce(cs_qty#14L, 0)) AS other_chan_qty#4L, CheckOverflow((promote_precision(cast(coalesce(ws_wc#10, 0.00) as decimal(18,2))) + promote_precision(cast(coalesce(cs_wc#15, 0.00) as decimal(18,2)))), DecimalType(18,2), true) AS other_chan_wholesale_cost#5, CheckOverflow((promote_precision(cast(coalesce(ws_sp#11, 0.00) as decimal(18,2))) + promote_precision(cast(coalesce(cs_sp#16, 0.00) as decimal(18,2)))), DecimalType(18,2), true) AS other_chan_sales_price#6, ss_qty#18L, ss_wc#19, ss_sp#20, ws_qty#9L, cs_qty#14L]
Input [15]: [ss_sold_year#17, ss_item_sk#22L, ss_customer_sk#23L, ss_qty#18L, ss_wc#19, ss_sp#20, ws_qty#9L, ws_wc#10, ws_sp#11, cs_sold_year#12, cs_item_sk#192L, cs_customer_sk#13L, cs_qty#14L, cs_wc#15, cs_sp#16]

(73) TakeOrderedAndProject
Input [12]: [ratio#0, store_qty#1L, store_wholesale_cost#2, store_sales_price#3, other_chan_qty#4L, other_chan_wholesale_cost#5, other_chan_sales_price#6, ss_qty#18L, ss_wc#19, ss_sp#20, ws_qty#9L, cs_qty#14L]
Arguments: 100, [ratio#0 ASC NULLS FIRST, ss_qty#18L DESC NULLS LAST, ss_wc#19 DESC NULLS LAST, ss_sp#20 DESC NULLS LAST, other_chan_qty#4L ASC NULLS FIRST, other_chan_wholesale_cost#5 ASC NULLS FIRST, other_chan_sales_price#6 ASC NULLS FIRST, round((cast(ss_qty#18L as double) / cast(coalesce((ws_qty#9L + cs_qty#14L), 1) as double)), 2) ASC NULLS FIRST], [ratio#0, store_qty#1L, store_wholesale_cost#2, store_sales_price#3, other_chan_qty#4L, other_chan_wholesale_cost#5, other_chan_sales_price#6]

===== Subqueries =====

Subquery:1 Hosting operator id = 1 Hosting Expression = ss_sold_date_sk#43L IN dynamicpruning#473
ReusedExchange (74)


(74) ReusedExchange [Reuses operator id: 18]
Output [2]: [d_date_sk#64L, d_year#70]

Subquery:2 Hosting operator id = 25 Hosting Expression = ws_sold_date_sk#125L IN dynamicpruning#473

Subquery:3 Hosting operator id = 49 Hosting Expression = cs_sold_date_sk#211L IN dynamicpruning#473


