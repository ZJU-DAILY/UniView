== Physical Plan ==
TakeOrderedAndProject (36)
+- * HashAggregate (35)
   +- Exchange (34)
      +- * HashAggregate (33)
         +- * Project (32)
            +- * BroadcastHashJoin Inner BuildRight (31)
               :- * Project (26)
               :  +- * BroadcastHashJoin Inner BuildRight (25)
               :     :- * Project (19)
               :     :  +- * BroadcastHashJoin Inner BuildRight (18)
               :     :     :- * Project (13)
               :     :     :  +- SortMergeJoin LeftOuter (12)
               :     :     :     :- * Sort (5)
               :     :     :     :  +- Exchange (4)
               :     :     :     :     +- * Filter (3)
               :     :     :     :        +- * ColumnarToRow (2)
               :     :     :     :           +- Scan orc tpcds_bin_partitioned_decimal_orc_2.catalog_sales (1)
               :     :     :     +- * Sort (11)
               :     :     :        +- Exchange (10)
               :     :     :           +- * Project (9)
               :     :     :              +- * Filter (8)
               :     :     :                 +- * ColumnarToRow (7)
               :     :     :                    +- Scan orc tpcds_bin_partitioned_decimal_orc_2.catalog_returns (6)
               :     :     +- BroadcastExchange (17)
               :     :        +- * Filter (16)
               :     :           +- * ColumnarToRow (15)
               :     :              +- Scan orc tpcds_bin_partitioned_decimal_orc_2.warehouse (14)
               :     +- BroadcastExchange (24)
               :        +- * Project (23)
               :           +- * Filter (22)
               :              +- * ColumnarToRow (21)
               :                 +- Scan orc tpcds_bin_partitioned_decimal_orc_2.item (20)
               +- BroadcastExchange (30)
                  +- * Filter (29)
                     +- * ColumnarToRow (28)
                        +- Scan orc tpcds_bin_partitioned_decimal_orc_2.date_dim (27)


(1) Scan orc tpcds_bin_partitioned_decimal_orc_2.catalog_sales
Output [5]: [cs_warehouse_sk#15L, cs_item_sk#16L, cs_order_number#18L, cs_sales_price#22, cs_sold_date_sk#35L]
Batched: true
Location: InMemoryFileIndex [hdfs://server1:9000/user/hive/warehouse/tpcds_bin_partitioned_decimal_orc_2.db/catalog_sales/cs_sold_date_sk=2450815, ... 1838 entries]
PartitionFilters: [isnotnull(cs_sold_date_sk#35L), dynamicpruningexpression(cs_sold_date_sk#35L IN dynamicpruning#260)]
PushedFilters: [IsNotNull(cs_warehouse_sk), IsNotNull(cs_item_sk)]
ReadSchema: struct<cs_warehouse_sk:bigint,cs_item_sk:bigint,cs_order_number:bigint,cs_sales_price:decimal(7,2)>

(2) ColumnarToRow [codegen id : 1]
Input [5]: [cs_warehouse_sk#15L, cs_item_sk#16L, cs_order_number#18L, cs_sales_price#22, cs_sold_date_sk#35L]

(3) Filter [codegen id : 1]
Input [5]: [cs_warehouse_sk#15L, cs_item_sk#16L, cs_order_number#18L, cs_sales_price#22, cs_sold_date_sk#35L]
Condition : (isnotnull(cs_warehouse_sk#15L) AND isnotnull(cs_item_sk#16L))

(4) Exchange
Input [5]: [cs_warehouse_sk#15L, cs_item_sk#16L, cs_order_number#18L, cs_sales_price#22, cs_sold_date_sk#35L]
Arguments: hashpartitioning(cs_order_number#18L, cs_item_sk#16L, 200), ENSURE_REQUIREMENTS, [id=#254]

(5) Sort [codegen id : 2]
Input [5]: [cs_warehouse_sk#15L, cs_item_sk#16L, cs_order_number#18L, cs_sales_price#22, cs_sold_date_sk#35L]
Arguments: [cs_order_number#18L ASC NULLS FIRST, cs_item_sk#16L ASC NULLS FIRST], false, 0

(6) Scan orc tpcds_bin_partitioned_decimal_orc_2.catalog_returns
Output [4]: [cr_item_sk#37L, cr_order_number#51L, cr_refunded_cash#58, cr_returned_date_sk#62L]
Batched: true
Location: CatalogFileIndex [hdfs://server1:9000/user/hive/warehouse/tpcds_bin_partitioned_decimal_orc_2.db/catalog_returns]
PushedFilters: [IsNotNull(cr_order_number), IsNotNull(cr_item_sk)]
ReadSchema: struct<cr_item_sk:bigint,cr_order_number:bigint,cr_refunded_cash:decimal(7,2)>

(7) ColumnarToRow [codegen id : 3]
Input [4]: [cr_item_sk#37L, cr_order_number#51L, cr_refunded_cash#58, cr_returned_date_sk#62L]

(8) Filter [codegen id : 3]
Input [4]: [cr_item_sk#37L, cr_order_number#51L, cr_refunded_cash#58, cr_returned_date_sk#62L]
Condition : (isnotnull(cr_order_number#51L) AND isnotnull(cr_item_sk#37L))

(9) Project [codegen id : 3]
Output [3]: [cr_item_sk#37L, cr_order_number#51L, cr_refunded_cash#58]
Input [4]: [cr_item_sk#37L, cr_order_number#51L, cr_refunded_cash#58, cr_returned_date_sk#62L]

(10) Exchange
Input [3]: [cr_item_sk#37L, cr_order_number#51L, cr_refunded_cash#58]
Arguments: hashpartitioning(cr_order_number#51L, cr_item_sk#37L, 200), ENSURE_REQUIREMENTS, [id=#196]

(11) Sort [codegen id : 4]
Input [3]: [cr_item_sk#37L, cr_order_number#51L, cr_refunded_cash#58]
Arguments: [cr_order_number#51L ASC NULLS FIRST, cr_item_sk#37L ASC NULLS FIRST], false, 0

(12) SortMergeJoin
Left keys [2]: [cs_order_number#18L, cs_item_sk#16L]
Right keys [2]: [cr_order_number#51L, cr_item_sk#37L]
Join condition: None

(13) Project [codegen id : 8]
Output [5]: [cs_warehouse_sk#15L, cs_item_sk#16L, cs_sales_price#22, cs_sold_date_sk#35L, cr_refunded_cash#58]
Input [8]: [cs_warehouse_sk#15L, cs_item_sk#16L, cs_order_number#18L, cs_sales_price#22, cs_sold_date_sk#35L, cr_item_sk#37L, cr_order_number#51L, cr_refunded_cash#58]

(14) Scan orc tpcds_bin_partitioned_decimal_orc_2.warehouse
Output [2]: [w_warehouse_sk#63L, w_state#73]
Batched: true
Location: InMemoryFileIndex [hdfs://server1:9000/user/hive/warehouse/tpcds_bin_partitioned_decimal_orc_2.db/warehouse]
PushedFilters: [IsNotNull(w_warehouse_sk)]
ReadSchema: struct<w_warehouse_sk:bigint,w_state:string>

(15) ColumnarToRow [codegen id : 5]
Input [2]: [w_warehouse_sk#63L, w_state#73]

(16) Filter [codegen id : 5]
Input [2]: [w_warehouse_sk#63L, w_state#73]
Condition : isnotnull(w_warehouse_sk#63L)

(17) BroadcastExchange
Input [2]: [w_warehouse_sk#63L, w_state#73]
Arguments: HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#207]

(18) BroadcastHashJoin [codegen id : 8]
Left keys [1]: [cs_warehouse_sk#15L]
Right keys [1]: [w_warehouse_sk#63L]
Join condition: None

(19) Project [codegen id : 8]
Output [5]: [cs_item_sk#16L, cs_sales_price#22, cs_sold_date_sk#35L, cr_refunded_cash#58, w_state#73]
Input [7]: [cs_warehouse_sk#15L, cs_item_sk#16L, cs_sales_price#22, cs_sold_date_sk#35L, cr_refunded_cash#58, w_warehouse_sk#63L, w_state#73]

(20) Scan orc tpcds_bin_partitioned_decimal_orc_2.item
Output [3]: [i_item_sk#77L, i_item_id#78, i_current_price#82]
Batched: true
Location: InMemoryFileIndex [hdfs://server1:9000/user/hive/warehouse/tpcds_bin_partitioned_decimal_orc_2.db/item]
PushedFilters: [IsNotNull(i_current_price), GreaterThanOrEqual(i_current_price,0.99), LessThanOrEqual(i_current_price,1.49), IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:bigint,i_item_id:string,i_current_price:decimal(7,2)>

(21) ColumnarToRow [codegen id : 6]
Input [3]: [i_item_sk#77L, i_item_id#78, i_current_price#82]

(22) Filter [codegen id : 6]
Input [3]: [i_item_sk#77L, i_item_id#78, i_current_price#82]
Condition : (((isnotnull(i_current_price#82) AND (i_current_price#82 >= 0.99)) AND (i_current_price#82 <= 1.49)) AND isnotnull(i_item_sk#77L))

(23) Project [codegen id : 6]
Output [2]: [i_item_sk#77L, i_item_id#78]
Input [3]: [i_item_sk#77L, i_item_id#78, i_current_price#82]

(24) BroadcastExchange
Input [2]: [i_item_sk#77L, i_item_id#78]
Arguments: HashedRelationBroadcastMode(List(input[0, bigint, true]),false), [id=#216]

(25) BroadcastHashJoin [codegen id : 8]
Left keys [1]: [cs_item_sk#16L]
Right keys [1]: [i_item_sk#77L]
Join condition: None

(26) Project [codegen id : 8]
Output [5]: [cs_sales_price#22, cs_sold_date_sk#35L, cr_refunded_cash#58, w_state#73, i_item_id#78]
Input [7]: [cs_item_sk#16L, cs_sales_price#22, cs_sold_date_sk#35L, cr_refunded_cash#58, w_state#73, i_item_sk#77L, i_item_id#78]

(27) Scan orc tpcds_bin_partitioned_decimal_orc_2.date_dim
Output [2]: [d_date_sk#99L, d_date#101]
Batched: true
Location: InMemoryFileIndex [hdfs://server1:9000/user/hive/warehouse/tpcds_bin_partitioned_decimal_orc_2.db/date_dim]
PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,2000-02-10), LessThanOrEqual(d_date,2000-04-10), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:bigint,d_date:date>

(28) ColumnarToRow [codegen id : 7]
Input [2]: [d_date_sk#99L, d_date#101]

(29) Filter [codegen id : 7]
Input [2]: [d_date_sk#99L, d_date#101]
Condition : (((isnotnull(d_date#101) AND (d_date#101 >= 10997)) AND (d_date#101 <= 11057)) AND isnotnull(d_date_sk#99L))

(30) BroadcastExchange
Input [2]: [d_date_sk#99L, d_date#101]
Arguments: HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#224]

(31) BroadcastHashJoin [codegen id : 8]
Left keys [1]: [cs_sold_date_sk#35L]
Right keys [1]: [d_date_sk#99L]
Join condition: None

(32) Project [codegen id : 8]
Output [5]: [cs_sales_price#22, cr_refunded_cash#58, w_state#73, i_item_id#78, d_date#101]
Input [7]: [cs_sales_price#22, cs_sold_date_sk#35L, cr_refunded_cash#58, w_state#73, i_item_id#78, d_date_sk#99L, d_date#101]

(33) HashAggregate [codegen id : 8]
Input [5]: [cs_sales_price#22, cr_refunded_cash#58, w_state#73, i_item_id#78, d_date#101]
Keys [2]: [w_state#73, i_item_id#78]
Functions [2]: [partial_sum(CASE WHEN (d_date#101 < 11027) THEN CheckOverflow((promote_precision(cast(cs_sales_price#22 as decimal(13,2))) - promote_precision(cast(coalesce(cast(cr_refunded_cash#58 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_date#101 >= 11027) THEN CheckOverflow((promote_precision(cast(cs_sales_price#22 as decimal(13,2))) - promote_precision(cast(coalesce(cast(cr_refunded_cash#58 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2), true) ELSE 0.00 END)]
Aggregate Attributes [4]: [sum#261, isEmpty#262, sum#263, isEmpty#264]
Results [6]: [w_state#73, i_item_id#78, sum#265, isEmpty#266, sum#267, isEmpty#268]

(34) Exchange
Input [6]: [w_state#73, i_item_id#78, sum#265, isEmpty#266, sum#267, isEmpty#268]
Arguments: hashpartitioning(w_state#73, i_item_id#78, 200), ENSURE_REQUIREMENTS, [id=#269]

(35) HashAggregate [codegen id : 9]
Input [6]: [w_state#73, i_item_id#78, sum#265, isEmpty#266, sum#267, isEmpty#268]
Keys [2]: [w_state#73, i_item_id#78]
Functions [2]: [sum(CASE WHEN (d_date#101 < 11027) THEN CheckOverflow((promote_precision(cast(cs_sales_price#22 as decimal(13,2))) - promote_precision(cast(coalesce(cast(cr_refunded_cash#58 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2), true) ELSE 0.00 END), sum(CASE WHEN (d_date#101 >= 11027) THEN CheckOverflow((promote_precision(cast(cs_sales_price#22 as decimal(13,2))) - promote_precision(cast(coalesce(cast(cr_refunded_cash#58 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2), true) ELSE 0.00 END)]
Aggregate Attributes [2]: [sum(CASE WHEN (d_date#101 < 11027) THEN CheckOverflow((promote_precision(cast(cs_sales_price#22 as decimal(13,2))) - promote_precision(cast(coalesce(cast(cr_refunded_cash#58 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2), true) ELSE 0.00 END)#127, sum(CASE WHEN (d_date#101 >= 11027) THEN CheckOverflow((promote_precision(cast(cs_sales_price#22 as decimal(13,2))) - promote_precision(cast(coalesce(cast(cr_refunded_cash#58 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2), true) ELSE 0.00 END)#128]
Results [4]: [w_state#73, i_item_id#78, sum(CASE WHEN (d_date#101 < 11027) THEN CheckOverflow((promote_precision(cast(cs_sales_price#22 as decimal(13,2))) - promote_precision(cast(coalesce(cast(cr_refunded_cash#58 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2), true) ELSE 0.00 END)#127 AS sales_before#0, sum(CASE WHEN (d_date#101 >= 11027) THEN CheckOverflow((promote_precision(cast(cs_sales_price#22 as decimal(13,2))) - promote_precision(cast(coalesce(cast(cr_refunded_cash#58 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2), true) ELSE 0.00 END)#128 AS sales_after#1]

(36) TakeOrderedAndProject
Input [4]: [w_state#73, i_item_id#78, sales_before#0, sales_after#1]
Arguments: 100, [w_state#73 ASC NULLS FIRST, i_item_id#78 ASC NULLS FIRST], [w_state#73, i_item_id#78, sales_before#0, sales_after#1]

===== Subqueries =====

Subquery:1 Hosting operator id = 1 Hosting Expression = cs_sold_date_sk#35L IN dynamicpruning#260
ReusedExchange (37)


(37) ReusedExchange [Reuses operator id: 30]
Output [2]: [d_date_sk#99L, d_date#101]


