== Physical Plan ==
TakeOrderedAndProject (55)
+- * HashAggregate (54)
   +- Exchange (53)
      +- * HashAggregate (52)
         +- Union (51)
            :- * HashAggregate (32)
            :  +- Exchange (31)
            :     +- * HashAggregate (30)
            :        +- * Project (29)
            :           +- * BroadcastHashJoin Inner BuildRight (28)
            :              :- * Project (22)
            :              :  +- * BroadcastHashJoin Inner BuildRight (21)
            :              :     :- * Project (15)
            :              :     :  +- * BroadcastHashJoin Inner BuildRight (14)
            :              :     :     :- * Project (9)
            :              :     :     :  +- * BroadcastHashJoin Inner BuildRight (8)
            :              :     :     :     :- * Filter (3)
            :              :     :     :     :  +- * ColumnarToRow (2)
            :              :     :     :     :     +- Scan orc tpcds_bin_partitioned_decimal_orc_2.web_sales (1)
            :              :     :     :     +- BroadcastExchange (7)
            :              :     :     :        +- * Filter (6)
            :              :     :     :           +- * ColumnarToRow (5)
            :              :     :     :              +- Scan orc tpcds_bin_partitioned_decimal_orc_2.warehouse (4)
            :              :     :     +- BroadcastExchange (13)
            :              :     :        +- * Filter (12)
            :              :     :           +- * ColumnarToRow (11)
            :              :     :              +- Scan orc tpcds_bin_partitioned_decimal_orc_2.date_dim (10)
            :              :     +- BroadcastExchange (20)
            :              :        +- * Project (19)
            :              :           +- * Filter (18)
            :              :              +- * ColumnarToRow (17)
            :              :                 +- Scan orc tpcds_bin_partitioned_decimal_orc_2.time_dim (16)
            :              +- BroadcastExchange (27)
            :                 +- * Project (26)
            :                    +- * Filter (25)
            :                       +- * ColumnarToRow (24)
            :                          +- Scan orc tpcds_bin_partitioned_decimal_orc_2.ship_mode (23)
            +- * HashAggregate (50)
               +- Exchange (49)
                  +- * HashAggregate (48)
                     +- * Project (47)
                        +- * BroadcastHashJoin Inner BuildRight (46)
                           :- * Project (44)
                           :  +- * BroadcastHashJoin Inner BuildRight (43)
                           :     :- * Project (41)
                           :     :  +- * BroadcastHashJoin Inner BuildRight (40)
                           :     :     :- * Project (38)
                           :     :     :  +- * BroadcastHashJoin Inner BuildRight (37)
                           :     :     :     :- * Filter (35)
                           :     :     :     :  +- * ColumnarToRow (34)
                           :     :     :     :     +- Scan orc tpcds_bin_partitioned_decimal_orc_2.catalog_sales (33)
                           :     :     :     +- ReusedExchange (36)
                           :     :     +- ReusedExchange (39)
                           :     +- ReusedExchange (42)
                           +- ReusedExchange (45)


(1) Scan orc tpcds_bin_partitioned_decimal_orc_2.web_sales
Output [7]: [ws_sold_time_sk#88L, ws_ship_mode_sk#101L, ws_warehouse_sk#102L, ws_quantity#105, ws_ext_sales_price#110, ws_net_paid#116, ws_sold_date_sk#121L]
Batched: true
Location: InMemoryFileIndex [hdfs://server1:9000/user/hive/warehouse/tpcds_bin_partitioned_decimal_orc_2.db/web_sales/ws_sold_date_sk=2450816, ... 1822 entries]
PartitionFilters: [isnotnull(ws_sold_date_sk#121L), dynamicpruningexpression(ws_sold_date_sk#121L IN dynamicpruning#527)]
PushedFilters: [IsNotNull(ws_warehouse_sk), IsNotNull(ws_sold_time_sk), IsNotNull(ws_ship_mode_sk)]
ReadSchema: struct<ws_sold_time_sk:bigint,ws_ship_mode_sk:bigint,ws_warehouse_sk:bigint,ws_quantity:int,ws_ext_sales_price:decimal(7,2),ws_net_paid:decimal(7,2)>

(2) ColumnarToRow [codegen id : 5]
Input [7]: [ws_sold_time_sk#88L, ws_ship_mode_sk#101L, ws_warehouse_sk#102L, ws_quantity#105, ws_ext_sales_price#110, ws_net_paid#116, ws_sold_date_sk#121L]

(3) Filter [codegen id : 5]
Input [7]: [ws_sold_time_sk#88L, ws_ship_mode_sk#101L, ws_warehouse_sk#102L, ws_quantity#105, ws_ext_sales_price#110, ws_net_paid#116, ws_sold_date_sk#121L]
Condition : ((isnotnull(ws_warehouse_sk#102L) AND isnotnull(ws_sold_time_sk#88L)) AND isnotnull(ws_ship_mode_sk#101L))

(4) Scan orc tpcds_bin_partitioned_decimal_orc_2.warehouse
Output [7]: [w_warehouse_sk#122L, w_warehouse_name#124, w_warehouse_sq_ft#125, w_city#130, w_county#131, w_state#132, w_country#134]
Batched: true
Location: InMemoryFileIndex [hdfs://server1:9000/user/hive/warehouse/tpcds_bin_partitioned_decimal_orc_2.db/warehouse]
PushedFilters: [IsNotNull(w_warehouse_sk)]
ReadSchema: struct<w_warehouse_sk:bigint,w_warehouse_name:string,w_warehouse_sq_ft:int,w_city:string,w_county:string,w_state:string,w_country:string>

(5) ColumnarToRow [codegen id : 1]
Input [7]: [w_warehouse_sk#122L, w_warehouse_name#124, w_warehouse_sq_ft#125, w_city#130, w_county#131, w_state#132, w_country#134]

(6) Filter [codegen id : 1]
Input [7]: [w_warehouse_sk#122L, w_warehouse_name#124, w_warehouse_sq_ft#125, w_city#130, w_county#131, w_state#132, w_country#134]
Condition : isnotnull(w_warehouse_sk#122L)

(7) BroadcastExchange
Input [7]: [w_warehouse_sk#122L, w_warehouse_name#124, w_warehouse_sq_ft#125, w_city#130, w_county#131, w_state#132, w_country#134]
Arguments: HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#384]

(8) BroadcastHashJoin [codegen id : 5]
Left keys [1]: [ws_warehouse_sk#102L]
Right keys [1]: [w_warehouse_sk#122L]
Join condition: None

(9) Project [codegen id : 5]
Output [12]: [ws_sold_time_sk#88L, ws_ship_mode_sk#101L, ws_quantity#105, ws_ext_sales_price#110, ws_net_paid#116, ws_sold_date_sk#121L, w_warehouse_name#124, w_warehouse_sq_ft#125, w_city#130, w_county#131, w_state#132, w_country#134]
Input [14]: [ws_sold_time_sk#88L, ws_ship_mode_sk#101L, ws_warehouse_sk#102L, ws_quantity#105, ws_ext_sales_price#110, ws_net_paid#116, ws_sold_date_sk#121L, w_warehouse_sk#122L, w_warehouse_name#124, w_warehouse_sq_ft#125, w_city#130, w_county#131, w_state#132, w_country#134]

(10) Scan orc tpcds_bin_partitioned_decimal_orc_2.date_dim
Output [3]: [d_date_sk#136L, d_year#142, d_moy#144]
Batched: true
Location: InMemoryFileIndex [hdfs://server1:9000/user/hive/warehouse/tpcds_bin_partitioned_decimal_orc_2.db/date_dim]
PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:bigint,d_year:int,d_moy:int>

(11) ColumnarToRow [codegen id : 2]
Input [3]: [d_date_sk#136L, d_year#142, d_moy#144]

(12) Filter [codegen id : 2]
Input [3]: [d_date_sk#136L, d_year#142, d_moy#144]
Condition : ((isnotnull(d_year#142) AND (d_year#142 = 2001)) AND isnotnull(d_date_sk#136L))

(13) BroadcastExchange
Input [3]: [d_date_sk#136L, d_year#142, d_moy#144]
Arguments: HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#392]

(14) BroadcastHashJoin [codegen id : 5]
Left keys [1]: [ws_sold_date_sk#121L]
Right keys [1]: [d_date_sk#136L]
Join condition: None

(15) Project [codegen id : 5]
Output [13]: [ws_sold_time_sk#88L, ws_ship_mode_sk#101L, ws_quantity#105, ws_ext_sales_price#110, ws_net_paid#116, w_warehouse_name#124, w_warehouse_sq_ft#125, w_city#130, w_county#131, w_state#132, w_country#134, d_year#142, d_moy#144]
Input [15]: [ws_sold_time_sk#88L, ws_ship_mode_sk#101L, ws_quantity#105, ws_ext_sales_price#110, ws_net_paid#116, ws_sold_date_sk#121L, w_warehouse_name#124, w_warehouse_sq_ft#125, w_city#130, w_county#131, w_state#132, w_country#134, d_date_sk#136L, d_year#142, d_moy#144]

(16) Scan orc tpcds_bin_partitioned_decimal_orc_2.time_dim
Output [2]: [t_time_sk#164L, t_time#166]
Batched: true
Location: InMemoryFileIndex [hdfs://server1:9000/user/hive/warehouse/tpcds_bin_partitioned_decimal_orc_2.db/time_dim]
PushedFilters: [IsNotNull(t_time), GreaterThanOrEqual(t_time,30838), LessThanOrEqual(t_time,59638), IsNotNull(t_time_sk)]
ReadSchema: struct<t_time_sk:bigint,t_time:int>

(17) ColumnarToRow [codegen id : 3]
Input [2]: [t_time_sk#164L, t_time#166]

(18) Filter [codegen id : 3]
Input [2]: [t_time_sk#164L, t_time#166]
Condition : (((isnotnull(t_time#166) AND (t_time#166 >= 30838)) AND (t_time#166 <= 59638)) AND isnotnull(t_time_sk#164L))

(19) Project [codegen id : 3]
Output [1]: [t_time_sk#164L]
Input [2]: [t_time_sk#164L, t_time#166]

(20) BroadcastExchange
Input [1]: [t_time_sk#164L]
Arguments: HashedRelationBroadcastMode(List(input[0, bigint, true]),false), [id=#401]

(21) BroadcastHashJoin [codegen id : 5]
Left keys [1]: [ws_sold_time_sk#88L]
Right keys [1]: [t_time_sk#164L]
Join condition: None

(22) Project [codegen id : 5]
Output [12]: [ws_ship_mode_sk#101L, ws_quantity#105, ws_ext_sales_price#110, ws_net_paid#116, w_warehouse_name#124, w_warehouse_sq_ft#125, w_city#130, w_county#131, w_state#132, w_country#134, d_year#142, d_moy#144]
Input [14]: [ws_sold_time_sk#88L, ws_ship_mode_sk#101L, ws_quantity#105, ws_ext_sales_price#110, ws_net_paid#116, w_warehouse_name#124, w_warehouse_sq_ft#125, w_city#130, w_county#131, w_state#132, w_country#134, d_year#142, d_moy#144, t_time_sk#164L]

(23) Scan orc tpcds_bin_partitioned_decimal_orc_2.ship_mode
Output [2]: [sm_ship_mode_sk#174L, sm_carrier#178]
Batched: true
Location: InMemoryFileIndex [hdfs://server1:9000/user/hive/warehouse/tpcds_bin_partitioned_decimal_orc_2.db/ship_mode]
PushedFilters: [In(sm_carrier, [DHL,BARIAN]), IsNotNull(sm_ship_mode_sk)]
ReadSchema: struct<sm_ship_mode_sk:bigint,sm_carrier:string>

(24) ColumnarToRow [codegen id : 4]
Input [2]: [sm_ship_mode_sk#174L, sm_carrier#178]

(25) Filter [codegen id : 4]
Input [2]: [sm_ship_mode_sk#174L, sm_carrier#178]
Condition : (sm_carrier#178 IN (DHL,BARIAN) AND isnotnull(sm_ship_mode_sk#174L))

(26) Project [codegen id : 4]
Output [1]: [sm_ship_mode_sk#174L]
Input [2]: [sm_ship_mode_sk#174L, sm_carrier#178]

(27) BroadcastExchange
Input [1]: [sm_ship_mode_sk#174L]
Arguments: HashedRelationBroadcastMode(List(input[0, bigint, true]),false), [id=#410]

(28) BroadcastHashJoin [codegen id : 5]
Left keys [1]: [ws_ship_mode_sk#101L]
Right keys [1]: [sm_ship_mode_sk#174L]
Join condition: None

(29) Project [codegen id : 5]
Output [11]: [ws_quantity#105, ws_ext_sales_price#110, ws_net_paid#116, w_warehouse_name#124, w_warehouse_sq_ft#125, w_city#130, w_county#131, w_state#132, w_country#134, d_year#142, d_moy#144]
Input [13]: [ws_ship_mode_sk#101L, ws_quantity#105, ws_ext_sales_price#110, ws_net_paid#116, w_warehouse_name#124, w_warehouse_sq_ft#125, w_city#130, w_county#131, w_state#132, w_country#134, d_year#142, d_moy#144, sm_ship_mode_sk#174L]

(30) HashAggregate [codegen id : 5]
Input [11]: [ws_quantity#105, ws_ext_sales_price#110, ws_net_paid#116, w_warehouse_name#124, w_warehouse_sq_ft#125, w_city#130, w_county#131, w_state#132, w_country#134, d_year#142, d_moy#144]
Keys [7]: [w_warehouse_name#124, w_warehouse_sq_ft#125, w_city#130, w_county#131, w_state#132, w_country#134, d_year#142]
Functions [24]: [partial_sum(CASE WHEN (d_moy#144 = 1) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#144 = 2) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#144 = 3) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#144 = 4) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#144 = 5) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#144 = 6) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#144 = 7) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#144 = 8) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#144 = 9) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#144 = 10) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#144 = 11) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#144 = 12) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#144 = 1) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#144 = 2) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#144 = 3) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#144 = 4) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#144 = 5) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#144 = 6) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#144 = 7) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#144 = 8) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#144 = 9) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#144 = 10) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#144 = 11) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#144 = 12) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)]
Aggregate Attributes [48]: [sum#673, isEmpty#674, sum#675, isEmpty#676, sum#677, isEmpty#678, sum#679, isEmpty#680, sum#681, isEmpty#682, sum#683, isEmpty#684, sum#685, isEmpty#686, sum#687, isEmpty#688, sum#689, isEmpty#690, sum#691, isEmpty#692, sum#693, isEmpty#694, sum#695, isEmpty#696, sum#697, isEmpty#698, sum#699, isEmpty#700, sum#701, isEmpty#702, sum#703, isEmpty#704, sum#705, isEmpty#706, sum#707, isEmpty#708, sum#709, isEmpty#710, sum#711, isEmpty#712, sum#713, isEmpty#714, sum#715, isEmpty#716, sum#717, isEmpty#718, sum#719, isEmpty#720]
Results [55]: [w_warehouse_name#124, w_warehouse_sq_ft#125, w_city#130, w_county#131, w_state#132, w_country#134, d_year#142, sum#721, isEmpty#722, sum#723, isEmpty#724, sum#725, isEmpty#726, sum#727, isEmpty#728, sum#729, isEmpty#730, sum#731, isEmpty#732, sum#733, isEmpty#734, sum#735, isEmpty#736, sum#737, isEmpty#738, sum#739, isEmpty#740, sum#741, isEmpty#742, sum#743, isEmpty#744, sum#745, isEmpty#746, sum#747, isEmpty#748, sum#749, isEmpty#750, sum#751, isEmpty#752, sum#753, isEmpty#754, sum#755, isEmpty#756, sum#757, isEmpty#758, sum#759, isEmpty#760, sum#761, isEmpty#762, sum#763, isEmpty#764, sum#765, isEmpty#766, sum#767, isEmpty#768]

(31) Exchange
Input [55]: [w_warehouse_name#124, w_warehouse_sq_ft#125, w_city#130, w_county#131, w_state#132, w_country#134, d_year#142, sum#721, isEmpty#722, sum#723, isEmpty#724, sum#725, isEmpty#726, sum#727, isEmpty#728, sum#729, isEmpty#730, sum#731, isEmpty#732, sum#733, isEmpty#734, sum#735, isEmpty#736, sum#737, isEmpty#738, sum#739, isEmpty#740, sum#741, isEmpty#742, sum#743, isEmpty#744, sum#745, isEmpty#746, sum#747, isEmpty#748, sum#749, isEmpty#750, sum#751, isEmpty#752, sum#753, isEmpty#754, sum#755, isEmpty#756, sum#757, isEmpty#758, sum#759, isEmpty#760, sum#761, isEmpty#762, sum#763, isEmpty#764, sum#765, isEmpty#766, sum#767, isEmpty#768]
Arguments: hashpartitioning(w_warehouse_name#124, w_warehouse_sq_ft#125, w_city#130, w_county#131, w_state#132, w_country#134, d_year#142, 200), ENSURE_REQUIREMENTS, [id=#654]

(32) HashAggregate [codegen id : 6]
Input [55]: [w_warehouse_name#124, w_warehouse_sq_ft#125, w_city#130, w_county#131, w_state#132, w_country#134, d_year#142, sum#721, isEmpty#722, sum#723, isEmpty#724, sum#725, isEmpty#726, sum#727, isEmpty#728, sum#729, isEmpty#730, sum#731, isEmpty#732, sum#733, isEmpty#734, sum#735, isEmpty#736, sum#737, isEmpty#738, sum#739, isEmpty#740, sum#741, isEmpty#742, sum#743, isEmpty#744, sum#745, isEmpty#746, sum#747, isEmpty#748, sum#749, isEmpty#750, sum#751, isEmpty#752, sum#753, isEmpty#754, sum#755, isEmpty#756, sum#757, isEmpty#758, sum#759, isEmpty#760, sum#761, isEmpty#762, sum#763, isEmpty#764, sum#765, isEmpty#766, sum#767, isEmpty#768]
Keys [7]: [w_warehouse_name#124, w_warehouse_sq_ft#125, w_city#130, w_county#131, w_state#132, w_country#134, d_year#142]
Functions [24]: [sum(CASE WHEN (d_moy#144 = 1) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#144 = 2) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#144 = 3) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#144 = 4) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#144 = 5) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#144 = 6) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#144 = 7) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#144 = 8) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#144 = 9) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#144 = 10) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#144 = 11) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#144 = 12) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#144 = 1) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#144 = 2) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#144 = 3) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#144 = 4) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#144 = 5) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#144 = 6) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#144 = 7) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#144 = 8) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#144 = 9) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#144 = 10) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#144 = 11) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#144 = 12) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)]
Aggregate Attributes [24]: [sum(CASE WHEN (d_moy#144 = 1) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#272, sum(CASE WHEN (d_moy#144 = 2) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#273, sum(CASE WHEN (d_moy#144 = 3) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#274, sum(CASE WHEN (d_moy#144 = 4) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#275, sum(CASE WHEN (d_moy#144 = 5) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#276, sum(CASE WHEN (d_moy#144 = 6) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#277, sum(CASE WHEN (d_moy#144 = 7) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#278, sum(CASE WHEN (d_moy#144 = 8) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#279, sum(CASE WHEN (d_moy#144 = 9) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#280, sum(CASE WHEN (d_moy#144 = 10) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#281, sum(CASE WHEN (d_moy#144 = 11) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#282, sum(CASE WHEN (d_moy#144 = 12) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#283, sum(CASE WHEN (d_moy#144 = 1) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#284, sum(CASE WHEN (d_moy#144 = 2) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#285, sum(CASE WHEN (d_moy#144 = 3) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#286, sum(CASE WHEN (d_moy#144 = 4) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#287, sum(CASE WHEN (d_moy#144 = 5) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#288, sum(CASE WHEN (d_moy#144 = 6) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#289, sum(CASE WHEN (d_moy#144 = 7) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#290, sum(CASE WHEN (d_moy#144 = 8) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#291, sum(CASE WHEN (d_moy#144 = 9) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#292, sum(CASE WHEN (d_moy#144 = 10) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#293, sum(CASE WHEN (d_moy#144 = 11) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#294, sum(CASE WHEN (d_moy#144 = 12) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#295]
Results [32]: [w_warehouse_name#124, w_warehouse_sq_ft#125, w_city#130, w_county#131, w_state#132, w_country#134, DHL,BARIAN AS ship_carriers#0, d_year#142 AS year#1, sum(CASE WHEN (d_moy#144 = 1) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#272 AS jan_sales#2, sum(CASE WHEN (d_moy#144 = 2) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#273 AS feb_sales#3, sum(CASE WHEN (d_moy#144 = 3) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#274 AS mar_sales#4, sum(CASE WHEN (d_moy#144 = 4) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#275 AS apr_sales#5, sum(CASE WHEN (d_moy#144 = 5) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#276 AS may_sales#6, sum(CASE WHEN (d_moy#144 = 6) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#277 AS jun_sales#7, sum(CASE WHEN (d_moy#144 = 7) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#278 AS jul_sales#8, sum(CASE WHEN (d_moy#144 = 8) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#279 AS aug_sales#9, sum(CASE WHEN (d_moy#144 = 9) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#280 AS sep_sales#10, sum(CASE WHEN (d_moy#144 = 10) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#281 AS oct_sales#11, sum(CASE WHEN (d_moy#144 = 11) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#282 AS nov_sales#12, sum(CASE WHEN (d_moy#144 = 12) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#283 AS dec_sales#13, sum(CASE WHEN (d_moy#144 = 1) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#284 AS jan_net#14, sum(CASE WHEN (d_moy#144 = 2) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#285 AS feb_net#15, sum(CASE WHEN (d_moy#144 = 3) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#286 AS mar_net#16, sum(CASE WHEN (d_moy#144 = 4) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#287 AS apr_net#17, sum(CASE WHEN (d_moy#144 = 5) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#288 AS may_net#18, sum(CASE WHEN (d_moy#144 = 6) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#289 AS jun_net#19, sum(CASE WHEN (d_moy#144 = 7) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#290 AS jul_net#20, sum(CASE WHEN (d_moy#144 = 8) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#291 AS aug_net#21, sum(CASE WHEN (d_moy#144 = 9) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#292 AS sep_net#22, sum(CASE WHEN (d_moy#144 = 10) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#293 AS oct_net#23, sum(CASE WHEN (d_moy#144 = 11) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#294 AS nov_net#24, sum(CASE WHEN (d_moy#144 = 12) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#295 AS dec_net#25]

(33) Scan orc tpcds_bin_partitioned_decimal_orc_2.catalog_sales
Output [7]: [cs_sold_time_sk#180L, cs_ship_mode_sk#192L, cs_warehouse_sk#193L, cs_quantity#197, cs_sales_price#200, cs_net_paid_inc_tax#209, cs_sold_date_sk#213L]
Batched: true
Location: InMemoryFileIndex [hdfs://server1:9000/user/hive/warehouse/tpcds_bin_partitioned_decimal_orc_2.db/catalog_sales/cs_sold_date_sk=2450815, ... 1838 entries]
PartitionFilters: [isnotnull(cs_sold_date_sk#213L), dynamicpruningexpression(cs_sold_date_sk#213L IN dynamicpruning#527)]
PushedFilters: [IsNotNull(cs_warehouse_sk), IsNotNull(cs_sold_time_sk), IsNotNull(cs_ship_mode_sk)]
ReadSchema: struct<cs_sold_time_sk:bigint,cs_ship_mode_sk:bigint,cs_warehouse_sk:bigint,cs_quantity:int,cs_sales_price:decimal(7,2),cs_net_paid_inc_tax:decimal(7,2)>

(34) ColumnarToRow [codegen id : 11]
Input [7]: [cs_sold_time_sk#180L, cs_ship_mode_sk#192L, cs_warehouse_sk#193L, cs_quantity#197, cs_sales_price#200, cs_net_paid_inc_tax#209, cs_sold_date_sk#213L]

(35) Filter [codegen id : 11]
Input [7]: [cs_sold_time_sk#180L, cs_ship_mode_sk#192L, cs_warehouse_sk#193L, cs_quantity#197, cs_sales_price#200, cs_net_paid_inc_tax#209, cs_sold_date_sk#213L]
Condition : ((isnotnull(cs_warehouse_sk#193L) AND isnotnull(cs_sold_time_sk#180L)) AND isnotnull(cs_ship_mode_sk#192L))

(36) ReusedExchange [Reuses operator id: 7]
Output [7]: [w_warehouse_sk#214L, w_warehouse_name#216, w_warehouse_sq_ft#217, w_city#222, w_county#223, w_state#224, w_country#226]

(37) BroadcastHashJoin [codegen id : 11]
Left keys [1]: [cs_warehouse_sk#193L]
Right keys [1]: [w_warehouse_sk#214L]
Join condition: None

(38) Project [codegen id : 11]
Output [12]: [cs_sold_time_sk#180L, cs_ship_mode_sk#192L, cs_quantity#197, cs_sales_price#200, cs_net_paid_inc_tax#209, cs_sold_date_sk#213L, w_warehouse_name#216, w_warehouse_sq_ft#217, w_city#222, w_county#223, w_state#224, w_country#226]
Input [14]: [cs_sold_time_sk#180L, cs_ship_mode_sk#192L, cs_warehouse_sk#193L, cs_quantity#197, cs_sales_price#200, cs_net_paid_inc_tax#209, cs_sold_date_sk#213L, w_warehouse_sk#214L, w_warehouse_name#216, w_warehouse_sq_ft#217, w_city#222, w_county#223, w_state#224, w_country#226]

(39) ReusedExchange [Reuses operator id: 13]
Output [3]: [d_date_sk#228L, d_year#234, d_moy#236]

(40) BroadcastHashJoin [codegen id : 11]
Left keys [1]: [cs_sold_date_sk#213L]
Right keys [1]: [d_date_sk#228L]
Join condition: None

(41) Project [codegen id : 11]
Output [13]: [cs_sold_time_sk#180L, cs_ship_mode_sk#192L, cs_quantity#197, cs_sales_price#200, cs_net_paid_inc_tax#209, w_warehouse_name#216, w_warehouse_sq_ft#217, w_city#222, w_county#223, w_state#224, w_country#226, d_year#234, d_moy#236]
Input [15]: [cs_sold_time_sk#180L, cs_ship_mode_sk#192L, cs_quantity#197, cs_sales_price#200, cs_net_paid_inc_tax#209, cs_sold_date_sk#213L, w_warehouse_name#216, w_warehouse_sq_ft#217, w_city#222, w_county#223, w_state#224, w_country#226, d_date_sk#228L, d_year#234, d_moy#236]

(42) ReusedExchange [Reuses operator id: 20]
Output [1]: [t_time_sk#256L]

(43) BroadcastHashJoin [codegen id : 11]
Left keys [1]: [cs_sold_time_sk#180L]
Right keys [1]: [t_time_sk#256L]
Join condition: None

(44) Project [codegen id : 11]
Output [12]: [cs_ship_mode_sk#192L, cs_quantity#197, cs_sales_price#200, cs_net_paid_inc_tax#209, w_warehouse_name#216, w_warehouse_sq_ft#217, w_city#222, w_county#223, w_state#224, w_country#226, d_year#234, d_moy#236]
Input [14]: [cs_sold_time_sk#180L, cs_ship_mode_sk#192L, cs_quantity#197, cs_sales_price#200, cs_net_paid_inc_tax#209, w_warehouse_name#216, w_warehouse_sq_ft#217, w_city#222, w_county#223, w_state#224, w_country#226, d_year#234, d_moy#236, t_time_sk#256L]

(45) ReusedExchange [Reuses operator id: 27]
Output [1]: [sm_ship_mode_sk#266L]

(46) BroadcastHashJoin [codegen id : 11]
Left keys [1]: [cs_ship_mode_sk#192L]
Right keys [1]: [sm_ship_mode_sk#266L]
Join condition: None

(47) Project [codegen id : 11]
Output [11]: [cs_quantity#197, cs_sales_price#200, cs_net_paid_inc_tax#209, w_warehouse_name#216, w_warehouse_sq_ft#217, w_city#222, w_county#223, w_state#224, w_country#226, d_year#234, d_moy#236]
Input [13]: [cs_ship_mode_sk#192L, cs_quantity#197, cs_sales_price#200, cs_net_paid_inc_tax#209, w_warehouse_name#216, w_warehouse_sq_ft#217, w_city#222, w_county#223, w_state#224, w_country#226, d_year#234, d_moy#236, sm_ship_mode_sk#266L]

(48) HashAggregate [codegen id : 11]
Input [11]: [cs_quantity#197, cs_sales_price#200, cs_net_paid_inc_tax#209, w_warehouse_name#216, w_warehouse_sq_ft#217, w_city#222, w_county#223, w_state#224, w_country#226, d_year#234, d_moy#236]
Keys [7]: [w_warehouse_name#216, w_warehouse_sq_ft#217, w_city#222, w_county#223, w_state#224, w_country#226, d_year#234]
Functions [24]: [partial_sum(CASE WHEN (d_moy#236 = 1) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#236 = 2) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#236 = 3) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#236 = 4) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#236 = 5) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#236 = 6) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#236 = 7) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#236 = 8) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#236 = 9) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#236 = 10) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#236 = 11) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#236 = 12) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#236 = 1) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#236 = 2) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#236 = 3) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#236 = 4) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#236 = 5) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#236 = 6) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#236 = 7) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#236 = 8) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#236 = 9) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#236 = 10) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#236 = 11) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#236 = 12) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)]
Aggregate Attributes [48]: [sum#769, isEmpty#770, sum#771, isEmpty#772, sum#773, isEmpty#774, sum#775, isEmpty#776, sum#777, isEmpty#778, sum#779, isEmpty#780, sum#781, isEmpty#782, sum#783, isEmpty#784, sum#785, isEmpty#786, sum#787, isEmpty#788, sum#789, isEmpty#790, sum#791, isEmpty#792, sum#793, isEmpty#794, sum#795, isEmpty#796, sum#797, isEmpty#798, sum#799, isEmpty#800, sum#801, isEmpty#802, sum#803, isEmpty#804, sum#805, isEmpty#806, sum#807, isEmpty#808, sum#809, isEmpty#810, sum#811, isEmpty#812, sum#813, isEmpty#814, sum#815, isEmpty#816]
Results [55]: [w_warehouse_name#216, w_warehouse_sq_ft#217, w_city#222, w_county#223, w_state#224, w_country#226, d_year#234, sum#817, isEmpty#818, sum#819, isEmpty#820, sum#821, isEmpty#822, sum#823, isEmpty#824, sum#825, isEmpty#826, sum#827, isEmpty#828, sum#829, isEmpty#830, sum#831, isEmpty#832, sum#833, isEmpty#834, sum#835, isEmpty#836, sum#837, isEmpty#838, sum#839, isEmpty#840, sum#841, isEmpty#842, sum#843, isEmpty#844, sum#845, isEmpty#846, sum#847, isEmpty#848, sum#849, isEmpty#850, sum#851, isEmpty#852, sum#853, isEmpty#854, sum#855, isEmpty#856, sum#857, isEmpty#858, sum#859, isEmpty#860, sum#861, isEmpty#862, sum#863, isEmpty#864]

(49) Exchange
Input [55]: [w_warehouse_name#216, w_warehouse_sq_ft#217, w_city#222, w_county#223, w_state#224, w_country#226, d_year#234, sum#817, isEmpty#818, sum#819, isEmpty#820, sum#821, isEmpty#822, sum#823, isEmpty#824, sum#825, isEmpty#826, sum#827, isEmpty#828, sum#829, isEmpty#830, sum#831, isEmpty#832, sum#833, isEmpty#834, sum#835, isEmpty#836, sum#837, isEmpty#838, sum#839, isEmpty#840, sum#841, isEmpty#842, sum#843, isEmpty#844, sum#845, isEmpty#846, sum#847, isEmpty#848, sum#849, isEmpty#850, sum#851, isEmpty#852, sum#853, isEmpty#854, sum#855, isEmpty#856, sum#857, isEmpty#858, sum#859, isEmpty#860, sum#861, isEmpty#862, sum#863, isEmpty#864]
Arguments: hashpartitioning(w_warehouse_name#216, w_warehouse_sq_ft#217, w_city#222, w_county#223, w_state#224, w_country#226, d_year#234, 200), ENSURE_REQUIREMENTS, [id=#704]

(50) HashAggregate [codegen id : 12]
Input [55]: [w_warehouse_name#216, w_warehouse_sq_ft#217, w_city#222, w_county#223, w_state#224, w_country#226, d_year#234, sum#817, isEmpty#818, sum#819, isEmpty#820, sum#821, isEmpty#822, sum#823, isEmpty#824, sum#825, isEmpty#826, sum#827, isEmpty#828, sum#829, isEmpty#830, sum#831, isEmpty#832, sum#833, isEmpty#834, sum#835, isEmpty#836, sum#837, isEmpty#838, sum#839, isEmpty#840, sum#841, isEmpty#842, sum#843, isEmpty#844, sum#845, isEmpty#846, sum#847, isEmpty#848, sum#849, isEmpty#850, sum#851, isEmpty#852, sum#853, isEmpty#854, sum#855, isEmpty#856, sum#857, isEmpty#858, sum#859, isEmpty#860, sum#861, isEmpty#862, sum#863, isEmpty#864]
Keys [7]: [w_warehouse_name#216, w_warehouse_sq_ft#217, w_city#222, w_county#223, w_state#224, w_country#226, d_year#234]
Functions [24]: [sum(CASE WHEN (d_moy#236 = 1) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#236 = 2) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#236 = 3) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#236 = 4) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#236 = 5) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#236 = 6) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#236 = 7) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#236 = 8) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#236 = 9) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#236 = 10) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#236 = 11) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#236 = 12) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#236 = 1) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#236 = 2) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#236 = 3) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#236 = 4) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#236 = 5) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#236 = 6) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#236 = 7) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#236 = 8) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#236 = 9) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#236 = 10) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#236 = 11) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#236 = 12) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)]
Aggregate Attributes [24]: [sum(CASE WHEN (d_moy#236 = 1) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#296, sum(CASE WHEN (d_moy#236 = 2) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#297, sum(CASE WHEN (d_moy#236 = 3) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#298, sum(CASE WHEN (d_moy#236 = 4) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#299, sum(CASE WHEN (d_moy#236 = 5) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#300, sum(CASE WHEN (d_moy#236 = 6) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#301, sum(CASE WHEN (d_moy#236 = 7) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#302, sum(CASE WHEN (d_moy#236 = 8) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#303, sum(CASE WHEN (d_moy#236 = 9) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#304, sum(CASE WHEN (d_moy#236 = 10) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#305, sum(CASE WHEN (d_moy#236 = 11) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#306, sum(CASE WHEN (d_moy#236 = 12) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#307, sum(CASE WHEN (d_moy#236 = 1) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#308, sum(CASE WHEN (d_moy#236 = 2) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#309, sum(CASE WHEN (d_moy#236 = 3) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#310, sum(CASE WHEN (d_moy#236 = 4) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#311, sum(CASE WHEN (d_moy#236 = 5) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#312, sum(CASE WHEN (d_moy#236 = 6) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#313, sum(CASE WHEN (d_moy#236 = 7) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#314, sum(CASE WHEN (d_moy#236 = 8) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#315, sum(CASE WHEN (d_moy#236 = 9) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#316, sum(CASE WHEN (d_moy#236 = 10) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#317, sum(CASE WHEN (d_moy#236 = 11) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#318, sum(CASE WHEN (d_moy#236 = 12) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#319]
Results [32]: [w_warehouse_name#216, w_warehouse_sq_ft#217, w_city#222, w_county#223, w_state#224, w_country#226, DHL,BARIAN AS ship_carriers#26, d_year#234 AS year#27, sum(CASE WHEN (d_moy#236 = 1) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#296 AS jan_sales#28, sum(CASE WHEN (d_moy#236 = 2) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#297 AS feb_sales#29, sum(CASE WHEN (d_moy#236 = 3) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#298 AS mar_sales#30, sum(CASE WHEN (d_moy#236 = 4) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#299 AS apr_sales#31, sum(CASE WHEN (d_moy#236 = 5) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#300 AS may_sales#32, sum(CASE WHEN (d_moy#236 = 6) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#301 AS jun_sales#33, sum(CASE WHEN (d_moy#236 = 7) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#302 AS jul_sales#34, sum(CASE WHEN (d_moy#236 = 8) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#303 AS aug_sales#35, sum(CASE WHEN (d_moy#236 = 9) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#304 AS sep_sales#36, sum(CASE WHEN (d_moy#236 = 10) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#305 AS oct_sales#37, sum(CASE WHEN (d_moy#236 = 11) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#306 AS nov_sales#38, sum(CASE WHEN (d_moy#236 = 12) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#307 AS dec_sales#39, sum(CASE WHEN (d_moy#236 = 1) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#308 AS jan_net#40, sum(CASE WHEN (d_moy#236 = 2) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#309 AS feb_net#41, sum(CASE WHEN (d_moy#236 = 3) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#310 AS mar_net#42, sum(CASE WHEN (d_moy#236 = 4) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#311 AS apr_net#43, sum(CASE WHEN (d_moy#236 = 5) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#312 AS may_net#44, sum(CASE WHEN (d_moy#236 = 6) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#313 AS jun_net#45, sum(CASE WHEN (d_moy#236 = 7) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#314 AS jul_net#46, sum(CASE WHEN (d_moy#236 = 8) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#315 AS aug_net#47, sum(CASE WHEN (d_moy#236 = 9) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#316 AS sep_net#48, sum(CASE WHEN (d_moy#236 = 10) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#317 AS oct_net#49, sum(CASE WHEN (d_moy#236 = 11) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#318 AS nov_net#50, sum(CASE WHEN (d_moy#236 = 12) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)#319 AS dec_net#51]

(51) Union

(52) HashAggregate [codegen id : 13]
Input [32]: [w_warehouse_name#124, w_warehouse_sq_ft#125, w_city#130, w_county#131, w_state#132, w_country#134, ship_carriers#0, year#1, jan_sales#2, feb_sales#3, mar_sales#4, apr_sales#5, may_sales#6, jun_sales#7, jul_sales#8, aug_sales#9, sep_sales#10, oct_sales#11, nov_sales#12, dec_sales#13, jan_net#14, feb_net#15, mar_net#16, apr_net#17, may_net#18, jun_net#19, jul_net#20, aug_net#21, sep_net#22, oct_net#23, nov_net#24, dec_net#25]
Keys [8]: [w_warehouse_name#124, w_warehouse_sq_ft#125, w_city#130, w_county#131, w_state#132, w_country#134, ship_carriers#0, year#1]
Functions [36]: [partial_sum(jan_sales#2), partial_sum(feb_sales#3), partial_sum(mar_sales#4), partial_sum(apr_sales#5), partial_sum(may_sales#6), partial_sum(jun_sales#7), partial_sum(jul_sales#8), partial_sum(aug_sales#9), partial_sum(sep_sales#10), partial_sum(oct_sales#11), partial_sum(nov_sales#12), partial_sum(dec_sales#13), partial_sum(CheckOverflow((promote_precision(jan_sales#2) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(feb_sales#3) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(mar_sales#4) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(apr_sales#5) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(may_sales#6) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(jun_sales#7) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(jul_sales#8) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(aug_sales#9) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(sep_sales#10) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(oct_sales#11) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(nov_sales#12) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(dec_sales#13) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(jan_net#14), partial_sum(feb_net#15), partial_sum(mar_net#16), partial_sum(apr_net#17), partial_sum(may_net#18), partial_sum(jun_net#19), partial_sum(jul_net#20), partial_sum(aug_net#21), partial_sum(sep_net#22), partial_sum(oct_net#23), partial_sum(nov_net#24), partial_sum(dec_net#25)]
Aggregate Attributes [72]: [sum#529, isEmpty#530, sum#531, isEmpty#532, sum#533, isEmpty#534, sum#535, isEmpty#536, sum#537, isEmpty#538, sum#539, isEmpty#540, sum#541, isEmpty#542, sum#543, isEmpty#544, sum#545, isEmpty#546, sum#547, isEmpty#548, sum#549, isEmpty#550, sum#551, isEmpty#552, sum#553, isEmpty#554, sum#555, isEmpty#556, sum#557, isEmpty#558, sum#559, isEmpty#560, sum#561, isEmpty#562, sum#563, isEmpty#564, sum#565, isEmpty#566, sum#567, isEmpty#568, sum#569, isEmpty#570, sum#571, isEmpty#572, sum#573, isEmpty#574, sum#575, isEmpty#576, sum#577, isEmpty#578, sum#579, isEmpty#580, sum#581, isEmpty#582, sum#583, isEmpty#584, sum#585, isEmpty#586, sum#587, isEmpty#588, sum#589, isEmpty#590, sum#591, isEmpty#592, sum#593, isEmpty#594, sum#595, isEmpty#596, sum#597, isEmpty#598, sum#599, isEmpty#600]
Results [80]: [w_warehouse_name#124, w_warehouse_sq_ft#125, w_city#130, w_county#131, w_state#132, w_country#134, ship_carriers#0, year#1, sum#601, isEmpty#602, sum#603, isEmpty#604, sum#605, isEmpty#606, sum#607, isEmpty#608, sum#609, isEmpty#610, sum#611, isEmpty#612, sum#613, isEmpty#614, sum#615, isEmpty#616, sum#617, isEmpty#618, sum#619, isEmpty#620, sum#621, isEmpty#622, sum#623, isEmpty#624, sum#625, isEmpty#626, sum#627, isEmpty#628, sum#629, isEmpty#630, sum#631, isEmpty#632, sum#633, isEmpty#634, sum#635, isEmpty#636, sum#637, isEmpty#638, sum#639, isEmpty#640, sum#641, isEmpty#642, sum#643, isEmpty#644, sum#645, isEmpty#646, sum#647, isEmpty#648, sum#649, isEmpty#650, sum#651, isEmpty#652, sum#653, isEmpty#654, sum#655, isEmpty#656, sum#657, isEmpty#658, sum#659, isEmpty#660, sum#661, isEmpty#662, sum#663, isEmpty#664, sum#665, isEmpty#666, sum#667, isEmpty#668, sum#669, isEmpty#670, sum#671, isEmpty#672]

(53) Exchange
Input [80]: [w_warehouse_name#124, w_warehouse_sq_ft#125, w_city#130, w_county#131, w_state#132, w_country#134, ship_carriers#0, year#1, sum#601, isEmpty#602, sum#603, isEmpty#604, sum#605, isEmpty#606, sum#607, isEmpty#608, sum#609, isEmpty#610, sum#611, isEmpty#612, sum#613, isEmpty#614, sum#615, isEmpty#616, sum#617, isEmpty#618, sum#619, isEmpty#620, sum#621, isEmpty#622, sum#623, isEmpty#624, sum#625, isEmpty#626, sum#627, isEmpty#628, sum#629, isEmpty#630, sum#631, isEmpty#632, sum#633, isEmpty#634, sum#635, isEmpty#636, sum#637, isEmpty#638, sum#639, isEmpty#640, sum#641, isEmpty#642, sum#643, isEmpty#644, sum#645, isEmpty#646, sum#647, isEmpty#648, sum#649, isEmpty#650, sum#651, isEmpty#652, sum#653, isEmpty#654, sum#655, isEmpty#656, sum#657, isEmpty#658, sum#659, isEmpty#660, sum#661, isEmpty#662, sum#663, isEmpty#664, sum#665, isEmpty#666, sum#667, isEmpty#668, sum#669, isEmpty#670, sum#671, isEmpty#672]
Arguments: hashpartitioning(w_warehouse_name#124, w_warehouse_sq_ft#125, w_city#130, w_county#131, w_state#132, w_country#134, ship_carriers#0, year#1, 200), ENSURE_REQUIREMENTS, [id=#712]

(54) HashAggregate [codegen id : 14]
Input [80]: [w_warehouse_name#124, w_warehouse_sq_ft#125, w_city#130, w_county#131, w_state#132, w_country#134, ship_carriers#0, year#1, sum#601, isEmpty#602, sum#603, isEmpty#604, sum#605, isEmpty#606, sum#607, isEmpty#608, sum#609, isEmpty#610, sum#611, isEmpty#612, sum#613, isEmpty#614, sum#615, isEmpty#616, sum#617, isEmpty#618, sum#619, isEmpty#620, sum#621, isEmpty#622, sum#623, isEmpty#624, sum#625, isEmpty#626, sum#627, isEmpty#628, sum#629, isEmpty#630, sum#631, isEmpty#632, sum#633, isEmpty#634, sum#635, isEmpty#636, sum#637, isEmpty#638, sum#639, isEmpty#640, sum#641, isEmpty#642, sum#643, isEmpty#644, sum#645, isEmpty#646, sum#647, isEmpty#648, sum#649, isEmpty#650, sum#651, isEmpty#652, sum#653, isEmpty#654, sum#655, isEmpty#656, sum#657, isEmpty#658, sum#659, isEmpty#660, sum#661, isEmpty#662, sum#663, isEmpty#664, sum#665, isEmpty#666, sum#667, isEmpty#668, sum#669, isEmpty#670, sum#671, isEmpty#672]
Keys [8]: [w_warehouse_name#124, w_warehouse_sq_ft#125, w_city#130, w_county#131, w_state#132, w_country#134, ship_carriers#0, year#1]
Functions [36]: [sum(jan_sales#2), sum(feb_sales#3), sum(mar_sales#4), sum(apr_sales#5), sum(may_sales#6), sum(jun_sales#7), sum(jul_sales#8), sum(aug_sales#9), sum(sep_sales#10), sum(oct_sales#11), sum(nov_sales#12), sum(dec_sales#13), sum(CheckOverflow((promote_precision(jan_sales#2) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(feb_sales#3) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(mar_sales#4) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(apr_sales#5) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(may_sales#6) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(jun_sales#7) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(jul_sales#8) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(aug_sales#9) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(sep_sales#10) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(oct_sales#11) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(nov_sales#12) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(dec_sales#13) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(jan_net#14), sum(feb_net#15), sum(mar_net#16), sum(apr_net#17), sum(may_net#18), sum(jun_net#19), sum(jul_net#20), sum(aug_net#21), sum(sep_net#22), sum(oct_net#23), sum(nov_net#24), sum(dec_net#25)]
Aggregate Attributes [36]: [sum(jan_sales#2)#320, sum(feb_sales#3)#321, sum(mar_sales#4)#322, sum(apr_sales#5)#323, sum(may_sales#6)#324, sum(jun_sales#7)#325, sum(jul_sales#8)#326, sum(aug_sales#9)#327, sum(sep_sales#10)#328, sum(oct_sales#11)#329, sum(nov_sales#12)#330, sum(dec_sales#13)#331, sum(CheckOverflow((promote_precision(jan_sales#2) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true))#344, sum(CheckOverflow((promote_precision(feb_sales#3) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true))#345, sum(CheckOverflow((promote_precision(mar_sales#4) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true))#346, sum(CheckOverflow((promote_precision(apr_sales#5) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true))#347, sum(CheckOverflow((promote_precision(may_sales#6) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true))#348, sum(CheckOverflow((promote_precision(jun_sales#7) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true))#349, sum(CheckOverflow((promote_precision(jul_sales#8) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true))#350, sum(CheckOverflow((promote_precision(aug_sales#9) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true))#351, sum(CheckOverflow((promote_precision(sep_sales#10) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true))#352, sum(CheckOverflow((promote_precision(oct_sales#11) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true))#353, sum(CheckOverflow((promote_precision(nov_sales#12) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true))#354, sum(CheckOverflow((promote_precision(dec_sales#13) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true))#355, sum(jan_net#14)#332, sum(feb_net#15)#333, sum(mar_net#16)#334, sum(apr_net#17)#335, sum(may_net#18)#336, sum(jun_net#19)#337, sum(jul_net#20)#338, sum(aug_net#21)#339, sum(sep_net#22)#340, sum(oct_net#23)#341, sum(nov_net#24)#342, sum(dec_net#25)#343]
Results [44]: [w_warehouse_name#124, w_warehouse_sq_ft#125, w_city#130, w_county#131, w_state#132, w_country#134, ship_carriers#0, year#1, sum(jan_sales#2)#320 AS jan_sales#52, sum(feb_sales#3)#321 AS feb_sales#53, sum(mar_sales#4)#322 AS mar_sales#54, sum(apr_sales#5)#323 AS apr_sales#55, sum(may_sales#6)#324 AS may_sales#56, sum(jun_sales#7)#325 AS jun_sales#57, sum(jul_sales#8)#326 AS jul_sales#58, sum(aug_sales#9)#327 AS aug_sales#59, sum(sep_sales#10)#328 AS sep_sales#60, sum(oct_sales#11)#329 AS oct_sales#61, sum(nov_sales#12)#330 AS nov_sales#62, sum(dec_sales#13)#331 AS dec_sales#63, sum(CheckOverflow((promote_precision(jan_sales#2) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true))#344 AS jan_sales_per_sq_foot#64, sum(CheckOverflow((promote_precision(feb_sales#3) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true))#345 AS feb_sales_per_sq_foot#65, sum(CheckOverflow((promote_precision(mar_sales#4) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true))#346 AS mar_sales_per_sq_foot#66, sum(CheckOverflow((promote_precision(apr_sales#5) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true))#347 AS apr_sales_per_sq_foot#67, sum(CheckOverflow((promote_precision(may_sales#6) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true))#348 AS may_sales_per_sq_foot#68, sum(CheckOverflow((promote_precision(jun_sales#7) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true))#349 AS jun_sales_per_sq_foot#69, sum(CheckOverflow((promote_precision(jul_sales#8) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true))#350 AS jul_sales_per_sq_foot#70, sum(CheckOverflow((promote_precision(aug_sales#9) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true))#351 AS aug_sales_per_sq_foot#71, sum(CheckOverflow((promote_precision(sep_sales#10) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true))#352 AS sep_sales_per_sq_foot#72, sum(CheckOverflow((promote_precision(oct_sales#11) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true))#353 AS oct_sales_per_sq_foot#73, sum(CheckOverflow((promote_precision(nov_sales#12) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true))#354 AS nov_sales_per_sq_foot#74, sum(CheckOverflow((promote_precision(dec_sales#13) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true))#355 AS dec_sales_per_sq_foot#75, sum(jan_net#14)#332 AS jan_net#76, sum(feb_net#15)#333 AS feb_net#77, sum(mar_net#16)#334 AS mar_net#78, sum(apr_net#17)#335 AS apr_net#79, sum(may_net#18)#336 AS may_net#80, sum(jun_net#19)#337 AS jun_net#81, sum(jul_net#20)#338 AS jul_net#82, sum(aug_net#21)#339 AS aug_net#83, sum(sep_net#22)#340 AS sep_net#84, sum(oct_net#23)#341 AS oct_net#85, sum(nov_net#24)#342 AS nov_net#86, sum(dec_net#25)#343 AS dec_net#87]

(55) TakeOrderedAndProject
Input [44]: [w_warehouse_name#124, w_warehouse_sq_ft#125, w_city#130, w_county#131, w_state#132, w_country#134, ship_carriers#0, year#1, jan_sales#52, feb_sales#53, mar_sales#54, apr_sales#55, may_sales#56, jun_sales#57, jul_sales#58, aug_sales#59, sep_sales#60, oct_sales#61, nov_sales#62, dec_sales#63, jan_sales_per_sq_foot#64, feb_sales_per_sq_foot#65, mar_sales_per_sq_foot#66, apr_sales_per_sq_foot#67, may_sales_per_sq_foot#68, jun_sales_per_sq_foot#69, jul_sales_per_sq_foot#70, aug_sales_per_sq_foot#71, sep_sales_per_sq_foot#72, oct_sales_per_sq_foot#73, nov_sales_per_sq_foot#74, dec_sales_per_sq_foot#75, jan_net#76, feb_net#77, mar_net#78, apr_net#79, may_net#80, jun_net#81, jul_net#82, aug_net#83, sep_net#84, oct_net#85, nov_net#86, dec_net#87]
Arguments: 100, [w_warehouse_name#124 ASC NULLS FIRST], [w_warehouse_name#124, w_warehouse_sq_ft#125, w_city#130, w_county#131, w_state#132, w_country#134, ship_carriers#0, year#1, jan_sales#52, feb_sales#53, mar_sales#54, apr_sales#55, may_sales#56, jun_sales#57, jul_sales#58, aug_sales#59, sep_sales#60, oct_sales#61, nov_sales#62, dec_sales#63, jan_sales_per_sq_foot#64, feb_sales_per_sq_foot#65, mar_sales_per_sq_foot#66, apr_sales_per_sq_foot#67, ... 20 more fields]

===== Subqueries =====

Subquery:1 Hosting operator id = 1 Hosting Expression = ws_sold_date_sk#121L IN dynamicpruning#527
ReusedExchange (56)


(56) ReusedExchange [Reuses operator id: 13]
Output [3]: [d_date_sk#136L, d_year#142, d_moy#144]

Subquery:2 Hosting operator id = 33 Hosting Expression = cs_sold_date_sk#213L IN dynamicpruning#527


