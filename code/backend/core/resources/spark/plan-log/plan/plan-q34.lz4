== Physical Plan ==
* Sort (36)
+- Exchange (35)
   +- * Project (34)
      +- * BroadcastHashJoin Inner BuildRight (33)
         :- * Filter (28)
         :  +- * HashAggregate (27)
         :     +- Exchange (26)
         :        +- * HashAggregate (25)
         :           +- * Project (24)
         :              +- * BroadcastHashJoin Inner BuildRight (23)
         :                 :- * Project (17)
         :                 :  +- * BroadcastHashJoin Inner BuildRight (16)
         :                 :     :- * Project (10)
         :                 :     :  +- * BroadcastHashJoin Inner BuildRight (9)
         :                 :     :     :- * Filter (3)
         :                 :     :     :  +- * ColumnarToRow (2)
         :                 :     :     :     +- Scan orc tpcds_bin_partitioned_decimal_orc_2.store_sales (1)
         :                 :     :     +- BroadcastExchange (8)
         :                 :     :        +- * Project (7)
         :                 :     :           +- * Filter (6)
         :                 :     :              +- * ColumnarToRow (5)
         :                 :     :                 +- Scan orc tpcds_bin_partitioned_decimal_orc_2.date_dim (4)
         :                 :     +- BroadcastExchange (15)
         :                 :        +- * Project (14)
         :                 :           +- * Filter (13)
         :                 :              +- * ColumnarToRow (12)
         :                 :                 +- Scan orc tpcds_bin_partitioned_decimal_orc_2.store (11)
         :                 +- BroadcastExchange (22)
         :                    +- * Project (21)
         :                       +- * Filter (20)
         :                          +- * ColumnarToRow (19)
         :                             +- Scan orc tpcds_bin_partitioned_decimal_orc_2.household_demographics (18)
         +- BroadcastExchange (32)
            +- * Filter (31)
               +- * ColumnarToRow (30)
                  +- Scan orc tpcds_bin_partitioned_decimal_orc_2.customer (29)


(1) Scan orc tpcds_bin_partitioned_decimal_orc_2.store_sales
Output [5]: [ss_customer_sk#4L, ss_hdemo_sk#6L, ss_store_sk#8L, ss_ticket_number#10L, ss_sold_date_sk#24L]
Batched: true
Location: InMemoryFileIndex [hdfs://server1:9000/user/hive/warehouse/tpcds_bin_partitioned_decimal_orc_2.db/store_sales/ss_sold_date_sk=2450816, ... 1822 entries]
PartitionFilters: [isnotnull(ss_sold_date_sk#24L), dynamicpruningexpression(ss_sold_date_sk#24L IN dynamicpruning#214)]
PushedFilters: [IsNotNull(ss_store_sk), IsNotNull(ss_hdemo_sk), IsNotNull(ss_customer_sk)]
ReadSchema: struct<ss_customer_sk:bigint,ss_hdemo_sk:bigint,ss_store_sk:bigint,ss_ticket_number:bigint>

(2) ColumnarToRow [codegen id : 4]
Input [5]: [ss_customer_sk#4L, ss_hdemo_sk#6L, ss_store_sk#8L, ss_ticket_number#10L, ss_sold_date_sk#24L]

(3) Filter [codegen id : 4]
Input [5]: [ss_customer_sk#4L, ss_hdemo_sk#6L, ss_store_sk#8L, ss_ticket_number#10L, ss_sold_date_sk#24L]
Condition : ((isnotnull(ss_store_sk#8L) AND isnotnull(ss_hdemo_sk#6L)) AND isnotnull(ss_customer_sk#4L))

(4) Scan orc tpcds_bin_partitioned_decimal_orc_2.date_dim
Output [3]: [d_date_sk#25L, d_year#31, d_dom#34]
Batched: true
Location: InMemoryFileIndex [hdfs://server1:9000/user/hive/warehouse/tpcds_bin_partitioned_decimal_orc_2.db/date_dim]
PushedFilters: [Or(And(GreaterThanOrEqual(d_dom,1),LessThanOrEqual(d_dom,3)),And(GreaterThanOrEqual(d_dom,25),LessThanOrEqual(d_dom,28))), In(d_year, [1999,2000,2001]), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:bigint,d_year:int,d_dom:int>

(5) ColumnarToRow [codegen id : 1]
Input [3]: [d_date_sk#25L, d_year#31, d_dom#34]

(6) Filter [codegen id : 1]
Input [3]: [d_date_sk#25L, d_year#31, d_dom#34]
Condition : (((((d_dom#34 >= 1) AND (d_dom#34 <= 3)) OR ((d_dom#34 >= 25) AND (d_dom#34 <= 28))) AND d_year#31 IN (1999,2000,2001)) AND isnotnull(d_date_sk#25L))

(7) Project [codegen id : 1]
Output [1]: [d_date_sk#25L]
Input [3]: [d_date_sk#25L, d_year#31, d_dom#34]

(8) BroadcastExchange
Input [1]: [d_date_sk#25L]
Arguments: HashedRelationBroadcastMode(List(input[0, bigint, true]),false), [id=#214]

(9) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [ss_sold_date_sk#24L]
Right keys [1]: [d_date_sk#25L]
Join condition: None

(10) Project [codegen id : 4]
Output [4]: [ss_customer_sk#4L, ss_hdemo_sk#6L, ss_store_sk#8L, ss_ticket_number#10L]
Input [6]: [ss_customer_sk#4L, ss_hdemo_sk#6L, ss_store_sk#8L, ss_ticket_number#10L, ss_sold_date_sk#24L, d_date_sk#25L]

(11) Scan orc tpcds_bin_partitioned_decimal_orc_2.store
Output [2]: [s_store_sk#53L, s_county#76]
Batched: true
Location: InMemoryFileIndex [hdfs://server1:9000/user/hive/warehouse/tpcds_bin_partitioned_decimal_orc_2.db/store]
PushedFilters: [IsNotNull(s_county), EqualTo(s_county,Williamson County), IsNotNull(s_store_sk)]
ReadSchema: struct<s_store_sk:bigint,s_county:string>

(12) ColumnarToRow [codegen id : 2]
Input [2]: [s_store_sk#53L, s_county#76]

(13) Filter [codegen id : 2]
Input [2]: [s_store_sk#53L, s_county#76]
Condition : ((isnotnull(s_county#76) AND (s_county#76 = Williamson County)) AND isnotnull(s_store_sk#53L))

(14) Project [codegen id : 2]
Output [1]: [s_store_sk#53L]
Input [2]: [s_store_sk#53L, s_county#76]

(15) BroadcastExchange
Input [1]: [s_store_sk#53L]
Arguments: HashedRelationBroadcastMode(List(input[0, bigint, true]),false), [id=#223]

(16) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [ss_store_sk#8L]
Right keys [1]: [s_store_sk#53L]
Join condition: None

(17) Project [codegen id : 4]
Output [3]: [ss_customer_sk#4L, ss_hdemo_sk#6L, ss_ticket_number#10L]
Input [5]: [ss_customer_sk#4L, ss_hdemo_sk#6L, ss_store_sk#8L, ss_ticket_number#10L, s_store_sk#53L]

(18) Scan orc tpcds_bin_partitioned_decimal_orc_2.household_demographics
Output [4]: [hd_demo_sk#82L, hd_buy_potential#84, hd_dep_count#85, hd_vehicle_count#86]
Batched: true
Location: InMemoryFileIndex [hdfs://server1:9000/user/hive/warehouse/tpcds_bin_partitioned_decimal_orc_2.db/household_demographics]
PushedFilters: [IsNotNull(hd_vehicle_count), Or(EqualTo(hd_buy_potential,>10000),EqualTo(hd_buy_potential,unknown)), GreaterThan(hd_vehicle_count,0), IsNotNull(hd_demo_sk)]
ReadSchema: struct<hd_demo_sk:bigint,hd_buy_potential:string,hd_dep_count:int,hd_vehicle_count:int>

(19) ColumnarToRow [codegen id : 3]
Input [4]: [hd_demo_sk#82L, hd_buy_potential#84, hd_dep_count#85, hd_vehicle_count#86]

(20) Filter [codegen id : 3]
Input [4]: [hd_demo_sk#82L, hd_buy_potential#84, hd_dep_count#85, hd_vehicle_count#86]
Condition : ((((isnotnull(hd_vehicle_count#86) AND ((hd_buy_potential#84 = >10000) OR (hd_buy_potential#84 = unknown))) AND (hd_vehicle_count#86 > 0)) AND (CASE WHEN (hd_vehicle_count#86 > 0) THEN (cast(hd_dep_count#85 as double) / cast(hd_vehicle_count#86 as double)) ELSE null END > 1.2)) AND isnotnull(hd_demo_sk#82L))

(21) Project [codegen id : 3]
Output [1]: [hd_demo_sk#82L]
Input [4]: [hd_demo_sk#82L, hd_buy_potential#84, hd_dep_count#85, hd_vehicle_count#86]

(22) BroadcastExchange
Input [1]: [hd_demo_sk#82L]
Arguments: HashedRelationBroadcastMode(List(input[0, bigint, true]),false), [id=#232]

(23) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [ss_hdemo_sk#6L]
Right keys [1]: [hd_demo_sk#82L]
Join condition: None

(24) Project [codegen id : 4]
Output [2]: [ss_customer_sk#4L, ss_ticket_number#10L]
Input [4]: [ss_customer_sk#4L, ss_hdemo_sk#6L, ss_ticket_number#10L, hd_demo_sk#82L]

(25) HashAggregate [codegen id : 4]
Input [2]: [ss_customer_sk#4L, ss_ticket_number#10L]
Keys [2]: [ss_ticket_number#10L, ss_customer_sk#4L]
Functions [1]: [partial_count(1)]
Aggregate Attributes [1]: [count#215L]
Results [3]: [ss_ticket_number#10L, ss_customer_sk#4L, count#216L]

(26) Exchange
Input [3]: [ss_ticket_number#10L, ss_customer_sk#4L, count#216L]
Arguments: hashpartitioning(ss_ticket_number#10L, ss_customer_sk#4L, 200), ENSURE_REQUIREMENTS, [id=#285]

(27) HashAggregate [codegen id : 6]
Input [3]: [ss_ticket_number#10L, ss_customer_sk#4L, count#216L]
Keys [2]: [ss_ticket_number#10L, ss_customer_sk#4L]
Functions [1]: [count(1)]
Aggregate Attributes [1]: [count(1)#1L]
Results [3]: [ss_ticket_number#10L, ss_customer_sk#4L, count(1)#1L AS cnt#0L]

(28) Filter [codegen id : 6]
Input [3]: [ss_ticket_number#10L, ss_customer_sk#4L, cnt#0L]
Condition : ((cnt#0L >= 15) AND (cnt#0L <= 20))

(29) Scan orc tpcds_bin_partitioned_decimal_orc_2.customer
Output [5]: [c_customer_sk#87L, c_salutation#94, c_first_name#95, c_last_name#96, c_preferred_cust_flag#97]
Batched: true
Location: InMemoryFileIndex [hdfs://server1:9000/user/hive/warehouse/tpcds_bin_partitioned_decimal_orc_2.db/customer]
PushedFilters: [IsNotNull(c_customer_sk)]
ReadSchema: struct<c_customer_sk:bigint,c_salutation:string,c_first_name:string,c_last_name:string,c_preferred_cust_flag:string>

(30) ColumnarToRow [codegen id : 5]
Input [5]: [c_customer_sk#87L, c_salutation#94, c_first_name#95, c_last_name#96, c_preferred_cust_flag#97]

(31) Filter [codegen id : 5]
Input [5]: [c_customer_sk#87L, c_salutation#94, c_first_name#95, c_last_name#96, c_preferred_cust_flag#97]
Condition : isnotnull(c_customer_sk#87L)

(32) BroadcastExchange
Input [5]: [c_customer_sk#87L, c_salutation#94, c_first_name#95, c_last_name#96, c_preferred_cust_flag#97]
Arguments: HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#246]

(33) BroadcastHashJoin [codegen id : 6]
Left keys [1]: [ss_customer_sk#4L]
Right keys [1]: [c_customer_sk#87L]
Join condition: None

(34) Project [codegen id : 6]
Output [6]: [c_last_name#96, c_first_name#95, c_salutation#94, c_preferred_cust_flag#97, ss_ticket_number#10L, cnt#0L]
Input [8]: [ss_ticket_number#10L, ss_customer_sk#4L, cnt#0L, c_customer_sk#87L, c_salutation#94, c_first_name#95, c_last_name#96, c_preferred_cust_flag#97]

(35) Exchange
Input [6]: [c_last_name#96, c_first_name#95, c_salutation#94, c_preferred_cust_flag#97, ss_ticket_number#10L, cnt#0L]
Arguments: rangepartitioning(c_last_name#96 ASC NULLS FIRST, c_first_name#95 ASC NULLS FIRST, c_salutation#94 ASC NULLS FIRST, c_preferred_cust_flag#97 DESC NULLS LAST, 200), ENSURE_REQUIREMENTS, [id=#292]

(36) Sort [codegen id : 7]
Input [6]: [c_last_name#96, c_first_name#95, c_salutation#94, c_preferred_cust_flag#97, ss_ticket_number#10L, cnt#0L]
Arguments: [c_last_name#96 ASC NULLS FIRST, c_first_name#95 ASC NULLS FIRST, c_salutation#94 ASC NULLS FIRST, c_preferred_cust_flag#97 DESC NULLS LAST], true, 0

===== Subqueries =====

Subquery:1 Hosting operator id = 1 Hosting Expression = ss_sold_date_sk#24L IN dynamicpruning#214
ReusedExchange (37)


(37) ReusedExchange [Reuses operator id: 8]
Output [1]: [d_date_sk#25L]


