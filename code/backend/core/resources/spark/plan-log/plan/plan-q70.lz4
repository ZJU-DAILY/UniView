== Physical Plan ==
TakeOrderedAndProject (50)
+- * Project (49)
   +- Window (48)
      +- * Sort (47)
         +- Exchange (46)
            +- * HashAggregate (45)
               +- Exchange (44)
                  +- * HashAggregate (43)
                     +- * Expand (42)
                        +- * Project (41)
                           +- * BroadcastHashJoin Inner BuildRight (40)
                              :- * Project (10)
                              :  +- * BroadcastHashJoin Inner BuildRight (9)
                              :     :- * Filter (3)
                              :     :  +- * ColumnarToRow (2)
                              :     :     +- Scan orc tpcds_bin_partitioned_decimal_orc_2.store_sales (1)
                              :     +- BroadcastExchange (8)
                              :        +- * Project (7)
                              :           +- * Filter (6)
                              :              +- * ColumnarToRow (5)
                              :                 +- Scan orc tpcds_bin_partitioned_decimal_orc_2.date_dim (4)
                              +- BroadcastExchange (39)
                                 +- SortMergeJoin LeftSemi (38)
                                    :- * Sort (15)
                                    :  +- Exchange (14)
                                    :     +- * Filter (13)
                                    :        +- * ColumnarToRow (12)
                                    :           +- Scan orc tpcds_bin_partitioned_decimal_orc_2.store (11)
                                    +- * Sort (37)
                                       +- Exchange (36)
                                          +- * Project (35)
                                             +- * Filter (34)
                                                +- Window (33)
                                                   +- * Sort (32)
                                                      +- Exchange (31)
                                                         +- * HashAggregate (30)
                                                            +- Exchange (29)
                                                               +- * HashAggregate (28)
                                                                  +- * Project (27)
                                                                     +- * BroadcastHashJoin Inner BuildRight (26)
                                                                        :- * Project (24)
                                                                        :  +- * BroadcastHashJoin Inner BuildRight (23)
                                                                        :     :- * Filter (18)
                                                                        :     :  +- * ColumnarToRow (17)
                                                                        :     :     +- Scan orc tpcds_bin_partitioned_decimal_orc_2.store_sales (16)
                                                                        :     +- BroadcastExchange (22)
                                                                        :        +- * Filter (21)
                                                                        :           +- * ColumnarToRow (20)
                                                                        :              +- Scan orc tpcds_bin_partitioned_decimal_orc_2.store (19)
                                                                        +- ReusedExchange (25)


(1) Scan orc tpcds_bin_partitioned_decimal_orc_2.store_sales
Output [3]: [ss_store_sk#14L, ss_net_profit#29, ss_sold_date_sk#30L]
Batched: true
Location: InMemoryFileIndex [hdfs://server1:9000/user/hive/warehouse/tpcds_bin_partitioned_decimal_orc_2.db/store_sales/ss_sold_date_sk=2450816, ... 1822 entries]
PartitionFilters: [isnotnull(ss_sold_date_sk#30L), dynamicpruningexpression(ss_sold_date_sk#30L IN dynamicpruning#308)]
PushedFilters: [IsNotNull(ss_store_sk)]
ReadSchema: struct<ss_store_sk:bigint,ss_net_profit:decimal(7,2)>

(2) ColumnarToRow [codegen id : 11]
Input [3]: [ss_store_sk#14L, ss_net_profit#29, ss_sold_date_sk#30L]

(3) Filter [codegen id : 11]
Input [3]: [ss_store_sk#14L, ss_net_profit#29, ss_sold_date_sk#30L]
Condition : isnotnull(ss_store_sk#14L)

(4) Scan orc tpcds_bin_partitioned_decimal_orc_2.date_dim
Output [2]: [d_date_sk#31L, d_month_seq#34]
Batched: true
Location: InMemoryFileIndex [hdfs://server1:9000/user/hive/warehouse/tpcds_bin_partitioned_decimal_orc_2.db/date_dim]
PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1200), LessThanOrEqual(d_month_seq,1211), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:bigint,d_month_seq:int>

(5) ColumnarToRow [codegen id : 1]
Input [2]: [d_date_sk#31L, d_month_seq#34]

(6) Filter [codegen id : 1]
Input [2]: [d_date_sk#31L, d_month_seq#34]
Condition : (((isnotnull(d_month_seq#34) AND (d_month_seq#34 >= 1200)) AND (d_month_seq#34 <= 1211)) AND isnotnull(d_date_sk#31L))

(7) Project [codegen id : 1]
Output [1]: [d_date_sk#31L]
Input [2]: [d_date_sk#31L, d_month_seq#34]

(8) BroadcastExchange
Input [1]: [d_date_sk#31L]
Arguments: HashedRelationBroadcastMode(List(input[0, bigint, true]),false), [id=#351]

(9) BroadcastHashJoin [codegen id : 11]
Left keys [1]: [ss_sold_date_sk#30L]
Right keys [1]: [d_date_sk#31L]
Join condition: None

(10) Project [codegen id : 11]
Output [2]: [ss_store_sk#14L, ss_net_profit#29]
Input [4]: [ss_store_sk#14L, ss_net_profit#29, ss_sold_date_sk#30L, d_date_sk#31L]

(11) Scan orc tpcds_bin_partitioned_decimal_orc_2.store
Output [3]: [s_store_sk#59L, s_county#82, s_state#83]
Batched: true
Location: InMemoryFileIndex [hdfs://server1:9000/user/hive/warehouse/tpcds_bin_partitioned_decimal_orc_2.db/store]
PushedFilters: [IsNotNull(s_store_sk)]
ReadSchema: struct<s_store_sk:bigint,s_county:string,s_state:string>

(12) ColumnarToRow [codegen id : 2]
Input [3]: [s_store_sk#59L, s_county#82, s_state#83]

(13) Filter [codegen id : 2]
Input [3]: [s_store_sk#59L, s_county#82, s_state#83]
Condition : isnotnull(s_store_sk#59L)

(14) Exchange
Input [3]: [s_store_sk#59L, s_county#82, s_state#83]
Arguments: hashpartitioning(s_state#83, 200), ENSURE_REQUIREMENTS, [id=#359]

(15) Sort [codegen id : 3]
Input [3]: [s_store_sk#59L, s_county#82, s_state#83]
Arguments: [s_state#83 ASC NULLS FIRST], false, 0

(16) Scan orc tpcds_bin_partitioned_decimal_orc_2.store_sales
Output [3]: [ss_store_sk#96L, ss_net_profit#111, ss_sold_date_sk#112L]
Batched: true
Location: InMemoryFileIndex [hdfs://server1:9000/user/hive/warehouse/tpcds_bin_partitioned_decimal_orc_2.db/store_sales/ss_sold_date_sk=2450816, ... 1822 entries]
PartitionFilters: [isnotnull(ss_sold_date_sk#112L), dynamicpruningexpression(ss_sold_date_sk#112L IN dynamicpruning#308)]
PushedFilters: [IsNotNull(ss_store_sk)]
ReadSchema: struct<ss_store_sk:bigint,ss_net_profit:decimal(7,2)>

(17) ColumnarToRow [codegen id : 6]
Input [3]: [ss_store_sk#96L, ss_net_profit#111, ss_sold_date_sk#112L]

(18) Filter [codegen id : 6]
Input [3]: [ss_store_sk#96L, ss_net_profit#111, ss_sold_date_sk#112L]
Condition : isnotnull(ss_store_sk#96L)

(19) Scan orc tpcds_bin_partitioned_decimal_orc_2.store
Output [2]: [s_store_sk#113L, s_state#137]
Batched: true
Location: InMemoryFileIndex [hdfs://server1:9000/user/hive/warehouse/tpcds_bin_partitioned_decimal_orc_2.db/store]
PushedFilters: [IsNotNull(s_store_sk)]
ReadSchema: struct<s_store_sk:bigint,s_state:string>

(20) ColumnarToRow [codegen id : 4]
Input [2]: [s_store_sk#113L, s_state#137]

(21) Filter [codegen id : 4]
Input [2]: [s_store_sk#113L, s_state#137]
Condition : isnotnull(s_store_sk#113L)

(22) BroadcastExchange
Input [2]: [s_store_sk#113L, s_state#137]
Arguments: HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#370]

(23) BroadcastHashJoin [codegen id : 6]
Left keys [1]: [ss_store_sk#96L]
Right keys [1]: [s_store_sk#113L]
Join condition: None

(24) Project [codegen id : 6]
Output [3]: [ss_net_profit#111, ss_sold_date_sk#112L, s_state#137]
Input [5]: [ss_store_sk#96L, ss_net_profit#111, ss_sold_date_sk#112L, s_store_sk#113L, s_state#137]

(25) ReusedExchange [Reuses operator id: 8]
Output [1]: [d_date_sk#142L]

(26) BroadcastHashJoin [codegen id : 6]
Left keys [1]: [ss_sold_date_sk#112L]
Right keys [1]: [d_date_sk#142L]
Join condition: None

(27) Project [codegen id : 6]
Output [2]: [ss_net_profit#111, s_state#137]
Input [4]: [ss_net_profit#111, ss_sold_date_sk#112L, s_state#137, d_date_sk#142L]

(28) HashAggregate [codegen id : 6]
Input [2]: [ss_net_profit#111, s_state#137]
Keys [1]: [s_state#137]
Functions [1]: [partial_sum(UnscaledValue(ss_net_profit#111))]
Aggregate Attributes [1]: [sum#312L]
Results [2]: [s_state#137, sum#313L]

(29) Exchange
Input [2]: [s_state#137, sum#313L]
Arguments: hashpartitioning(s_state#137, 200), ENSURE_REQUIREMENTS, [id=#635]

(30) HashAggregate [codegen id : 7]
Input [2]: [s_state#137, sum#313L]
Keys [1]: [s_state#137]
Functions [1]: [sum(UnscaledValue(ss_net_profit#111))]
Aggregate Attributes [1]: [sum(UnscaledValue(ss_net_profit#111))#170L]
Results [3]: [s_state#137 AS s_state#0, s_state#137, MakeDecimal(sum(UnscaledValue(ss_net_profit#111))#170L,17,2) AS _w2#178]

(31) Exchange
Input [3]: [s_state#0, s_state#137, _w2#178]
Arguments: hashpartitioning(s_state#137, 200), ENSURE_REQUIREMENTS, [id=#639]

(32) Sort [codegen id : 8]
Input [3]: [s_state#0, s_state#137, _w2#178]
Arguments: [s_state#137 ASC NULLS FIRST, _w2#178 DESC NULLS LAST], false, 0

(33) Window
Input [3]: [s_state#0, s_state#137, _w2#178]
Arguments: [rank(_w2#178) windowspecdefinition(s_state#137, _w2#178 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS ranking#1], [s_state#137], [_w2#178 DESC NULLS LAST]

(34) Filter [codegen id : 9]
Input [4]: [s_state#0, s_state#137, _w2#178, ranking#1]
Condition : (isnotnull(ranking#1) AND (ranking#1 <= 5))

(35) Project [codegen id : 9]
Output [1]: [s_state#0]
Input [4]: [s_state#0, s_state#137, _w2#178, ranking#1]

(36) Exchange
Input [1]: [s_state#0]
Arguments: hashpartitioning(s_state#0, 200), ENSURE_REQUIREMENTS, [id=#648]

(37) Sort [codegen id : 10]
Input [1]: [s_state#0]
Arguments: [s_state#0 ASC NULLS FIRST], false, 0

(38) SortMergeJoin
Left keys [1]: [s_state#83]
Right keys [1]: [s_state#0]
Join condition: None

(39) BroadcastExchange
Input [3]: [s_store_sk#59L, s_county#82, s_state#83]
Arguments: HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#653]

(40) BroadcastHashJoin [codegen id : 11]
Left keys [1]: [ss_store_sk#14L]
Right keys [1]: [s_store_sk#59L]
Join condition: None

(41) Project [codegen id : 11]
Output [3]: [ss_net_profit#29, s_state#83, s_county#82]
Input [5]: [ss_store_sk#14L, ss_net_profit#29, s_store_sk#59L, s_county#82, s_state#83]

(42) Expand [codegen id : 11]
Input [3]: [ss_net_profit#29, s_state#83, s_county#82]
Arguments: [List(ss_net_profit#29, s_state#83, s_county#82, 0), List(ss_net_profit#29, s_state#83, null, 1), List(ss_net_profit#29, null, null, 3)], [ss_net_profit#29, s_state#270, s_county#271, spark_grouping_id#269L]

(43) HashAggregate [codegen id : 11]
Input [4]: [ss_net_profit#29, s_state#270, s_county#271, spark_grouping_id#269L]
Keys [3]: [s_state#270, s_county#271, spark_grouping_id#269L]
Functions [1]: [partial_sum(UnscaledValue(ss_net_profit#29))]
Aggregate Attributes [1]: [sum#310L]
Results [4]: [s_state#270, s_county#271, spark_grouping_id#269L, sum#311L]

(44) Exchange
Input [4]: [s_state#270, s_county#271, spark_grouping_id#269L, sum#311L]
Arguments: hashpartitioning(s_state#270, s_county#271, spark_grouping_id#269L, 200), ENSURE_REQUIREMENTS, [id=#660]

(45) HashAggregate [codegen id : 12]
Input [4]: [s_state#270, s_county#271, spark_grouping_id#269L, sum#311L]
Keys [3]: [s_state#270, s_county#271, spark_grouping_id#269L]
Functions [1]: [sum(UnscaledValue(ss_net_profit#29))]
Aggregate Attributes [1]: [sum(UnscaledValue(ss_net_profit#29))#265L]
Results [7]: [MakeDecimal(sum(UnscaledValue(ss_net_profit#29))#265L,17,2) AS total_sum#3, s_state#270, s_county#271, (cast((shiftright(spark_grouping_id#269L, 1) & 1) as tinyint) + cast((shiftright(spark_grouping_id#269L, 0) & 1) as tinyint)) AS lochierarchy#4, (cast((shiftright(spark_grouping_id#269L, 1) & 1) as tinyint) + cast((shiftright(spark_grouping_id#269L, 0) & 1) as tinyint)) AS _w1#284, CASE WHEN (cast((shiftright(spark_grouping_id#269L, 0) & 1) as tinyint) = 0) THEN s_state#270 END AS _w2#285, MakeDecimal(sum(UnscaledValue(ss_net_profit#29))#265L,17,2) AS _w3#286]

(46) Exchange
Input [7]: [total_sum#3, s_state#270, s_county#271, lochierarchy#4, _w1#284, _w2#285, _w3#286]
Arguments: hashpartitioning(_w1#284, _w2#285, 200), ENSURE_REQUIREMENTS, [id=#664]

(47) Sort [codegen id : 13]
Input [7]: [total_sum#3, s_state#270, s_county#271, lochierarchy#4, _w1#284, _w2#285, _w3#286]
Arguments: [_w1#284 ASC NULLS FIRST, _w2#285 ASC NULLS FIRST, _w3#286 DESC NULLS LAST], false, 0

(48) Window
Input [7]: [total_sum#3, s_state#270, s_county#271, lochierarchy#4, _w1#284, _w2#285, _w3#286]
Arguments: [rank(_w3#286) windowspecdefinition(_w1#284, _w2#285, _w3#286 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rank_within_parent#5], [_w1#284, _w2#285], [_w3#286 DESC NULLS LAST]

(49) Project [codegen id : 14]
Output [5]: [total_sum#3, s_state#270, s_county#271, lochierarchy#4, rank_within_parent#5]
Input [8]: [total_sum#3, s_state#270, s_county#271, lochierarchy#4, _w1#284, _w2#285, _w3#286, rank_within_parent#5]

(50) TakeOrderedAndProject
Input [5]: [total_sum#3, s_state#270, s_county#271, lochierarchy#4, rank_within_parent#5]
Arguments: 100, [lochierarchy#4 DESC NULLS LAST, CASE WHEN (lochierarchy#4 = 0) THEN s_state#270 END ASC NULLS FIRST, rank_within_parent#5 ASC NULLS FIRST], [total_sum#3, s_state#270, s_county#271, lochierarchy#4, rank_within_parent#5]

===== Subqueries =====

Subquery:1 Hosting operator id = 1 Hosting Expression = ss_sold_date_sk#30L IN dynamicpruning#308
ReusedExchange (51)


(51) ReusedExchange [Reuses operator id: 8]
Output [1]: [d_date_sk#31L]

Subquery:2 Hosting operator id = 16 Hosting Expression = ss_sold_date_sk#112L IN dynamicpruning#308


