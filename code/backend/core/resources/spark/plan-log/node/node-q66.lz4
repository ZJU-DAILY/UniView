[PlanMetric]
id:0 name:TakeOrderedAndProject desc:TakeOrderedAndProject(limit=100, orderBy=[w_warehouse_name#124 ASC NULLS FIRST], output=[w_warehouse_name#124,w_warehouse_sq_ft#125,w_city#130,w_county#131,w_state#132,w_country#134,ship_carriers#0,year#1,jan_sales#52,feb_sales#53,mar_sales#54,apr_sales#55,may_sales#56,jun_sales#57,jul_sales#58,aug_sales#59,sep_sales#60,oct_sales#61,nov_sales#62,dec_sales#63,jan_sales_per_sq_foot#64,feb_sales_per_sq_foot#65,mar_sales_per_sq_foot#66,apr_sales_per_sq_foot#67,... 20 more fields])
SQLPlanMetric(shuffle records written,278, sum)
SQLPlanMetric(shuffle write time,279 ns, nsTiming)
SQLPlanMetric(records read,276, sum)
SQLPlanMetric(local bytes read,274, size)
SQLPlanMetric(fetch wait time,275000000 ns, timing)
SQLPlanMetric(remote bytes read,272, size)
SQLPlanMetric(local blocks read,271, sum)
SQLPlanMetric(remote blocks read,270, sum)
SQLPlanMetric(remote bytes read to disk,273, size)
SQLPlanMetric(shuffle bytes written,277, size)



id:2 name:HashAggregate desc:HashAggregate(keys=[w_warehouse_name#124, w_warehouse_sq_ft#125, w_city#130, w_county#131, w_state#132, w_country#134, ship_carriers#0, year#1], functions=[sum(jan_sales#2), sum(feb_sales#3), sum(mar_sales#4), sum(apr_sales#5), sum(may_sales#6), sum(jun_sales#7), sum(jul_sales#8), sum(aug_sales#9), sum(sep_sales#10), sum(oct_sales#11), sum(nov_sales#12), sum(dec_sales#13), sum(CheckOverflow((promote_precision(jan_sales#2) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(feb_sales#3) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(mar_sales#4) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(apr_sales#5) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(may_sales#6) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(jun_sales#7) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(jul_sales#8) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(aug_sales#9) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(sep_sales#10) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(oct_sales#11) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(nov_sales#12) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(dec_sales#13) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), ... 12 more fields])
SQLPlanMetric(spill size,283, size)
SQLPlanMetric(time in aggregation build,284000000 ns, timing)
SQLPlanMetric(peak memory,282, size)
SQLPlanMetric(number of output rows,281, sum)
SQLPlanMetric(avg hash probe bucket list iters,285, average)



id:1 name:WholeStageCodegen (14) desc:WholeStageCodegen (14)
SQLPlanMetric(duration,280000000 ns, timing)



id:3 name:Exchange desc:Exchange hashpartitioning(w_warehouse_name#124, w_warehouse_sq_ft#125, w_city#130, w_county#131, w_state#132, w_country#134, ship_carriers#0, year#1, 200), ENSURE_REQUIREMENTS, [id=#712]
SQLPlanMetric(shuffle records written,268, sum)
SQLPlanMetric(shuffle write time,269 ns, nsTiming)
SQLPlanMetric(records read,266, sum)
SQLPlanMetric(local bytes read,264, size)
SQLPlanMetric(fetch wait time,265000000 ns, timing)
SQLPlanMetric(remote bytes read,262, size)
SQLPlanMetric(local blocks read,261, sum)
SQLPlanMetric(remote blocks read,260, sum)
SQLPlanMetric(data size,259, size)
SQLPlanMetric(remote bytes read to disk,263, size)
SQLPlanMetric(shuffle bytes written,267, size)



id:5 name:HashAggregate desc:HashAggregate(keys=[w_warehouse_name#124, w_warehouse_sq_ft#125, w_city#130, w_county#131, w_state#132, w_country#134, ship_carriers#0, year#1], functions=[partial_sum(jan_sales#2), partial_sum(feb_sales#3), partial_sum(mar_sales#4), partial_sum(apr_sales#5), partial_sum(may_sales#6), partial_sum(jun_sales#7), partial_sum(jul_sales#8), partial_sum(aug_sales#9), partial_sum(sep_sales#10), partial_sum(oct_sales#11), partial_sum(nov_sales#12), partial_sum(dec_sales#13), partial_sum(CheckOverflow((promote_precision(jan_sales#2) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(feb_sales#3) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(mar_sales#4) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(apr_sales#5) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(may_sales#6) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(jun_sales#7) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(jul_sales#8) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(aug_sales#9) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(sep_sales#10) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(oct_sales#11) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(nov_sales#12) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(dec_sales#13) / promote_precision(cast(cast(w_warehouse_sq_ft#125 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), ... 12 more fields])
SQLPlanMetric(spill size,289, size)
SQLPlanMetric(time in aggregation build,290000000 ns, timing)
SQLPlanMetric(peak memory,288, size)
SQLPlanMetric(number of output rows,287, sum)
SQLPlanMetric(avg hash probe bucket list iters,291, average)



id:4 name:WholeStageCodegen (13) desc:WholeStageCodegen (13)
SQLPlanMetric(duration,286000000 ns, timing)



id:6 name:Union desc:Union



id:8 name:HashAggregate desc:HashAggregate(keys=[w_warehouse_name#124, w_warehouse_sq_ft#125, w_city#130, w_county#131, w_state#132, w_country#134, d_year#142], functions=[sum(CASE WHEN (d_moy#144 = 1) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#144 = 2) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#144 = 3) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#144 = 4) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#144 = 5) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#144 = 6) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#144 = 7) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#144 = 8) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#144 = 9) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#144 = 10) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#144 = 11) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#144 = 12) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#144 = 1) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#144 = 2) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#144 = 3) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#144 = 4) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#144 = 5) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#144 = 6) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#144 = 7) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#144 = 8) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#144 = 9) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#144 = 10) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#144 = 11) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#144 = 12) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)])
SQLPlanMetric(spill size,295, size)
SQLPlanMetric(time in aggregation build,296000000 ns, timing)
SQLPlanMetric(peak memory,294, size)
SQLPlanMetric(number of output rows,293, sum)
SQLPlanMetric(avg hash probe bucket list iters,297, average)



id:7 name:WholeStageCodegen (6) desc:WholeStageCodegen (6)
SQLPlanMetric(duration,292000000 ns, timing)



id:9 name:Exchange desc:Exchange hashpartitioning(w_warehouse_name#124, w_warehouse_sq_ft#125, w_city#130, w_county#131, w_state#132, w_country#134, d_year#142, 200), ENSURE_REQUIREMENTS, [id=#654]
SQLPlanMetric(shuffle records written,224, sum)
SQLPlanMetric(shuffle write time,225 ns, nsTiming)
SQLPlanMetric(records read,222, sum)
SQLPlanMetric(local bytes read,220, size)
SQLPlanMetric(fetch wait time,221000000 ns, timing)
SQLPlanMetric(remote bytes read,218, size)
SQLPlanMetric(local blocks read,217, sum)
SQLPlanMetric(remote blocks read,216, sum)
SQLPlanMetric(data size,215, size)
SQLPlanMetric(remote bytes read to disk,219, size)
SQLPlanMetric(shuffle bytes written,223, size)



id:11 name:HashAggregate desc:HashAggregate(keys=[w_warehouse_name#124, w_warehouse_sq_ft#125, w_city#130, w_county#131, w_state#132, w_country#134, d_year#142], functions=[partial_sum(CASE WHEN (d_moy#144 = 1) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#144 = 2) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#144 = 3) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#144 = 4) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#144 = 5) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#144 = 6) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#144 = 7) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#144 = 8) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#144 = 9) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#144 = 10) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#144 = 11) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#144 = 12) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#110 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#144 = 1) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#144 = 2) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#144 = 3) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#144 = 4) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#144 = 5) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#144 = 6) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#144 = 7) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#144 = 8) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#144 = 9) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#144 = 10) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#144 = 11) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#144 = 12) THEN CheckOverflow((promote_precision(cast(ws_net_paid#116 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#105 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)])
SQLPlanMetric(spill size,301, size)
SQLPlanMetric(time in aggregation build,302000000 ns, timing)
SQLPlanMetric(peak memory,300, size)
SQLPlanMetric(number of output rows,299, sum)
SQLPlanMetric(avg hash probe bucket list iters,303, average)



id:12 name:Project desc:Project [ws_quantity#105, ws_ext_sales_price#110, ws_net_paid#116, w_warehouse_name#124, w_warehouse_sq_ft#125, w_city#130, w_county#131, w_state#132, w_country#134, d_year#142, d_moy#144]



id:13 name:BroadcastHashJoin desc:BroadcastHashJoin [ws_ship_mode_sk#101L], [sm_ship_mode_sk#174L], Inner, BuildRight, false
SQLPlanMetric(number of output rows,304, sum)



id:14 name:Project desc:Project [ws_ship_mode_sk#101L, ws_quantity#105, ws_ext_sales_price#110, ws_net_paid#116, w_warehouse_name#124, w_warehouse_sq_ft#125, w_city#130, w_county#131, w_state#132, w_country#134, d_year#142, d_moy#144]



id:15 name:BroadcastHashJoin desc:BroadcastHashJoin [ws_sold_time_sk#88L], [t_time_sk#164L], Inner, BuildRight, false
SQLPlanMetric(number of output rows,305, sum)



id:16 name:Project desc:Project [ws_sold_time_sk#88L, ws_ship_mode_sk#101L, ws_quantity#105, ws_ext_sales_price#110, ws_net_paid#116, w_warehouse_name#124, w_warehouse_sq_ft#125, w_city#130, w_county#131, w_state#132, w_country#134, d_year#142, d_moy#144]



id:17 name:BroadcastHashJoin desc:BroadcastHashJoin [ws_sold_date_sk#121L], [d_date_sk#136L], Inner, BuildRight, false
SQLPlanMetric(number of output rows,306, sum)



id:18 name:Project desc:Project [ws_sold_time_sk#88L, ws_ship_mode_sk#101L, ws_quantity#105, ws_ext_sales_price#110, ws_net_paid#116, ws_sold_date_sk#121L, w_warehouse_name#124, w_warehouse_sq_ft#125, w_city#130, w_county#131, w_state#132, w_country#134]



id:19 name:BroadcastHashJoin desc:BroadcastHashJoin [ws_warehouse_sk#102L], [w_warehouse_sk#122L], Inner, BuildRight, false
SQLPlanMetric(number of output rows,307, sum)



id:20 name:Filter desc:Filter ((isnotnull(ws_warehouse_sk#102L) AND isnotnull(ws_sold_time_sk#88L)) AND isnotnull(ws_ship_mode_sk#101L))
SQLPlanMetric(number of output rows,308, sum)



id:21 name:ColumnarToRow desc:ColumnarToRow
SQLPlanMetric(number of output rows,309, sum)
SQLPlanMetric(number of input batches,310, sum)



id:10 name:WholeStageCodegen (5) desc:WholeStageCodegen (5)
SQLPlanMetric(duration,298000000 ns, timing)



id:22 name:Scan orc tpcds_bin_partitioned_decimal_orc_2.web_sales desc:FileScan orc tpcds_bin_partitioned_decimal_orc_2.web_sales[ws_sold_time_sk#88L,ws_ship_mode_sk#101L,ws_warehouse_sk#102L,ws_quantity#105,ws_ext_sales_price#110,ws_net_paid#116,ws_sold_date_sk#121L] Batched: true, DataFilters: [isnotnull(ws_warehouse_sk#102L), isnotnull(ws_sold_time_sk#88L), isnotnull(ws_ship_mode_sk#101L)], Format: ORC, Location: InMemoryFileIndex[hdfs://server1:9000/user/hive/warehouse/tpcds_bin_partitioned_decimal_orc_2.db/..., PartitionFilters: [isnotnull(ws_sold_date_sk#121L), dynamicpruningexpression(ws_sold_date_sk#121L IN dynamicpruning..., PushedFilters: [IsNotNull(ws_warehouse_sk), IsNotNull(ws_sold_time_sk), IsNotNull(ws_ship_mode_sk)], ReadSchema: struct<ws_sold_time_sk:bigint,ws_ship_mode_sk:bigint,ws_warehouse_sk:bigint,ws_quantity:int,ws_ex...
SQLPlanMetric(number of files read,312, sum)
SQLPlanMetric(scan time,315000000 ns, timing)
SQLPlanMetric(dynamic partition pruning time,317000000 ns, timing)
SQLPlanMetric(metadata time,313000000 ns, timing)
SQLPlanMetric(size of files read,314, size)
SQLPlanMetric(number of output rows,311, sum)
SQLPlanMetric(static number of files read,318, sum)
SQLPlanMetric(static size of files read,319, size)
SQLPlanMetric(number of partitions read,316, sum)



id:23 name:SubqueryBroadcast desc:SubqueryBroadcast dynamicpruning#527, 0, [d_date_sk#136L], [id=#639]
SQLPlanMetric(data size (bytes),320, sum)
SQLPlanMetric(time to collect (ms),321, sum)



id:24 name:ReusedExchange desc:ReusedExchange [d_date_sk#136L, d_year#142, d_moy#144], BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#392]



id:25 name:BroadcastExchange desc:BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#392]
SQLPlanMetric(time to broadcast,326000000 ns, timing)
SQLPlanMetric(time to build,325000000 ns, timing)
SQLPlanMetric(time to collect,324000000 ns, timing)
SQLPlanMetric(number of output rows,323, sum)
SQLPlanMetric(data size,322, size)



id:27 name:Filter desc:Filter ((isnotnull(d_year#142) AND (d_year#142 = 2001)) AND isnotnull(d_date_sk#136L))
SQLPlanMetric(number of output rows,328, sum)



id:28 name:ColumnarToRow desc:ColumnarToRow
SQLPlanMetric(number of output rows,329, sum)
SQLPlanMetric(number of input batches,330, sum)



id:26 name:WholeStageCodegen (2) desc:WholeStageCodegen (2)
SQLPlanMetric(duration,327000000 ns, timing)



id:29 name:Scan orc tpcds_bin_partitioned_decimal_orc_2.date_dim desc:FileScan orc tpcds_bin_partitioned_decimal_orc_2.date_dim[d_date_sk#136L,d_year#142,d_moy#144] Batched: true, DataFilters: [isnotnull(d_year#142), (d_year#142 = 2001), isnotnull(d_date_sk#136L)], Format: ORC, Location: InMemoryFileIndex[hdfs://server1:9000/user/hive/warehouse/tpcds_bin_partitioned_decimal_orc_2.db/..., PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:bigint,d_year:int,d_moy:int>
SQLPlanMetric(number of files read,332, sum)
SQLPlanMetric(scan time,335000000 ns, timing)
SQLPlanMetric(metadata time,333000000 ns, timing)
SQLPlanMetric(size of files read,334, size)
SQLPlanMetric(number of output rows,331, sum)



id:30 name:BroadcastExchange desc:BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#384]
SQLPlanMetric(time to broadcast,340000000 ns, timing)
SQLPlanMetric(time to build,339000000 ns, timing)
SQLPlanMetric(time to collect,338000000 ns, timing)
SQLPlanMetric(number of output rows,337, sum)
SQLPlanMetric(data size,336, size)



id:32 name:Filter desc:Filter isnotnull(w_warehouse_sk#122L)
SQLPlanMetric(number of output rows,342, sum)



id:33 name:ColumnarToRow desc:ColumnarToRow
SQLPlanMetric(number of output rows,343, sum)
SQLPlanMetric(number of input batches,344, sum)



id:31 name:WholeStageCodegen (1) desc:WholeStageCodegen (1)
SQLPlanMetric(duration,341000000 ns, timing)



id:34 name:Scan orc tpcds_bin_partitioned_decimal_orc_2.warehouse desc:FileScan orc tpcds_bin_partitioned_decimal_orc_2.warehouse[w_warehouse_sk#122L,w_warehouse_name#124,w_warehouse_sq_ft#125,w_city#130,w_county#131,w_state#132,w_country#134] Batched: true, DataFilters: [isnotnull(w_warehouse_sk#122L)], Format: ORC, Location: InMemoryFileIndex[hdfs://server1:9000/user/hive/warehouse/tpcds_bin_partitioned_decimal_orc_2.db/..., PartitionFilters: [], PushedFilters: [IsNotNull(w_warehouse_sk)], ReadSchema: struct<w_warehouse_sk:bigint,w_warehouse_name:string,w_warehouse_sq_ft:int,w_city:string,w_county...
SQLPlanMetric(number of files read,346, sum)
SQLPlanMetric(scan time,349000000 ns, timing)
SQLPlanMetric(metadata time,347000000 ns, timing)
SQLPlanMetric(size of files read,348, size)
SQLPlanMetric(number of output rows,345, sum)



id:35 name:BroadcastExchange desc:BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#392]
SQLPlanMetric(time to broadcast,326000000 ns, timing)
SQLPlanMetric(time to build,325000000 ns, timing)
SQLPlanMetric(time to collect,324000000 ns, timing)
SQLPlanMetric(number of output rows,323, sum)
SQLPlanMetric(data size,322, size)



id:37 name:Filter desc:Filter ((isnotnull(d_year#142) AND (d_year#142 = 2001)) AND isnotnull(d_date_sk#136L))
SQLPlanMetric(number of output rows,328, sum)



id:38 name:ColumnarToRow desc:ColumnarToRow
SQLPlanMetric(number of output rows,329, sum)
SQLPlanMetric(number of input batches,330, sum)



id:36 name:WholeStageCodegen (2) desc:WholeStageCodegen (2)
SQLPlanMetric(duration,327000000 ns, timing)



id:39 name:Scan orc tpcds_bin_partitioned_decimal_orc_2.date_dim desc:FileScan orc tpcds_bin_partitioned_decimal_orc_2.date_dim[d_date_sk#136L,d_year#142,d_moy#144] Batched: true, DataFilters: [isnotnull(d_year#142), (d_year#142 = 2001), isnotnull(d_date_sk#136L)], Format: ORC, Location: InMemoryFileIndex[hdfs://server1:9000/user/hive/warehouse/tpcds_bin_partitioned_decimal_orc_2.db/..., PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:bigint,d_year:int,d_moy:int>
SQLPlanMetric(number of files read,332, sum)
SQLPlanMetric(scan time,335000000 ns, timing)
SQLPlanMetric(metadata time,333000000 ns, timing)
SQLPlanMetric(size of files read,334, size)
SQLPlanMetric(number of output rows,331, sum)



id:40 name:BroadcastExchange desc:BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, true]),false), [id=#401]
SQLPlanMetric(time to broadcast,354000000 ns, timing)
SQLPlanMetric(time to build,353000000 ns, timing)
SQLPlanMetric(time to collect,352000000 ns, timing)
SQLPlanMetric(number of output rows,351, sum)
SQLPlanMetric(data size,350, size)



id:42 name:Project desc:Project [t_time_sk#164L]



id:43 name:Filter desc:Filter (((isnotnull(t_time#166) AND (t_time#166 >= 30838)) AND (t_time#166 <= 59638)) AND isnotnull(t_time_sk#164L))
SQLPlanMetric(number of output rows,356, sum)



id:44 name:ColumnarToRow desc:ColumnarToRow
SQLPlanMetric(number of output rows,357, sum)
SQLPlanMetric(number of input batches,358, sum)



id:41 name:WholeStageCodegen (3) desc:WholeStageCodegen (3)
SQLPlanMetric(duration,355000000 ns, timing)



id:45 name:Scan orc tpcds_bin_partitioned_decimal_orc_2.time_dim desc:FileScan orc tpcds_bin_partitioned_decimal_orc_2.time_dim[t_time_sk#164L,t_time#166] Batched: true, DataFilters: [isnotnull(t_time#166), (t_time#166 >= 30838), (t_time#166 <= 59638), isnotnull(t_time_sk#164L)], Format: ORC, Location: InMemoryFileIndex[hdfs://server1:9000/user/hive/warehouse/tpcds_bin_partitioned_decimal_orc_2.db/..., PartitionFilters: [], PushedFilters: [IsNotNull(t_time), GreaterThanOrEqual(t_time,30838), LessThanOrEqual(t_time,59638), IsNotNull(t_..., ReadSchema: struct<t_time_sk:bigint,t_time:int>
SQLPlanMetric(number of files read,360, sum)
SQLPlanMetric(scan time,363000000 ns, timing)
SQLPlanMetric(metadata time,361000000 ns, timing)
SQLPlanMetric(size of files read,362, size)
SQLPlanMetric(number of output rows,359, sum)



id:46 name:BroadcastExchange desc:BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, true]),false), [id=#410]
SQLPlanMetric(time to broadcast,368000000 ns, timing)
SQLPlanMetric(time to build,367000000 ns, timing)
SQLPlanMetric(time to collect,366000000 ns, timing)
SQLPlanMetric(number of output rows,365, sum)
SQLPlanMetric(data size,364, size)



id:48 name:Project desc:Project [sm_ship_mode_sk#174L]



id:49 name:Filter desc:Filter (sm_carrier#178 IN (DHL,BARIAN) AND isnotnull(sm_ship_mode_sk#174L))
SQLPlanMetric(number of output rows,370, sum)



id:50 name:ColumnarToRow desc:ColumnarToRow
SQLPlanMetric(number of output rows,371, sum)
SQLPlanMetric(number of input batches,372, sum)



id:47 name:WholeStageCodegen (4) desc:WholeStageCodegen (4)
SQLPlanMetric(duration,369000000 ns, timing)



id:51 name:Scan orc tpcds_bin_partitioned_decimal_orc_2.ship_mode desc:FileScan orc tpcds_bin_partitioned_decimal_orc_2.ship_mode[sm_ship_mode_sk#174L,sm_carrier#178] Batched: true, DataFilters: [sm_carrier#178 IN (DHL,BARIAN), isnotnull(sm_ship_mode_sk#174L)], Format: ORC, Location: InMemoryFileIndex[hdfs://server1:9000/user/hive/warehouse/tpcds_bin_partitioned_decimal_orc_2.db/..., PartitionFilters: [], PushedFilters: [In(sm_carrier, [DHL,BARIAN]), IsNotNull(sm_ship_mode_sk)], ReadSchema: struct<sm_ship_mode_sk:bigint,sm_carrier:string>
SQLPlanMetric(number of files read,374, sum)
SQLPlanMetric(scan time,377000000 ns, timing)
SQLPlanMetric(metadata time,375000000 ns, timing)
SQLPlanMetric(size of files read,376, size)
SQLPlanMetric(number of output rows,373, sum)



id:53 name:HashAggregate desc:HashAggregate(keys=[w_warehouse_name#216, w_warehouse_sq_ft#217, w_city#222, w_county#223, w_state#224, w_country#226, d_year#234], functions=[sum(CASE WHEN (d_moy#236 = 1) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#236 = 2) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#236 = 3) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#236 = 4) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#236 = 5) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#236 = 6) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#236 = 7) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#236 = 8) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#236 = 9) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#236 = 10) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#236 = 11) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#236 = 12) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#236 = 1) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#236 = 2) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#236 = 3) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#236 = 4) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#236 = 5) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#236 = 6) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#236 = 7) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#236 = 8) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#236 = 9) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#236 = 10) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#236 = 11) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#236 = 12) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)])
SQLPlanMetric(spill size,381, size)
SQLPlanMetric(time in aggregation build,382000000 ns, timing)
SQLPlanMetric(peak memory,380, size)
SQLPlanMetric(number of output rows,379, sum)
SQLPlanMetric(avg hash probe bucket list iters,383, average)



id:52 name:WholeStageCodegen (12) desc:WholeStageCodegen (12)
SQLPlanMetric(duration,378000000 ns, timing)



id:54 name:Exchange desc:Exchange hashpartitioning(w_warehouse_name#216, w_warehouse_sq_ft#217, w_city#222, w_county#223, w_state#224, w_country#226, d_year#234, 200), ENSURE_REQUIREMENTS, [id=#704]
SQLPlanMetric(shuffle records written,257, sum)
SQLPlanMetric(shuffle write time,258 ns, nsTiming)
SQLPlanMetric(records read,255, sum)
SQLPlanMetric(local bytes read,253, size)
SQLPlanMetric(fetch wait time,254000000 ns, timing)
SQLPlanMetric(remote bytes read,251, size)
SQLPlanMetric(local blocks read,250, sum)
SQLPlanMetric(remote blocks read,249, sum)
SQLPlanMetric(data size,248, size)
SQLPlanMetric(remote bytes read to disk,252, size)
SQLPlanMetric(shuffle bytes written,256, size)



id:56 name:HashAggregate desc:HashAggregate(keys=[w_warehouse_name#216, w_warehouse_sq_ft#217, w_city#222, w_county#223, w_state#224, w_country#226, d_year#234], functions=[partial_sum(CASE WHEN (d_moy#236 = 1) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#236 = 2) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#236 = 3) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#236 = 4) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#236 = 5) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#236 = 6) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#236 = 7) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#236 = 8) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#236 = 9) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#236 = 10) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#236 = 11) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#236 = 12) THEN CheckOverflow((promote_precision(cast(cs_sales_price#200 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#236 = 1) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#236 = 2) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#236 = 3) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#236 = 4) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#236 = 5) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#236 = 6) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#236 = 7) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#236 = 8) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#236 = 9) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#236 = 10) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#236 = 11) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#236 = 12) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#209 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#197 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)])
SQLPlanMetric(spill size,387, size)
SQLPlanMetric(time in aggregation build,388000000 ns, timing)
SQLPlanMetric(peak memory,386, size)
SQLPlanMetric(number of output rows,385, sum)
SQLPlanMetric(avg hash probe bucket list iters,389, average)



id:57 name:Project desc:Project [cs_quantity#197, cs_sales_price#200, cs_net_paid_inc_tax#209, w_warehouse_name#216, w_warehouse_sq_ft#217, w_city#222, w_county#223, w_state#224, w_country#226, d_year#234, d_moy#236]



id:58 name:BroadcastHashJoin desc:BroadcastHashJoin [cs_ship_mode_sk#192L], [sm_ship_mode_sk#266L], Inner, BuildRight, false
SQLPlanMetric(number of output rows,390, sum)



id:59 name:Project desc:Project [cs_ship_mode_sk#192L, cs_quantity#197, cs_sales_price#200, cs_net_paid_inc_tax#209, w_warehouse_name#216, w_warehouse_sq_ft#217, w_city#222, w_county#223, w_state#224, w_country#226, d_year#234, d_moy#236]



id:60 name:BroadcastHashJoin desc:BroadcastHashJoin [cs_sold_time_sk#180L], [t_time_sk#256L], Inner, BuildRight, false
SQLPlanMetric(number of output rows,391, sum)



id:61 name:Project desc:Project [cs_sold_time_sk#180L, cs_ship_mode_sk#192L, cs_quantity#197, cs_sales_price#200, cs_net_paid_inc_tax#209, w_warehouse_name#216, w_warehouse_sq_ft#217, w_city#222, w_county#223, w_state#224, w_country#226, d_year#234, d_moy#236]



id:62 name:BroadcastHashJoin desc:BroadcastHashJoin [cs_sold_date_sk#213L], [d_date_sk#228L], Inner, BuildRight, false
SQLPlanMetric(number of output rows,392, sum)



id:63 name:Project desc:Project [cs_sold_time_sk#180L, cs_ship_mode_sk#192L, cs_quantity#197, cs_sales_price#200, cs_net_paid_inc_tax#209, cs_sold_date_sk#213L, w_warehouse_name#216, w_warehouse_sq_ft#217, w_city#222, w_county#223, w_state#224, w_country#226]



id:64 name:BroadcastHashJoin desc:BroadcastHashJoin [cs_warehouse_sk#193L], [w_warehouse_sk#214L], Inner, BuildRight, false
SQLPlanMetric(number of output rows,393, sum)



id:65 name:Filter desc:Filter ((isnotnull(cs_warehouse_sk#193L) AND isnotnull(cs_sold_time_sk#180L)) AND isnotnull(cs_ship_mode_sk#192L))
SQLPlanMetric(number of output rows,394, sum)



id:66 name:ColumnarToRow desc:ColumnarToRow
SQLPlanMetric(number of output rows,395, sum)
SQLPlanMetric(number of input batches,396, sum)



id:55 name:WholeStageCodegen (11) desc:WholeStageCodegen (11)
SQLPlanMetric(duration,384000000 ns, timing)



id:67 name:Scan orc tpcds_bin_partitioned_decimal_orc_2.catalog_sales desc:FileScan orc tpcds_bin_partitioned_decimal_orc_2.catalog_sales[cs_sold_time_sk#180L,cs_ship_mode_sk#192L,cs_warehouse_sk#193L,cs_quantity#197,cs_sales_price#200,cs_net_paid_inc_tax#209,cs_sold_date_sk#213L] Batched: true, DataFilters: [isnotnull(cs_warehouse_sk#193L), isnotnull(cs_sold_time_sk#180L), isnotnull(cs_ship_mode_sk#192L)], Format: ORC, Location: InMemoryFileIndex[hdfs://server1:9000/user/hive/warehouse/tpcds_bin_partitioned_decimal_orc_2.db/..., PartitionFilters: [isnotnull(cs_sold_date_sk#213L), dynamicpruningexpression(cs_sold_date_sk#213L IN dynamicpruning..., PushedFilters: [IsNotNull(cs_warehouse_sk), IsNotNull(cs_sold_time_sk), IsNotNull(cs_ship_mode_sk)], ReadSchema: struct<cs_sold_time_sk:bigint,cs_ship_mode_sk:bigint,cs_warehouse_sk:bigint,cs_quantity:int,cs_sa...
SQLPlanMetric(number of files read,398, sum)
SQLPlanMetric(scan time,401000000 ns, timing)
SQLPlanMetric(dynamic partition pruning time,403000000 ns, timing)
SQLPlanMetric(metadata time,399000000 ns, timing)
SQLPlanMetric(size of files read,400, size)
SQLPlanMetric(number of output rows,397, sum)
SQLPlanMetric(static number of files read,404, sum)
SQLPlanMetric(static size of files read,405, size)
SQLPlanMetric(number of partitions read,402, sum)



id:68 name:SubqueryBroadcast desc:SubqueryBroadcast dynamicpruning#527, 0, [d_date_sk#136L], [id=#639]
SQLPlanMetric(data size (bytes),320, sum)
SQLPlanMetric(time to collect (ms),321, sum)



  2->0;

  3->2;

  5->3;

  6->5;

  8->6;

  9->8;

  11->9;

  12->11;

  13->12;

  14->13;

  15->14;

  16->15;

  17->16;

  18->17;

  19->18;

  20->19;

  21->20;

  22->21;

  23->22;

  24->23;

  25->24;

  27->25;

  28->27;

  29->28;

  30->19;

  32->30;

  33->32;

  34->33;

  35->17;

  37->35;

  38->37;

  39->38;

  40->15;

  42->40;

  43->42;

  44->43;

  45->44;

  46->13;

  48->46;

  49->48;

  50->49;

  51->50;

  53->6;

  54->53;

  56->54;

  57->56;

  58->57;

  59->58;

  60->59;

  61->60;

  62->61;

  63->62;

  64->63;

  65->64;

  66->65;

  67->66;

  68->67;

  35->68;

  30->64;

  35->62;

  40->60;

  46->58;

[SubGraph]
cluster 1 : 2 
cluster 4 : 5 
cluster 7 : 8 
cluster 10 : 11 12 13 14 15 16 17 18 19 20 21 
cluster 26 : 27 28 
cluster 31 : 32 33 
cluster 36 : 37 38 
cluster 41 : 42 43 44 
cluster 47 : 48 49 50 
cluster 52 : 53 
cluster 55 : 56 57 58 59 60 61 62 63 64 65 66 

