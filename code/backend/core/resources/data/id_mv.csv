1,"select company_type.id AS id, company_type.kind AS kind, movie_companies.movie_id AS movie_id, movie_companies.note AS note
 from movie_companies,company_type
 where (movie_companies.company_type_id = company_type.id) And (movie_companies.note not like '%(as Metro-Goldwyn-Mayer Pictures)%')  And  (((movie_companies.note like '%(co-production)%')) Or ((movie_companies.note like '%(presents)%'))) And (company_type.kind = 'production companies')","create materialized view if not exists mv1 as select company_type.id AS id, company_type.kind AS kind, movie_companies.movie_id AS movie_id, movie_companies.note AS note
 from movie_companies,company_type
 where (movie_companies.company_type_id = company_type.id) And (movie_companies.note not like '%(as Metro-Goldwyn-Mayer Pictures)%')  And  (((movie_companies.note like '%(co-production)%')) Or ((movie_companies.note like '%(presents)%'))) And (company_type.kind = 'production companies')"
2,"select info_type.id AS id, info_type.info AS info, movie_info_idx.movie_id AS movie_id
 from info_type,movie_info_idx
 where (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'top 250 rank')","create materialized view if not exists mv2 as select info_type.id AS id, info_type.info AS info, movie_info_idx.movie_id AS movie_id
 from info_type,movie_info_idx
 where (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'top 250 rank')"
3,"select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, info_type.info AS info, movie_companies.movie_id AS movie_id, movie_companies.note AS note
 from movie_companies,info_type,company_type,movie_info_idx
 where (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note not like '%(as Metro-Goldwyn-Mayer Pictures)%')  And  (((movie_companies.note like '%(co-production)%')) Or ((movie_companies.note like '%(presents)%'))) And (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'top 250 rank') And (company_type.kind = 'production companies')","create materialized view if not exists mv3 as select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, info_type.info AS info, movie_companies.movie_id AS movie_id, movie_companies.note AS note
 from movie_companies,info_type,company_type,movie_info_idx
 where (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note not like '%(as Metro-Goldwyn-Mayer Pictures)%')  And  (((movie_companies.note like '%(co-production)%')) Or ((movie_companies.note like '%(presents)%'))) And (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'top 250 rank') And (company_type.kind = 'production companies')"
4,"select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, info_type.info AS info, movie_companies.movie_id AS movie_id, movie_companies.note AS note, title.production_year AS production_year, title.title AS title
 from movie_info_idx,movie_companies,company_type,title,info_type
 where (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (movie_companies.movie_id = title.id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note not like '%(as Metro-Goldwyn-Mayer Pictures)%')  And  (((movie_companies.note like '%(co-production)%')) Or ((movie_companies.note like '%(presents)%'))) And (company_type.kind = 'production companies') And (title.id = movie_info_idx.movie_id) And (info_type.info = 'top 250 rank')","create materialized view if not exists mv4 as select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, info_type.info AS info, movie_companies.movie_id AS movie_id, movie_companies.note AS note, title.production_year AS production_year, title.title AS title
 from movie_info_idx,movie_companies,company_type,title,info_type
 where (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (movie_companies.movie_id = title.id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note not like '%(as Metro-Goldwyn-Mayer Pictures)%')  And  (((movie_companies.note like '%(co-production)%')) Or ((movie_companies.note like '%(presents)%'))) And (company_type.kind = 'production companies') And (title.id = movie_info_idx.movie_id) And (info_type.info = 'top 250 rank')"
5,"select company_type.id AS id, company_type.kind AS kind, movie_companies.movie_id AS movie_id, movie_companies.note AS note
 from movie_companies,company_type
 where (movie_companies.company_type_id = company_type.id) And (movie_companies.note not like '%(as Metro-Goldwyn-Mayer Pictures)%') And (company_type.kind = 'production companies')","create materialized view if not exists mv5 as select company_type.id AS id, company_type.kind AS kind, movie_companies.movie_id AS movie_id, movie_companies.note AS note
 from movie_companies,company_type
 where (movie_companies.company_type_id = company_type.id) And (movie_companies.note not like '%(as Metro-Goldwyn-Mayer Pictures)%') And (company_type.kind = 'production companies')"
6,"select info_type.id AS id, info_type.info AS info, movie_info_idx.movie_id AS movie_id
 from info_type,movie_info_idx
 where (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'bottom 10 rank')","create materialized view if not exists mv6 as select info_type.id AS id, info_type.info AS info, movie_info_idx.movie_id AS movie_id
 from info_type,movie_info_idx
 where (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'bottom 10 rank')"
7,"select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, info_type.info AS info, movie_companies.movie_id AS movie_id, movie_companies.note AS note
 from movie_companies,info_type,company_type,movie_info_idx
 where (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note not like '%(as Metro-Goldwyn-Mayer Pictures)%') And (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'bottom 10 rank') And (company_type.kind = 'production companies')","create materialized view if not exists mv7 as select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, info_type.info AS info, movie_companies.movie_id AS movie_id, movie_companies.note AS note
 from movie_companies,info_type,company_type,movie_info_idx
 where (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note not like '%(as Metro-Goldwyn-Mayer Pictures)%') And (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'bottom 10 rank') And (company_type.kind = 'production companies')"
8,"select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, info_type.info AS info, movie_companies.movie_id AS movie_id, movie_companies.note AS note, title.production_year AS production_year, title.title AS title
 from movie_info_idx,movie_companies,company_type,title,info_type
 where (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (movie_companies.movie_id = title.id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note not like '%(as Metro-Goldwyn-Mayer Pictures)%') And (company_type.kind = 'production companies') And (title.id = movie_companies.movie_id) And (info_type.info = 'bottom 10 rank')","create materialized view if not exists mv8 as select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, info_type.info AS info, movie_companies.movie_id AS movie_id, movie_companies.note AS note, title.production_year AS production_year, title.title AS title
 from movie_info_idx,movie_companies,company_type,title,info_type
 where (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (movie_companies.movie_id = title.id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note not like '%(as Metro-Goldwyn-Mayer Pictures)%') And (company_type.kind = 'production companies') And (title.id = movie_companies.movie_id) And (info_type.info = 'bottom 10 rank')"
9,"select info_type.id AS id, info_type.info AS info, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note
 from movie_companies,info_type,movie_info_idx
 where (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_companies.note not like '%(as Metro-Goldwyn-Mayer Pictures)%')  And  (movie_companies.note like '%(co-production)%') And (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'top 250 rank')","create materialized view if not exists mv9 as select info_type.id AS id, info_type.info AS info, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note
 from movie_companies,info_type,movie_info_idx
 where (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_companies.note not like '%(as Metro-Goldwyn-Mayer Pictures)%')  And  (movie_companies.note like '%(co-production)%') And (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'top 250 rank')"
10,"select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, info_type.info AS info, movie_companies.movie_id AS movie_id, movie_companies.note AS note
 from movie_companies,info_type,company_type,movie_info_idx
 where (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_companies.note not like '%(as Metro-Goldwyn-Mayer Pictures)%')  And  (movie_companies.note like '%(co-production)%') And (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'top 250 rank') And (company_type.kind = 'production companies')","create materialized view if not exists mv10 as select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, info_type.info AS info, movie_companies.movie_id AS movie_id, movie_companies.note AS note
 from movie_companies,info_type,company_type,movie_info_idx
 where (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_companies.note not like '%(as Metro-Goldwyn-Mayer Pictures)%')  And  (movie_companies.note like '%(co-production)%') And (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'top 250 rank') And (company_type.kind = 'production companies')"
11,"select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, info_type.info AS info, movie_companies.movie_id AS movie_id, movie_companies.note AS note, title.production_year AS production_year, title.title AS title
 from movie_info_idx,movie_companies,company_type,title,info_type
 where (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (movie_companies.movie_id = title.id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note not like '%(as Metro-Goldwyn-Mayer Pictures)%')  And  (movie_companies.note like '%(co-production)%') And (company_type.kind = 'production companies') And (title.id = movie_info_idx.movie_id) And (info_type.info = 'top 250 rank')","create materialized view if not exists mv11 as select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, info_type.info AS info, movie_companies.movie_id AS movie_id, movie_companies.note AS note, title.production_year AS production_year, title.title AS title
 from movie_info_idx,movie_companies,company_type,title,info_type
 where (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (movie_companies.movie_id = title.id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note not like '%(as Metro-Goldwyn-Mayer Pictures)%')  And  (movie_companies.note like '%(co-production)%') And (company_type.kind = 'production companies') And (title.id = movie_info_idx.movie_id) And (info_type.info = 'top 250 rank')"
12,"select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id
 from keyword,movie_keyword
 where (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'character-name-in-title')","create materialized view if not exists mv12 as select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id
 from keyword,movie_keyword
 where (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'character-name-in-title')"
13,"select keyword.id AS id, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id
 from movie_companies,keyword,movie_keyword
 where (movie_companies.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'character-name-in-title')","create materialized view if not exists mv13 as select keyword.id AS id, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id
 from movie_companies,keyword,movie_keyword
 where (movie_companies.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'character-name-in-title')"
14,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, movie_companies.movie_id AS movie_id
 from movie_companies,keyword,company_name,movie_keyword
 where (movie_companies.movie_id = movie_keyword.movie_id) And (company_name.id = movie_companies.company_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'character-name-in-title')","create materialized view if not exists mv14 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, movie_companies.movie_id AS movie_id
 from movie_companies,keyword,company_name,movie_keyword
 where (movie_companies.movie_id = movie_keyword.movie_id) And (company_name.id = movie_companies.company_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'character-name-in-title')"
15,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, movie_companies.movie_id AS movie_id, title.title AS title
 from movie_keyword,movie_companies,title,company_name,keyword
 where (title.id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_companies.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (keyword.keyword = 'character-name-in-title')","create materialized view if not exists mv15 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, movie_companies.movie_id AS movie_id, title.title AS title
 from movie_keyword,movie_companies,title,company_name,keyword
 where (title.id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_companies.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (keyword.keyword = 'character-name-in-title')"
16,"select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id, title.episode_nr AS episode_nr, title.title AS title
 from title,keyword,movie_keyword
 where (title.id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'character-name-in-title')","create materialized view if not exists mv16 as select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id, title.episode_nr AS episode_nr, title.title AS title
 from title,keyword,movie_keyword
 where (title.id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'character-name-in-title')"
17,"select keyword.id AS id, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, title.title AS title
 from movie_companies,title,keyword,movie_keyword
 where (movie_companies.movie_id = title.id) And (title.id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'character-name-in-title')","create materialized view if not exists mv17 as select keyword.id AS id, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, title.title AS title
 from movie_companies,title,keyword,movie_keyword
 where (movie_companies.movie_id = title.id) And (title.id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'character-name-in-title')"
18,"select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id
 from keyword,movie_keyword
 where (movie_keyword.keyword_id = keyword.id) And (keyword.keyword like '%sequel%')","create materialized view if not exists mv18 as select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id
 from keyword,movie_keyword
 where (movie_keyword.keyword_id = keyword.id) And (keyword.keyword like '%sequel%')"
19,"select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
 from title,keyword,movie_keyword
 where (title.id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword like '%sequel%')","create materialized view if not exists mv19 as select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
 from title,keyword,movie_keyword
 where (title.id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword like '%sequel%')"
20,"select keyword.id AS id, keyword.keyword AS keyword, movie_info.info AS info, movie_info.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
 from title,movie_info,keyword,movie_keyword
 where (title.id = movie_keyword.movie_id) And (movie_info.movie_id = title.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword like '%sequel%')","create materialized view if not exists mv20 as select keyword.id AS id, keyword.keyword AS keyword, movie_info.info AS info, movie_info.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
 from title,movie_info,keyword,movie_keyword
 where (title.id = movie_keyword.movie_id) And (movie_info.movie_id = title.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword like '%sequel%')"
21,"select keyword.id AS id, keyword.keyword AS keyword, movie_info.info AS info, movie_info.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
 from title,movie_info,keyword,movie_keyword
 where (title.id = movie_keyword.movie_id) And (movie_info.movie_id = title.id) And (movie_info.info = 'Bulgaria') And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword like '%sequel%')","create materialized view if not exists mv21 as select keyword.id AS id, keyword.keyword AS keyword, movie_info.info AS info, movie_info.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
 from title,movie_info,keyword,movie_keyword
 where (title.id = movie_keyword.movie_id) And (movie_info.movie_id = title.id) And (movie_info.info = 'Bulgaria') And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword like '%sequel%')"
22,"select keyword.id AS id, keyword.keyword AS keyword, movie_info.info AS info, movie_info.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
 from title,movie_info,keyword,movie_keyword
 where (title.id = movie_keyword.movie_id) And (movie_info.movie_id = title.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword like '%sequel%')","create materialized view if not exists mv22 as select keyword.id AS id, keyword.keyword AS keyword, movie_info.info AS info, movie_info.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
 from title,movie_info,keyword,movie_keyword
 where (title.id = movie_keyword.movie_id) And (movie_info.movie_id = title.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword like '%sequel%')"
23,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info_idx.info AS movie_info_idx_info_2, movie_info_idx.movie_id AS movie_id
 from info_type,movie_info_idx
 where (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'rating') And (movie_info_idx.info > '5.0')","create materialized view if not exists mv23 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info_idx.info AS movie_info_idx_info_2, movie_info_idx.movie_id AS movie_id
 from info_type,movie_info_idx
 where (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'rating') And (movie_info_idx.info > '5.0')"
24,"select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.movie_id AS movie_id
 from info_type,keyword,movie_info_idx,movie_keyword
 where (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'rating') And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword like '%sequel%') And (movie_keyword.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info > '5.0')","create materialized view if not exists mv24 as select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.movie_id AS movie_id
 from info_type,keyword,movie_info_idx,movie_keyword
 where (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'rating') And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword like '%sequel%') And (movie_keyword.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info > '5.0')"
25,"select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,title,info_type,keyword
 where (title.id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info > '5.0') And (info_type.info = 'rating') And (keyword.keyword like '%sequel%')","create materialized view if not exists mv25 as select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,title,info_type,keyword
 where (title.id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info > '5.0') And (info_type.info = 'rating') And (keyword.keyword like '%sequel%')"
26,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info_idx.info AS movie_info_idx_info_2, movie_info_idx.movie_id AS movie_id
 from movie_info_idx,info_type
 where (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info > '9.0') And (info_type.info = 'rating')","create materialized view if not exists mv26 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info_idx.info AS movie_info_idx_info_2, movie_info_idx.movie_id AS movie_id
 from movie_info_idx,info_type
 where (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info > '9.0') And (info_type.info = 'rating')"
27,"select info_type.info AS info_type_info_0, keyword.id AS id, keyword.keyword AS keyword, movie_info_idx.info AS movie_info_idx_info_3, movie_info_idx.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,title,info_type,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info > '9.0') And (info_type.id = movie_info_idx.info_type_id) And (info_type.info = 'rating') And (keyword.keyword like '%sequel%')","create materialized view if not exists mv27 as select info_type.info AS info_type_info_0, keyword.id AS id, keyword.keyword AS keyword, movie_info_idx.info AS movie_info_idx_info_3, movie_info_idx.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,title,info_type,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info > '9.0') And (info_type.id = movie_info_idx.info_type_id) And (info_type.info = 'rating') And (keyword.keyword like '%sequel%')"
28,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info_idx.info AS movie_info_idx_info_2, movie_info_idx.movie_id AS movie_id
 from info_type,movie_info_idx
 where (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'rating') And (movie_info_idx.info > '2.0')","create materialized view if not exists mv28 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info_idx.info AS movie_info_idx_info_2, movie_info_idx.movie_id AS movie_id
 from info_type,movie_info_idx
 where (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'rating') And (movie_info_idx.info > '2.0')"
29,"select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.movie_id AS movie_id
 from info_type,keyword,movie_info_idx,movie_keyword
 where (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'rating') And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword like '%sequel%') And (movie_keyword.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info > '2.0')","create materialized view if not exists mv29 as select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.movie_id AS movie_id
 from info_type,keyword,movie_info_idx,movie_keyword
 where (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'rating') And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword like '%sequel%') And (movie_keyword.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info > '2.0')"
30,"select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,title,info_type,keyword
 where (title.id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info > '2.0') And (info_type.info = 'rating') And (keyword.keyword like '%sequel%')","create materialized view if not exists mv30 as select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,title,info_type,keyword
 where (title.id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info > '2.0') And (info_type.info = 'rating') And (keyword.keyword like '%sequel%')"
31,"select company_type.kind AS kind, movie_companies.movie_id AS movie_id, movie_companies.note AS note
 from movie_companies,company_type
 where (movie_companies.company_type_id = company_type.id) And (movie_companies.note like '%(theatrical)%')  And  (movie_companies.note like '%(France)%') And (company_type.id = movie_companies.company_type_id) And (company_type.kind = 'production companies')","create materialized view if not exists mv31 as select company_type.kind AS kind, movie_companies.movie_id AS movie_id, movie_companies.note AS note
 from movie_companies,company_type
 where (movie_companies.company_type_id = company_type.id) And (movie_companies.note like '%(theatrical)%')  And  (movie_companies.note like '%(France)%') And (company_type.id = movie_companies.company_type_id) And (company_type.kind = 'production companies')"
32,"select company_type.id AS id, company_type.kind AS kind, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info, movie_info.info_type_id AS info_type_id
 from movie_companies,company_type,movie_info
 where (movie_info.movie_id = movie_companies.movie_id) And (company_type.id = movie_companies.company_type_id) And (movie_companies.note like '%(theatrical)%')  And  (movie_companies.note like '%(France)%') And (company_type.kind = 'production companies') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German'))","create materialized view if not exists mv32 as select company_type.id AS id, company_type.kind AS kind, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info, movie_info.info_type_id AS info_type_id
 from movie_companies,company_type,movie_info
 where (movie_info.movie_id = movie_companies.movie_id) And (company_type.id = movie_companies.company_type_id) And (movie_companies.note like '%(theatrical)%')  And  (movie_companies.note like '%(France)%') And (company_type.kind = 'production companies') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German'))"
33,"select company_type.id AS id, company_type.kind AS kind, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info, movie_info.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
 from movie_companies,company_type,movie_info,title
 where (movie_info.movie_id = movie_companies.movie_id) And (company_type.id = movie_companies.company_type_id) And (movie_companies.note like '%(theatrical)%')  And  (movie_companies.note like '%(France)%') And (company_type.kind = 'production companies') And (title.id = movie_info.movie_id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German'))","create materialized view if not exists mv33 as select company_type.id AS id, company_type.kind AS kind, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info, movie_info.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
 from movie_companies,company_type,movie_info,title
 where (movie_info.movie_id = movie_companies.movie_id) And (company_type.id = movie_companies.company_type_id) And (movie_companies.note like '%(theatrical)%')  And  (movie_companies.note like '%(France)%') And (company_type.kind = 'production companies') And (title.id = movie_info.movie_id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German'))"
34,"select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info, title.production_year AS production_year, title.title AS title
 from movie_info,movie_companies,company_type,title,info_type
 where (title.id = movie_info.movie_id) And (movie_info.movie_id = movie_companies.movie_id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')) And (info_type.id = movie_info.info_type_id) And (company_type.id = movie_companies.company_type_id) And (movie_companies.note like '%(theatrical)%')  And  (movie_companies.note like '%(France)%') And (company_type.kind = 'production companies')","create materialized view if not exists mv34 as select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info, title.production_year AS production_year, title.title AS title
 from movie_info,movie_companies,company_type,title,info_type
 where (title.id = movie_info.movie_id) And (movie_info.movie_id = movie_companies.movie_id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')) And (info_type.id = movie_info.info_type_id) And (company_type.id = movie_companies.company_type_id) And (movie_companies.note like '%(theatrical)%')  And  (movie_companies.note like '%(France)%') And (company_type.kind = 'production companies')"
35,"select company_type.kind AS kind, movie_companies.movie_id AS movie_id, movie_companies.note AS note
 from movie_companies,company_type
 where (movie_companies.company_type_id = company_type.id) And (movie_companies.note like '%(VHS)%')  And  (movie_companies.note like '%(USA)%')  And  (movie_companies.note like '%(1994)%') And (company_type.id = movie_companies.company_type_id) And (company_type.kind = 'production companies')","create materialized view if not exists mv35 as select company_type.kind AS kind, movie_companies.movie_id AS movie_id, movie_companies.note AS note
 from movie_companies,company_type
 where (movie_companies.company_type_id = company_type.id) And (movie_companies.note like '%(VHS)%')  And  (movie_companies.note like '%(USA)%')  And  (movie_companies.note like '%(1994)%') And (company_type.id = movie_companies.company_type_id) And (company_type.kind = 'production companies')"
36,"select company_type.id AS id, company_type.kind AS kind, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info, movie_info.info_type_id AS info_type_id
 from movie_companies,company_type,movie_info
 where (movie_info.movie_id = movie_companies.movie_id) And (company_type.id = movie_companies.company_type_id) And (movie_companies.note like '%(VHS)%')  And  (movie_companies.note like '%(USA)%')  And  (movie_companies.note like '%(1994)%') And (company_type.kind = 'production companies') And (movie_info.info in ('USA', 'America'))","create materialized view if not exists mv36 as select company_type.id AS id, company_type.kind AS kind, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info, movie_info.info_type_id AS info_type_id
 from movie_companies,company_type,movie_info
 where (movie_info.movie_id = movie_companies.movie_id) And (company_type.id = movie_companies.company_type_id) And (movie_companies.note like '%(VHS)%')  And  (movie_companies.note like '%(USA)%')  And  (movie_companies.note like '%(1994)%') And (company_type.kind = 'production companies') And (movie_info.info in ('USA', 'America'))"
37,"select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info
 from movie_companies,company_type,movie_info,info_type
 where (movie_info.movie_id = movie_companies.movie_id) And (company_type.id = movie_companies.company_type_id) And (movie_companies.note like '%(VHS)%')  And  (movie_companies.note like '%(USA)%')  And  (movie_companies.note like '%(1994)%') And (company_type.kind = 'production companies') And (movie_info.info in ('USA', 'America')) And (info_type.id = movie_info.info_type_id)","create materialized view if not exists mv37 as select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info
 from movie_companies,company_type,movie_info,info_type
 where (movie_info.movie_id = movie_companies.movie_id) And (company_type.id = movie_companies.company_type_id) And (movie_companies.note like '%(VHS)%')  And  (movie_companies.note like '%(USA)%')  And  (movie_companies.note like '%(1994)%') And (company_type.kind = 'production companies') And (movie_info.info in ('USA', 'America')) And (info_type.id = movie_info.info_type_id)"
38,"select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info, title.production_year AS production_year, title.title AS title
 from movie_info,movie_companies,company_type,title,info_type
 where (title.id = movie_info.movie_id) And (movie_info.movie_id = movie_companies.movie_id) And (movie_info.info in ('USA', 'America')) And (info_type.id = movie_info.info_type_id) And (company_type.id = movie_companies.company_type_id) And (movie_companies.note like '%(VHS)%')  And  (movie_companies.note like '%(USA)%')  And  (movie_companies.note like '%(1994)%') And (company_type.kind = 'production companies')","create materialized view if not exists mv38 as select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info, title.production_year AS production_year, title.title AS title
 from movie_info,movie_companies,company_type,title,info_type
 where (title.id = movie_info.movie_id) And (movie_info.movie_id = movie_companies.movie_id) And (movie_info.info in ('USA', 'America')) And (info_type.id = movie_info.info_type_id) And (company_type.id = movie_companies.company_type_id) And (movie_companies.note like '%(VHS)%')  And  (movie_companies.note like '%(USA)%')  And  (movie_companies.note like '%(1994)%') And (company_type.kind = 'production companies')"
39,"select company_type.id AS id, company_type.kind AS kind, movie_companies.movie_id AS movie_id, movie_companies.note AS note
 from movie_companies,company_type
 where (movie_companies.company_type_id = company_type.id) And (movie_companies.note not like '%(TV)%')  And  (movie_companies.note like '%(USA)%') And (company_type.kind = 'production companies')","create materialized view if not exists mv39 as select company_type.id AS id, company_type.kind AS kind, movie_companies.movie_id AS movie_id, movie_companies.note AS note
 from movie_companies,company_type
 where (movie_companies.company_type_id = company_type.id) And (movie_companies.note not like '%(TV)%')  And  (movie_companies.note like '%(USA)%') And (company_type.kind = 'production companies')"
40,"select company_type.kind AS kind, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info, movie_info.info_type_id AS info_type_id
 from movie_companies,company_type,movie_info
 where (movie_info.movie_id = movie_companies.movie_id) And (company_type.id = movie_companies.company_type_id) And (movie_companies.note not like '%(TV)%')  And  (movie_companies.note like '%(USA)%') And (movie_companies.company_type_id = company_type.id) And (company_type.kind = 'production companies') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American'))","create materialized view if not exists mv40 as select company_type.kind AS kind, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info, movie_info.info_type_id AS info_type_id
 from movie_companies,company_type,movie_info
 where (movie_info.movie_id = movie_companies.movie_id) And (company_type.id = movie_companies.company_type_id) And (movie_companies.note not like '%(TV)%')  And  (movie_companies.note like '%(USA)%') And (movie_companies.company_type_id = company_type.id) And (company_type.kind = 'production companies') And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American'))"
41,"select company_type.kind AS kind, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info, movie_info.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
 from movie_companies,company_type,movie_info,title
 where (movie_info.movie_id = movie_companies.movie_id) And (company_type.id = movie_companies.company_type_id) And (movie_companies.note not like '%(TV)%')  And  (movie_companies.note like '%(USA)%') And (movie_companies.company_type_id = company_type.id) And (company_type.kind = 'production companies') And (title.id = movie_info.movie_id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American'))","create materialized view if not exists mv41 as select company_type.kind AS kind, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info, movie_info.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
 from movie_companies,company_type,movie_info,title
 where (movie_info.movie_id = movie_companies.movie_id) And (company_type.id = movie_companies.company_type_id) And (movie_companies.note not like '%(TV)%')  And  (movie_companies.note like '%(USA)%') And (movie_companies.company_type_id = company_type.id) And (company_type.kind = 'production companies') And (title.id = movie_info.movie_id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American'))"
42,"select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info, title.production_year AS production_year, title.title AS title
 from movie_info,movie_companies,company_type,title,info_type
 where (movie_info.info_type_id = info_type.id) And (title.id = movie_info.movie_id) And (movie_info.movie_id = movie_companies.movie_id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note not like '%(TV)%')  And  (movie_companies.note like '%(USA)%') And (company_type.kind = 'production companies')","create materialized view if not exists mv42 as select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info, title.production_year AS production_year, title.title AS title
 from movie_info,movie_companies,company_type,title,info_type
 where (movie_info.info_type_id = info_type.id) And (title.id = movie_info.movie_id) And (movie_info.movie_id = movie_companies.movie_id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note not like '%(TV)%')  And  (movie_companies.note like '%(USA)%') And (company_type.kind = 'production companies')"
43,"select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id
 from keyword,movie_keyword
 where (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'marvel-cinematic-universe')","create materialized view if not exists mv43 as select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id
 from keyword,movie_keyword
 where (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'marvel-cinematic-universe')"
44,"select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
 from title,keyword,movie_keyword
 where (title.id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'marvel-cinematic-universe')","create materialized view if not exists mv44 as select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
 from title,keyword,movie_keyword
 where (title.id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'marvel-cinematic-universe')"
45,"select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, keyword.id AS id, keyword.keyword AS keyword, title.production_year AS production_year, title.title AS title
 from title,keyword,cast_info,movie_keyword
 where (title.id = movie_keyword.movie_id) And (cast_info.movie_id = title.id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'marvel-cinematic-universe')","create materialized view if not exists mv45 as select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, keyword.id AS id, keyword.keyword AS keyword, title.production_year AS production_year, title.title AS title
 from title,keyword,cast_info,movie_keyword
 where (title.id = movie_keyword.movie_id) And (cast_info.movie_id = title.id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'marvel-cinematic-universe')"
46,"select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, keyword.id AS id, keyword.keyword AS keyword, name.name AS name, title.production_year AS production_year, title.title AS title
 from movie_keyword,name,title,cast_info,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (name.id = cast_info.person_id) And (cast_info.movie_id = title.id) And (keyword.keyword = 'marvel-cinematic-universe')","create materialized view if not exists mv46 as select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, keyword.id AS id, keyword.keyword AS keyword, name.name AS name, title.production_year AS production_year, title.title AS title
 from movie_keyword,name,title,cast_info,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (name.id = cast_info.person_id) And (cast_info.movie_id = title.id) And (keyword.keyword = 'marvel-cinematic-universe')"
47,"select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id
 from keyword,movie_keyword
 where (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence'))","create materialized view if not exists mv47 as select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id
 from keyword,movie_keyword
 where (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence'))"
48,"select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
 from title,keyword,movie_keyword
 where (title.id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence'))","create materialized view if not exists mv48 as select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
 from title,keyword,movie_keyword
 where (title.id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence'))"
49,"select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, keyword.id AS id, keyword.keyword AS keyword, title.production_year AS production_year, title.title AS title
 from title,keyword,cast_info,movie_keyword
 where (title.id = movie_keyword.movie_id) And (cast_info.movie_id = title.id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence'))","create materialized view if not exists mv49 as select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, keyword.id AS id, keyword.keyword AS keyword, title.production_year AS production_year, title.title AS title
 from title,keyword,cast_info,movie_keyword
 where (title.id = movie_keyword.movie_id) And (cast_info.movie_id = title.id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence'))"
50,"select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, keyword.id AS id, keyword.keyword AS keyword, name.name AS name, title.production_year AS production_year, title.title AS title
 from movie_keyword,name,title,cast_info,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (name.id = cast_info.person_id) And (cast_info.movie_id = title.id) And (keyword.keyword in ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence'))","create materialized view if not exists mv50 as select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, keyword.id AS id, keyword.keyword AS keyword, name.name AS name, title.production_year AS production_year, title.title AS title
 from movie_keyword,name,title,cast_info,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (name.id = cast_info.person_id) And (cast_info.movie_id = title.id) And (keyword.keyword in ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence'))"
51,"select info_type.id AS id, info_type.info AS info, person_info.note AS note, person_info.person_id AS person_id
 from person_info,info_type
 where (info_type.id = person_info.info_type_id) And (person_info.note = 'Volker Boehm') And (info_type.info = 'mini biography')","create materialized view if not exists mv51 as select info_type.id AS id, info_type.info AS info, person_info.note AS note, person_info.person_id AS person_id
 from person_info,info_type
 where (info_type.id = person_info.info_type_id) And (person_info.note = 'Volker Boehm') And (info_type.info = 'mini biography')"
52,"select link_type.id AS id, link_type.link AS link, movie_link.linked_movie_id AS linked_movie_id
 from link_type,movie_link
 where (movie_link.link_type_id = link_type.id) And (link_type.link = 'features')","create materialized view if not exists mv52 as select link_type.id AS id, link_type.link AS link, movie_link.linked_movie_id AS linked_movie_id
 from link_type,movie_link
 where (movie_link.link_type_id = link_type.id) And (link_type.link = 'features')"
53,"select link_type.id AS id, link_type.link AS link, movie_link.linked_movie_id AS linked_movie_id, title.production_year AS production_year, title.title AS title
 from link_type,title,movie_link
 where (movie_link.link_type_id = link_type.id) And (link_type.link = 'features') And (title.id = movie_link.linked_movie_id)","create materialized view if not exists mv53 as select link_type.id AS id, link_type.link AS link, movie_link.linked_movie_id AS linked_movie_id, title.production_year AS production_year, title.title AS title
 from link_type,title,movie_link
 where (movie_link.link_type_id = link_type.id) And (link_type.link = 'features') And (title.id = movie_link.linked_movie_id)"
54,"select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, link_type.id AS id, link_type.link AS link, title.production_year AS production_year, title.title AS title
 from link_type,title,cast_info,movie_link
 where (movie_link.link_type_id = link_type.id) And (link_type.link = 'features') And (title.id = movie_link.linked_movie_id) And (cast_info.movie_id = title.id)","create materialized view if not exists mv54 as select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, link_type.id AS id, link_type.link AS link, title.production_year AS production_year, title.title AS title
 from link_type,title,cast_info,movie_link
 where (movie_link.link_type_id = link_type.id) And (link_type.link = 'features') And (title.id = movie_link.linked_movie_id) And (cast_info.movie_id = title.id)"
55,"select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, info_type.id AS info_type_id_2, info_type.info AS info, link_type.id AS link_type_id_4, link_type.link AS link, person_info.note AS note, title.production_year AS production_year, title.title AS title
 from link_type,person_info,title,movie_link,cast_info,info_type
 where (movie_link.link_type_id = link_type.id) And (link_type.link = 'features') And (person_info.person_id = cast_info.person_id) And (info_type.id = person_info.info_type_id) And (person_info.note = 'Volker Boehm') And (title.id = movie_link.linked_movie_id) And (cast_info.movie_id = title.id) And (info_type.info = 'mini biography')","create materialized view if not exists mv55 as select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, info_type.id AS info_type_id_2, info_type.info AS info, link_type.id AS link_type_id_4, link_type.link AS link, person_info.note AS note, title.production_year AS production_year, title.title AS title
 from link_type,person_info,title,movie_link,cast_info,info_type
 where (movie_link.link_type_id = link_type.id) And (link_type.link = 'features') And (person_info.person_id = cast_info.person_id) And (info_type.id = person_info.info_type_id) And (person_info.note = 'Volker Boehm') And (title.id = movie_link.linked_movie_id) And (cast_info.movie_id = title.id) And (info_type.info = 'mini biography')"
56,"select aka_name.name AS name, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, info_type.id AS info_type_id_3, info_type.info AS info, link_type.id AS link_type_id_5, link_type.link AS link, person_info.info_type_id AS info_type_id, person_info.note AS note, title.production_year AS production_year, title.title AS title
 from link_type,person_info,title,movie_link,aka_name,cast_info,info_type
 where (movie_link.link_type_id = link_type.id) And (link_type.link = 'features') And (person_info.person_id = aka_name.person_id) And (person_info.person_id = cast_info.person_id) And (info_type.id = person_info.info_type_id) And (person_info.note = 'Volker Boehm') And (title.id = movie_link.linked_movie_id) And (cast_info.movie_id = title.id) And (aka_name.name like '%a%') And (info_type.info = 'mini biography')","create materialized view if not exists mv56 as select aka_name.name AS name, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, info_type.id AS info_type_id_3, info_type.info AS info, link_type.id AS link_type_id_5, link_type.link AS link, person_info.info_type_id AS info_type_id, person_info.note AS note, title.production_year AS production_year, title.title AS title
 from link_type,person_info,title,movie_link,aka_name,cast_info,info_type
 where (movie_link.link_type_id = link_type.id) And (link_type.link = 'features') And (person_info.person_id = aka_name.person_id) And (person_info.person_id = cast_info.person_id) And (info_type.id = person_info.info_type_id) And (person_info.note = 'Volker Boehm') And (title.id = movie_link.linked_movie_id) And (cast_info.movie_id = title.id) And (aka_name.name like '%a%') And (info_type.info = 'mini biography')"
57,"select aka_name.name AS aka_name_name_0, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, info_type.info AS info, link_type.id AS id, link_type.link AS link, name.gender AS gender, name.name AS name_name_7, name.name_pcode_cf AS name_pcode_cf, person_info.info_type_id AS info_type_id, person_info.note AS note, title.production_year AS production_year, title.title AS title
 from link_type,person_info,name,title,movie_link,aka_name,cast_info,info_type
 where (movie_link.link_type_id = link_type.id) And (link_type.link = 'features') And (person_info.person_id = aka_name.person_id) And (person_info.person_id = cast_info.person_id) And (info_type.id = person_info.info_type_id) And (person_info.note = 'Volker Boehm') And (name.id = cast_info.person_id) And (aka_name.person_id = name.id) And (title.id = movie_link.linked_movie_id) And (cast_info.movie_id = title.id) And (aka_name.name like '%a%') And (info_type.info = 'mini biography')","create materialized view if not exists mv57 as select aka_name.name AS aka_name_name_0, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, info_type.info AS info, link_type.id AS id, link_type.link AS link, name.gender AS gender, name.name AS name_name_7, name.name_pcode_cf AS name_pcode_cf, person_info.info_type_id AS info_type_id, person_info.note AS note, title.production_year AS production_year, title.title AS title
 from link_type,person_info,name,title,movie_link,aka_name,cast_info,info_type
 where (movie_link.link_type_id = link_type.id) And (link_type.link = 'features') And (person_info.person_id = aka_name.person_id) And (person_info.person_id = cast_info.person_id) And (info_type.id = person_info.info_type_id) And (person_info.note = 'Volker Boehm') And (name.id = cast_info.person_id) And (aka_name.person_id = name.id) And (title.id = movie_link.linked_movie_id) And (cast_info.movie_id = title.id) And (aka_name.name like '%a%') And (info_type.info = 'mini biography')"
58,"select info_type.info AS info_type_info_0, person_info.info AS person_info_info_1, person_info.note AS note, person_info.person_id AS person_id
 from person_info,info_type
 where (info_type.id = person_info.info_type_id) And (person_info.note IS NOT NULL) And (person_info.info_type_id = info_type.id) And (info_type.info = 'mini biography')","create materialized view if not exists mv58 as select info_type.info AS info_type_info_0, person_info.info AS person_info_info_1, person_info.note AS note, person_info.person_id AS person_id
 from person_info,info_type
 where (info_type.id = person_info.info_type_id) And (person_info.note IS NOT NULL) And (person_info.info_type_id = info_type.id) And (info_type.info = 'mini biography')"
59,"select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, name.gender AS gender, name.id AS name_id_3, name.name AS name, name.name_pcode_cf AS name_pcode_cf, person_info.info AS person_info_info_6, person_info.note AS note
 from person_info,name,info_type
 where (person_info.info_type_id = info_type.id) And (person_info.note IS NOT NULL) And (name.id = person_info.person_id) And (info_type.info = 'mini biography')","create materialized view if not exists mv59 as select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, name.gender AS gender, name.id AS name_id_3, name.name AS name, name.name_pcode_cf AS name_pcode_cf, person_info.info AS person_info_info_6, person_info.note AS note
 from person_info,name,info_type
 where (person_info.info_type_id = info_type.id) And (person_info.note IS NOT NULL) And (name.id = person_info.person_id) And (info_type.info = 'mini biography')"
60,"select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, info_type.id AS id, info_type.info AS info_type_info_3, name.gender AS gender, name.name AS name, name.name_pcode_cf AS name_pcode_cf, person_info.info AS person_info_info_7, person_info.note AS note
 from name,person_info,cast_info,info_type
 where (name.id = person_info.person_id) And (cast_info.person_id = name.id) And (person_info.info_type_id = info_type.id) And (person_info.note IS NOT NULL) And (info_type.info = 'mini biography')","create materialized view if not exists mv60 as select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, info_type.id AS id, info_type.info AS info_type_info_3, name.gender AS gender, name.name AS name, name.name_pcode_cf AS name_pcode_cf, person_info.info AS person_info_info_7, person_info.note AS note
 from name,person_info,cast_info,info_type
 where (name.id = person_info.person_id) And (cast_info.person_id = name.id) And (person_info.info_type_id = info_type.id) And (person_info.note IS NOT NULL) And (info_type.info = 'mini biography')"
61,"select link_type.id AS id, link_type.link AS link, movie_link.linked_movie_id AS linked_movie_id
 from link_type,movie_link
 where (movie_link.link_type_id = link_type.id) And (link_type.link in ('references', 'referenced in', 'features', 'featured in'))","create materialized view if not exists mv61 as select link_type.id AS id, link_type.link AS link, movie_link.linked_movie_id AS linked_movie_id
 from link_type,movie_link
 where (movie_link.link_type_id = link_type.id) And (link_type.link in ('references', 'referenced in', 'features', 'featured in'))"
62,"select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, info_type.id AS info_type_id_2, info_type.info AS info_type_info_3, link_type.id AS link_type_id_4, link_type.link AS link, name.gender AS gender, name.name AS name, name.name_pcode_cf AS name_pcode_cf, person_info.info AS person_info_info_9, person_info.note AS note
 from link_type,person_info,name,movie_link,cast_info,info_type
 where (movie_link.link_type_id = link_type.id) And (link_type.link in ('references', 'referenced in', 'features', 'featured in')) And (person_info.info_type_id = info_type.id) And (person_info.note IS NOT NULL) And (name.id = person_info.person_id) And (cast_info.person_id = name.id) And (cast_info.movie_id = movie_link.linked_movie_id) And (info_type.info = 'mini biography')","create materialized view if not exists mv62 as select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, info_type.id AS info_type_id_2, info_type.info AS info_type_info_3, link_type.id AS link_type_id_4, link_type.link AS link, name.gender AS gender, name.name AS name, name.name_pcode_cf AS name_pcode_cf, person_info.info AS person_info_info_9, person_info.note AS note
 from link_type,person_info,name,movie_link,cast_info,info_type
 where (movie_link.link_type_id = link_type.id) And (link_type.link in ('references', 'referenced in', 'features', 'featured in')) And (person_info.info_type_id = info_type.id) And (person_info.note IS NOT NULL) And (name.id = person_info.person_id) And (cast_info.person_id = name.id) And (cast_info.movie_id = movie_link.linked_movie_id) And (info_type.info = 'mini biography')"
63,"select aka_name.name AS aka_name_name_0, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, info_type.info AS info_type_info_3, link_type.id AS id, link_type.link AS link, name.gender AS gender, name.name AS name_name_7, name.name_pcode_cf AS name_pcode_cf, person_info.info AS person_info_info_9, person_info.info_type_id AS info_type_id, person_info.note AS note
 from link_type,person_info,name,movie_link,aka_name,cast_info,info_type
 where (movie_link.link_type_id = link_type.id) And (link_type.link in ('references', 'referenced in', 'features', 'featured in')) And (person_info.info_type_id = info_type.id) And (person_info.note IS NOT NULL) And (name.id = person_info.person_id) And (name.id = aka_name.person_id) And (cast_info.person_id = name.id) And (cast_info.movie_id = movie_link.linked_movie_id) And (aka_name.name IS NOT NULL)  And  (((aka_name.name like '%a%')) Or ((aka_name.name like 'A%'))) And (info_type.info = 'mini biography')","create materialized view if not exists mv63 as select aka_name.name AS aka_name_name_0, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, info_type.info AS info_type_info_3, link_type.id AS id, link_type.link AS link, name.gender AS gender, name.name AS name_name_7, name.name_pcode_cf AS name_pcode_cf, person_info.info AS person_info_info_9, person_info.info_type_id AS info_type_id, person_info.note AS note
 from link_type,person_info,name,movie_link,aka_name,cast_info,info_type
 where (movie_link.link_type_id = link_type.id) And (link_type.link in ('references', 'referenced in', 'features', 'featured in')) And (person_info.info_type_id = info_type.id) And (person_info.note IS NOT NULL) And (name.id = person_info.person_id) And (name.id = aka_name.person_id) And (cast_info.person_id = name.id) And (cast_info.movie_id = movie_link.linked_movie_id) And (aka_name.name IS NOT NULL)  And  (((aka_name.name like '%a%')) Or ((aka_name.name like 'A%'))) And (info_type.info = 'mini biography')"
64,"select aka_name.name AS aka_name_name_0, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, info_type.info AS info_type_info_3, link_type.id AS id, link_type.link AS link, name.gender AS gender, name.name AS name_name_7, name.name_pcode_cf AS name_pcode_cf, person_info.info AS person_info_info_9, person_info.info_type_id AS info_type_id, person_info.note AS note, title.production_year AS production_year
 from link_type,person_info,name,title,movie_link,aka_name,cast_info,info_type
 where (movie_link.link_type_id = link_type.id) And (link_type.link in ('references', 'referenced in', 'features', 'featured in')) And (person_info.info_type_id = info_type.id) And (person_info.note IS NOT NULL) And (name.id = person_info.person_id) And (name.id = aka_name.person_id) And (cast_info.person_id = name.id) And (title.id = cast_info.movie_id) And (cast_info.movie_id = movie_link.linked_movie_id) And (aka_name.name IS NOT NULL)  And  (((aka_name.name like '%a%')) Or ((aka_name.name like 'A%'))) And (info_type.info = 'mini biography')","create materialized view if not exists mv64 as select aka_name.name AS aka_name_name_0, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, info_type.info AS info_type_info_3, link_type.id AS id, link_type.link AS link, name.gender AS gender, name.name AS name_name_7, name.name_pcode_cf AS name_pcode_cf, person_info.info AS person_info_info_9, person_info.info_type_id AS info_type_id, person_info.note AS note, title.production_year AS production_year
 from link_type,person_info,name,title,movie_link,aka_name,cast_info,info_type
 where (movie_link.link_type_id = link_type.id) And (link_type.link in ('references', 'referenced in', 'features', 'featured in')) And (person_info.info_type_id = info_type.id) And (person_info.note IS NOT NULL) And (name.id = person_info.person_id) And (name.id = aka_name.person_id) And (cast_info.person_id = name.id) And (title.id = cast_info.movie_id) And (cast_info.movie_id = movie_link.linked_movie_id) And (aka_name.name IS NOT NULL)  And  (((aka_name.name like '%a%')) Or ((aka_name.name like 'A%'))) And (info_type.info = 'mini biography')"
65,"select company_name.country_code AS country_code, company_name.id AS id, movie_companies.movie_id AS movie_id, movie_companies.note AS note
 from movie_companies,company_name
 where (movie_companies.company_id = company_name.id) And (movie_companies.note like '%(Japan)%')  And  (movie_companies.note not like '%(USA)%') And (company_name.country_code = '[jp]')","create materialized view if not exists mv65 as select company_name.country_code AS country_code, company_name.id AS id, movie_companies.movie_id AS movie_id, movie_companies.note AS note
 from movie_companies,company_name
 where (movie_companies.company_id = company_name.id) And (movie_companies.note like '%(Japan)%')  And  (movie_companies.note not like '%(USA)%') And (company_name.country_code = '[jp]')"
66,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.role_id AS role_id, role_type.role AS role
 from role_type,cast_info
 where (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (cast_info.note = '(voice: English version)')","create materialized view if not exists mv66 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.role_id AS role_id, role_type.role AS role
 from role_type,cast_info
 where (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (cast_info.note = '(voice: English version)')"
67,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.role_id AS role_id, name.name AS name, role_type.role AS role
 from role_type,cast_info,name
 where (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (cast_info.note = '(voice: English version)') And (name.id = cast_info.person_id)","create materialized view if not exists mv67 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.role_id AS role_id, name.name AS name, role_type.role AS role
 from role_type,cast_info,name
 where (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (cast_info.note = '(voice: English version)') And (name.id = cast_info.person_id)"
68,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.role_id AS role_id, name.name AS name, role_type.role AS role, title.title AS title
 from role_type,title,cast_info,name
 where (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (title.id = cast_info.movie_id) And (cast_info.note = '(voice: English version)') And (name.id = cast_info.person_id)","create materialized view if not exists mv68 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.role_id AS role_id, name.name AS name, role_type.role AS role, title.title AS title
 from role_type,title,cast_info,name
 where (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (title.id = cast_info.movie_id) And (cast_info.note = '(voice: English version)') And (name.id = cast_info.person_id)"
69,"select aka_name.name AS aka_name_name_0, cast_info.note AS note, name.name AS name_name_2, role_type.id AS role_type_id_3, role_type.role AS role, title.id AS title_id_5, title.title AS title
 from name,role_type,title,aka_name,cast_info
 where (name.id = aka_name.person_id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (title.id = cast_info.movie_id) And (aka_name.person_id = name.id) And (cast_info.note = '(voice: English version)') And (name.id = cast_info.person_id)","create materialized view if not exists mv69 as select aka_name.name AS aka_name_name_0, cast_info.note AS note, name.name AS name_name_2, role_type.id AS role_type_id_3, role_type.role AS role, title.id AS title_id_5, title.title AS title
 from name,role_type,title,aka_name,cast_info
 where (name.id = aka_name.person_id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (title.id = cast_info.movie_id) And (aka_name.person_id = name.id) And (cast_info.note = '(voice: English version)') And (name.id = cast_info.person_id)"
70,"select aka_name.name AS aka_name_name_0, cast_info.note AS cast_info_note_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, movie_companies.movie_id AS movie_id, movie_companies.note AS movie_companies_note_5, name.name AS name_name_6, role_type.id AS role_type_id_7, role_type.role AS role, title.title AS title
 from name,role_type,movie_companies,title,company_name,aka_name,cast_info
 where (name.id = aka_name.person_id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (movie_companies.movie_id = cast_info.movie_id) And (movie_companies.company_id = company_name.id) And (movie_companies.note like '%(Japan)%')  And  (movie_companies.note not like '%(USA)%') And (title.id = cast_info.movie_id) And (company_name.country_code = '[jp]') And (aka_name.person_id = name.id) And (cast_info.note = '(voice: English version)') And (name.id = cast_info.person_id)","create materialized view if not exists mv70 as select aka_name.name AS aka_name_name_0, cast_info.note AS cast_info_note_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, movie_companies.movie_id AS movie_id, movie_companies.note AS movie_companies_note_5, name.name AS name_name_6, role_type.id AS role_type_id_7, role_type.role AS role, title.title AS title
 from name,role_type,movie_companies,title,company_name,aka_name,cast_info
 where (name.id = aka_name.person_id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (movie_companies.movie_id = cast_info.movie_id) And (movie_companies.company_id = company_name.id) And (movie_companies.note like '%(Japan)%')  And  (movie_companies.note not like '%(USA)%') And (title.id = cast_info.movie_id) And (company_name.country_code = '[jp]') And (aka_name.person_id = name.id) And (cast_info.note = '(voice: English version)') And (name.id = cast_info.person_id)"
71,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.role_id AS role_id, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from role_type,title,cast_info
 where (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (title.id = cast_info.movie_id) And (cast_info.note = '(voice: English version)')","create materialized view if not exists mv71 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.role_id AS role_id, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from role_type,title,cast_info
 where (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (title.id = cast_info.movie_id) And (cast_info.note = '(voice: English version)')"
72,"select aka_name.name AS name, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.role_id AS role_id, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from role_type,title,aka_name,cast_info
 where (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (title.id = cast_info.movie_id) And (aka_name.person_id = cast_info.person_id) And (cast_info.note = '(voice: English version)')","create materialized view if not exists mv72 as select aka_name.name AS name, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.role_id AS role_id, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from role_type,title,aka_name,cast_info
 where (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (title.id = cast_info.movie_id) And (aka_name.person_id = cast_info.person_id) And (cast_info.note = '(voice: English version)')"
73,"select aka_name.name AS aka_name_name_0, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.role_id AS role_id, name.name AS name_name_4, role_type.role AS role, title.id AS id, title.production_year AS production_year, title.title AS title
 from name,role_type,title,aka_name,cast_info
 where (name.id = aka_name.person_id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (title.id = cast_info.movie_id) And (aka_name.person_id = name.id) And (aka_name.person_id = cast_info.person_id) And (cast_info.note = '(voice: English version)')","create materialized view if not exists mv73 as select aka_name.name AS aka_name_name_0, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.role_id AS role_id, name.name AS name_name_4, role_type.role AS role, title.id AS id, title.production_year AS production_year, title.title AS title
 from name,role_type,title,aka_name,cast_info
 where (name.id = aka_name.person_id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (title.id = cast_info.movie_id) And (aka_name.person_id = name.id) And (aka_name.person_id = cast_info.person_id) And (cast_info.note = '(voice: English version)')"
74,"select company_name.country_code AS country_code, movie_companies.movie_id AS movie_id, movie_companies.note AS note
 from movie_companies,company_name
 where (movie_companies.note like '%(Japan)%')  And  (movie_companies.note not like '%(USA)%')  And  (((movie_companies.note like '%(2006)%')) Or ((movie_companies.note like '%(2007)%'))) And (movie_companies.company_id = company_name.id) And (company_name.id = movie_companies.company_id)","create materialized view if not exists mv74 as select company_name.country_code AS country_code, movie_companies.movie_id AS movie_id, movie_companies.note AS note
 from movie_companies,company_name
 where (movie_companies.note like '%(Japan)%')  And  (movie_companies.note not like '%(USA)%')  And  (((movie_companies.note like '%(2006)%')) Or ((movie_companies.note like '%(2007)%'))) And (movie_companies.company_id = company_name.id) And (company_name.id = movie_companies.company_id)"
75,"select aka_name.name AS aka_name_name_0, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_3, cast_info.role_id AS role_id, company_name.country_code AS country_code, movie_companies.note AS movie_companies_note_6, name.name AS name_name_7, role_type.role AS role, title.id AS id, title.production_year AS production_year, title.title AS title
 from name,role_type,movie_companies,title,company_name,aka_name,cast_info
 where (name.id = aka_name.person_id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (movie_companies.movie_id = cast_info.movie_id) And (movie_companies.note like '%(Japan)%')  And  (movie_companies.note not like '%(USA)%')  And  (((movie_companies.note like '%(2006)%')) Or ((movie_companies.note like '%(2007)%'))) And (movie_companies.company_id = company_name.id) And (title.id = cast_info.movie_id) And (company_name.id = movie_companies.company_id) And (aka_name.person_id = cast_info.person_id) And (cast_info.note = '(voice: English version)')","create materialized view if not exists mv75 as select aka_name.name AS aka_name_name_0, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_3, cast_info.role_id AS role_id, company_name.country_code AS country_code, movie_companies.note AS movie_companies_note_6, name.name AS name_name_7, role_type.role AS role, title.id AS id, title.production_year AS production_year, title.title AS title
 from name,role_type,movie_companies,title,company_name,aka_name,cast_info
 where (name.id = aka_name.person_id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (movie_companies.movie_id = cast_info.movie_id) And (movie_companies.note like '%(Japan)%')  And  (movie_companies.note not like '%(USA)%')  And  (((movie_companies.note like '%(2006)%')) Or ((movie_companies.note like '%(2007)%'))) And (movie_companies.company_id = company_name.id) And (title.id = cast_info.movie_id) And (company_name.id = movie_companies.company_id) And (aka_name.person_id = cast_info.person_id) And (cast_info.note = '(voice: English version)')"
76,"select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, cast_info.role_id AS role_id, role_type.role AS role
 from role_type,cast_info
 where (cast_info.role_id = role_type.id) And (role_type.role = 'writer')","create materialized view if not exists mv76 as select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, cast_info.role_id AS role_id, role_type.role AS role
 from role_type,cast_info
 where (cast_info.role_id = role_type.id) And (role_type.role = 'writer')"
77,"select company_name.country_code AS country_code, company_name.id AS id, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id
 from movie_companies,company_name
 where (movie_companies.company_id = company_name.id) And (company_name.country_code = '[us]')","create materialized view if not exists mv77 as select company_name.country_code AS country_code, company_name.id AS id, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id
 from movie_companies,company_name
 where (movie_companies.company_id = company_name.id) And (company_name.country_code = '[us]')"
78,"select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, role_type.role AS role
 from role_type,movie_companies,company_name,cast_info
 where (cast_info.role_id = role_type.id) And (role_type.role = 'writer') And (cast_info.movie_id = movie_companies.movie_id) And (movie_companies.company_id = company_name.id) And (company_name.country_code = '[us]')","create materialized view if not exists mv78 as select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, role_type.role AS role
 from role_type,movie_companies,company_name,cast_info
 where (cast_info.role_id = role_type.id) And (role_type.role = 'writer') And (cast_info.movie_id = movie_companies.movie_id) And (movie_companies.company_id = company_name.id) And (company_name.country_code = '[us]')"
79,"select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, role_type.role AS role
 from name,role_type,movie_companies,company_name,cast_info
 where (name.id = cast_info.person_id) And (cast_info.role_id = role_type.id) And (role_type.role = 'writer') And (cast_info.movie_id = movie_companies.movie_id) And (movie_companies.company_id = company_name.id) And (company_name.country_code = '[us]')","create materialized view if not exists mv79 as select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, role_type.role AS role
 from name,role_type,movie_companies,company_name,cast_info
 where (name.id = cast_info.person_id) And (cast_info.role_id = role_type.id) And (role_type.role = 'writer') And (cast_info.movie_id = movie_companies.movie_id) And (movie_companies.company_id = company_name.id) And (company_name.country_code = '[us]')"
80,"select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, role_type.role AS role, title.title AS title
 from name,role_type,movie_companies,title,company_name,cast_info
 where (name.id = cast_info.person_id) And (cast_info.role_id = role_type.id) And (role_type.role = 'writer') And (cast_info.movie_id = movie_companies.movie_id) And (movie_companies.company_id = company_name.id) And (title.id = cast_info.movie_id) And (company_name.country_code = '[us]')","create materialized view if not exists mv80 as select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, role_type.role AS role, title.title AS title
 from name,role_type,movie_companies,title,company_name,cast_info
 where (name.id = cast_info.person_id) And (cast_info.role_id = role_type.id) And (role_type.role = 'writer') And (cast_info.movie_id = movie_companies.movie_id) And (movie_companies.company_id = company_name.id) And (title.id = cast_info.movie_id) And (company_name.country_code = '[us]')"
81,"select aka_name.name AS name, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS company_name_id_3, movie_companies.movie_id AS movie_id, role_type.id AS role_type_id_5, role_type.role AS role, title.title AS title
 from name,role_type,movie_companies,title,company_name,aka_name,cast_info
 where (name.id = aka_name.person_id) And (cast_info.role_id = role_type.id) And (role_type.role = 'writer') And (cast_info.movie_id = movie_companies.movie_id) And (movie_companies.company_id = company_name.id) And (title.id = cast_info.movie_id) And (company_name.country_code = '[us]') And (aka_name.person_id = name.id) And (name.id = cast_info.person_id)","create materialized view if not exists mv81 as select aka_name.name AS name, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS company_name_id_3, movie_companies.movie_id AS movie_id, role_type.id AS role_type_id_5, role_type.role AS role, title.title AS title
 from name,role_type,movie_companies,title,company_name,aka_name,cast_info
 where (name.id = aka_name.person_id) And (cast_info.role_id = role_type.id) And (role_type.role = 'writer') And (cast_info.movie_id = movie_companies.movie_id) And (movie_companies.company_id = company_name.id) And (title.id = cast_info.movie_id) And (company_name.country_code = '[us]') And (aka_name.person_id = name.id) And (name.id = cast_info.person_id)"
82,"select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, cast_info.role_id AS role_id, role_type.role AS role
 from role_type,cast_info
 where (cast_info.role_id = role_type.id) And (role_type.role = 'costume designer')","create materialized view if not exists mv82 as select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, cast_info.role_id AS role_id, role_type.role AS role
 from role_type,cast_info
 where (cast_info.role_id = role_type.id) And (role_type.role = 'costume designer')"
83,"select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, role_type.role AS role
 from role_type,movie_companies,company_name,cast_info
 where (cast_info.role_id = role_type.id) And (role_type.role = 'costume designer') And (cast_info.movie_id = movie_companies.movie_id) And (movie_companies.company_id = company_name.id) And (company_name.country_code = '[us]')","create materialized view if not exists mv83 as select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, role_type.role AS role
 from role_type,movie_companies,company_name,cast_info
 where (cast_info.role_id = role_type.id) And (role_type.role = 'costume designer') And (cast_info.movie_id = movie_companies.movie_id) And (movie_companies.company_id = company_name.id) And (company_name.country_code = '[us]')"
84,"select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, role_type.role AS role
 from name,role_type,movie_companies,company_name,cast_info
 where (name.id = cast_info.person_id) And (cast_info.role_id = role_type.id) And (role_type.role = 'costume designer') And (cast_info.movie_id = movie_companies.movie_id) And (movie_companies.company_id = company_name.id) And (company_name.country_code = '[us]')","create materialized view if not exists mv84 as select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, role_type.role AS role
 from name,role_type,movie_companies,company_name,cast_info
 where (name.id = cast_info.person_id) And (cast_info.role_id = role_type.id) And (role_type.role = 'costume designer') And (cast_info.movie_id = movie_companies.movie_id) And (movie_companies.company_id = company_name.id) And (company_name.country_code = '[us]')"
85,"select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, role_type.role AS role, title.title AS title
 from name,role_type,movie_companies,title,company_name,cast_info
 where (name.id = cast_info.person_id) And (cast_info.role_id = role_type.id) And (role_type.role = 'costume designer') And (cast_info.movie_id = movie_companies.movie_id) And (movie_companies.company_id = company_name.id) And (title.id = cast_info.movie_id) And (company_name.country_code = '[us]')","create materialized view if not exists mv85 as select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, role_type.role AS role, title.title AS title
 from name,role_type,movie_companies,title,company_name,cast_info
 where (name.id = cast_info.person_id) And (cast_info.role_id = role_type.id) And (role_type.role = 'costume designer') And (cast_info.movie_id = movie_companies.movie_id) And (movie_companies.company_id = company_name.id) And (title.id = cast_info.movie_id) And (company_name.country_code = '[us]')"
86,"select aka_name.name AS name, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS company_name_id_3, movie_companies.movie_id AS movie_id, role_type.id AS role_type_id_5, role_type.role AS role, title.title AS title
 from name,role_type,movie_companies,title,company_name,aka_name,cast_info
 where (name.id = aka_name.person_id) And (cast_info.role_id = role_type.id) And (role_type.role = 'costume designer') And (cast_info.movie_id = movie_companies.movie_id) And (movie_companies.company_id = company_name.id) And (title.id = cast_info.movie_id) And (company_name.country_code = '[us]') And (aka_name.person_id = name.id) And (name.id = cast_info.person_id)","create materialized view if not exists mv86 as select aka_name.name AS name, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS company_name_id_3, movie_companies.movie_id AS movie_id, role_type.id AS role_type_id_5, role_type.role AS role, title.title AS title
 from name,role_type,movie_companies,title,company_name,aka_name,cast_info
 where (name.id = aka_name.person_id) And (cast_info.role_id = role_type.id) And (role_type.role = 'costume designer') And (cast_info.movie_id = movie_companies.movie_id) And (movie_companies.company_id = company_name.id) And (title.id = cast_info.movie_id) And (company_name.country_code = '[us]') And (aka_name.person_id = name.id) And (name.id = cast_info.person_id)"
87,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, role_type.role AS role
 from role_type,cast_info
 where (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)'))","create materialized view if not exists mv87 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, role_type.role AS role
 from role_type,cast_info
 where (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)'))"
88,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, name.gender AS gender, name.name AS name, role_type.role AS role
 from role_type,cast_info,name
 where (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (name.id = cast_info.person_id)","create materialized view if not exists mv88 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, name.gender AS gender, name.name AS name, role_type.role AS role
 from role_type,cast_info,name
 where (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (name.id = cast_info.person_id)"
89,"select aka_name.name AS aka_name_name_0, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, name.gender AS gender, name.name AS name_name_7, role_type.role AS role
 from role_type,aka_name,cast_info,name
 where (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (aka_name.person_id = name.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (name.id = cast_info.person_id)","create materialized view if not exists mv89 as select aka_name.name AS aka_name_name_0, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, name.gender AS gender, name.name AS name_name_7, role_type.role AS role
 from role_type,aka_name,cast_info,name
 where (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (aka_name.person_id = name.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (name.id = cast_info.person_id)"
90,"select aka_name.name AS aka_name_name_0, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_3, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, movie_companies.company_id AS company_id, movie_companies.note AS movie_companies_note_7, name.gender AS gender, name.name AS name_name_9, role_type.role AS role
 from name,role_type,movie_companies,aka_name,cast_info
 where (name.id = cast_info.person_id) And (aka_name.person_id = name.id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (movie_companies.movie_id = cast_info.movie_id) And (movie_companies.note IS NOT NULL)  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)'))","create materialized view if not exists mv90 as select aka_name.name AS aka_name_name_0, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_3, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, movie_companies.company_id AS company_id, movie_companies.note AS movie_companies_note_7, name.gender AS gender, name.name AS name_name_9, role_type.role AS role
 from name,role_type,movie_companies,aka_name,cast_info
 where (name.id = cast_info.person_id) And (aka_name.person_id = name.id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (movie_companies.movie_id = cast_info.movie_id) And (movie_companies.note IS NOT NULL)  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)'))"
91,"select aka_name.name AS aka_name_name_0, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_3, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, movie_companies.note AS movie_companies_note_8, name.gender AS gender, name.name AS name_name_10, role_type.role AS role
 from name,role_type,movie_companies,company_name,aka_name,cast_info
 where (name.id = cast_info.person_id) And (aka_name.person_id = name.id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (movie_companies.movie_id = cast_info.movie_id) And (movie_companies.note IS NOT NULL)  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (company_name.id = movie_companies.company_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)'))","create materialized view if not exists mv91 as select aka_name.name AS aka_name_name_0, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_3, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, movie_companies.note AS movie_companies_note_8, name.gender AS gender, name.name AS name_name_10, role_type.role AS role
 from name,role_type,movie_companies,company_name,aka_name,cast_info
 where (name.id = cast_info.person_id) And (aka_name.person_id = name.id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (movie_companies.movie_id = cast_info.movie_id) And (movie_companies.note IS NOT NULL)  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (company_name.id = movie_companies.company_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)'))"
92,"select aka_name.name AS aka_name_name_0, cast_info.note AS cast_info_note_1, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, movie_companies.movie_id AS movie_id, movie_companies.note AS movie_companies_note_6, name.gender AS gender, name.name AS name_name_8, role_type.role AS role, title.id AS id, title.production_year AS production_year, title.title AS title
 from name,role_type,movie_companies,title,company_name,aka_name,cast_info
 where (name.id = aka_name.person_id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (movie_companies.movie_id = cast_info.movie_id) And (movie_companies.note IS NOT NULL)  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (movie_companies.company_id = company_name.id) And (title.id = cast_info.movie_id) And (company_name.id = movie_companies.company_id) And (aka_name.person_id = name.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (name.id = cast_info.person_id)","create materialized view if not exists mv92 as select aka_name.name AS aka_name_name_0, cast_info.note AS cast_info_note_1, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, movie_companies.movie_id AS movie_id, movie_companies.note AS movie_companies_note_6, name.gender AS gender, name.name AS name_name_8, role_type.role AS role, title.id AS id, title.production_year AS production_year, title.title AS title
 from name,role_type,movie_companies,title,company_name,aka_name,cast_info
 where (name.id = aka_name.person_id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (movie_companies.movie_id = cast_info.movie_id) And (movie_companies.note IS NOT NULL)  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (movie_companies.company_id = company_name.id) And (title.id = cast_info.movie_id) And (company_name.id = movie_companies.company_id) And (aka_name.person_id = name.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (name.id = cast_info.person_id)"
93,"select aka_name.name AS aka_name_name_0, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_3, cast_info.role_id AS role_id, char_name.id AS char_name_id_5, char_name.name AS char_name_name_6, company_name.country_code AS country_code, company_name.id AS company_name_id_8, movie_companies.note AS movie_companies_note_9, name.gender AS gender, name.name AS name_name_11, role_type.role AS role, title.id AS title_id_13, title.production_year AS production_year, title.title AS title
 from char_name,name,role_type,movie_companies,title,company_name,aka_name,cast_info
 where (char_name.id = cast_info.person_role_id) And (name.id = cast_info.person_id) And (aka_name.person_id = name.id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (movie_companies.movie_id = cast_info.movie_id) And (movie_companies.note IS NOT NULL)  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (company_name.id = movie_companies.company_id) And (title.id = cast_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)'))","create materialized view if not exists mv93 as select aka_name.name AS aka_name_name_0, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_3, cast_info.role_id AS role_id, char_name.id AS char_name_id_5, char_name.name AS char_name_name_6, company_name.country_code AS country_code, company_name.id AS company_name_id_8, movie_companies.note AS movie_companies_note_9, name.gender AS gender, name.name AS name_name_11, role_type.role AS role, title.id AS title_id_13, title.production_year AS production_year, title.title AS title
 from char_name,name,role_type,movie_companies,title,company_name,aka_name,cast_info
 where (char_name.id = cast_info.person_role_id) And (name.id = cast_info.person_id) And (aka_name.person_id = name.id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (movie_companies.movie_id = cast_info.movie_id) And (movie_companies.note IS NOT NULL)  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (company_name.id = movie_companies.company_id) And (title.id = cast_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)'))"
94,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, role_type.role AS role
 from role_type,cast_info
 where (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (cast_info.note = '(voice)')","create materialized view if not exists mv94 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, role_type.role AS role
 from role_type,cast_info
 where (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (cast_info.note = '(voice)')"
95,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, name.gender AS gender, name.name AS name, role_type.role AS role
 from role_type,cast_info,name
 where (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (cast_info.note = '(voice)') And (name.id = cast_info.person_id)","create materialized view if not exists mv95 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, name.gender AS gender, name.name AS name, role_type.role AS role
 from role_type,cast_info,name
 where (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (cast_info.note = '(voice)') And (name.id = cast_info.person_id)"
96,"select aka_name.name AS aka_name_name_0, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, name.gender AS gender, name.name AS name_name_7, role_type.role AS role
 from role_type,aka_name,cast_info,name
 where (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (aka_name.person_id = name.id) And (cast_info.note = '(voice)') And (name.id = cast_info.person_id)","create materialized view if not exists mv96 as select aka_name.name AS aka_name_name_0, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, name.gender AS gender, name.name AS name_name_7, role_type.role AS role
 from role_type,aka_name,cast_info,name
 where (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (aka_name.person_id = name.id) And (cast_info.note = '(voice)') And (name.id = cast_info.person_id)"
97,"select aka_name.name AS aka_name_name_0, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, name.gender AS gender, name.name AS name_name_5, role_type.role AS role, title.id AS id, title.production_year AS production_year, title.title AS title
 from name,role_type,title,aka_name,cast_info
 where (name.id = aka_name.person_id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (title.id = cast_info.movie_id) And (aka_name.person_id = name.id) And (cast_info.note = '(voice)') And (name.id = cast_info.person_id)","create materialized view if not exists mv97 as select aka_name.name AS aka_name_name_0, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, name.gender AS gender, name.name AS name_name_5, role_type.role AS role, title.id AS id, title.production_year AS production_year, title.title AS title
 from name,role_type,title,aka_name,cast_info
 where (name.id = aka_name.person_id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (title.id = cast_info.movie_id) And (aka_name.person_id = name.id) And (cast_info.note = '(voice)') And (name.id = cast_info.person_id)"
98,"select aka_name.name AS aka_name_name_0, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_3, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, movie_companies.company_id AS company_id, movie_companies.note AS movie_companies_note_7, name.gender AS gender, name.name AS name_name_9, role_type.role AS role, title.id AS id, title.production_year AS production_year, title.title AS title
 from name,role_type,movie_companies,title,aka_name,cast_info
 where (name.id = cast_info.person_id) And (aka_name.person_id = name.id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (movie_companies.movie_id = cast_info.movie_id) And (movie_companies.note like '%(200%)%')  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (title.id = cast_info.movie_id) And (cast_info.note = '(voice)')","create materialized view if not exists mv98 as select aka_name.name AS aka_name_name_0, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_3, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, movie_companies.company_id AS company_id, movie_companies.note AS movie_companies_note_7, name.gender AS gender, name.name AS name_name_9, role_type.role AS role, title.id AS id, title.production_year AS production_year, title.title AS title
 from name,role_type,movie_companies,title,aka_name,cast_info
 where (name.id = cast_info.person_id) And (aka_name.person_id = name.id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (movie_companies.movie_id = cast_info.movie_id) And (movie_companies.note like '%(200%)%')  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (title.id = cast_info.movie_id) And (cast_info.note = '(voice)')"
99,"select aka_name.name AS aka_name_name_0, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_3, cast_info.role_id AS role_id, char_name.id AS char_name_id_5, char_name.name AS char_name_name_6, movie_companies.company_id AS company_id, movie_companies.note AS movie_companies_note_8, name.gender AS gender, name.name AS name_name_10, role_type.role AS role, title.id AS title_id_12, title.production_year AS production_year, title.title AS title
 from char_name,name,role_type,movie_companies,title,aka_name,cast_info
 where (char_name.id = cast_info.person_role_id) And (name.id = cast_info.person_id) And (aka_name.person_id = name.id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (movie_companies.movie_id = cast_info.movie_id) And (movie_companies.note like '%(200%)%')  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (title.id = cast_info.movie_id) And (cast_info.note = '(voice)')","create materialized view if not exists mv99 as select aka_name.name AS aka_name_name_0, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_3, cast_info.role_id AS role_id, char_name.id AS char_name_id_5, char_name.name AS char_name_name_6, movie_companies.company_id AS company_id, movie_companies.note AS movie_companies_note_8, name.gender AS gender, name.name AS name_name_10, role_type.role AS role, title.id AS title_id_12, title.production_year AS production_year, title.title AS title
 from char_name,name,role_type,movie_companies,title,aka_name,cast_info
 where (char_name.id = cast_info.person_role_id) And (name.id = cast_info.person_id) And (aka_name.person_id = name.id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (movie_companies.movie_id = cast_info.movie_id) And (movie_companies.note like '%(200%)%')  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (title.id = cast_info.movie_id) And (cast_info.note = '(voice)')"
100,"select aka_name.name AS aka_name_name_0, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_3, cast_info.role_id AS role_id, char_name.id AS char_name_id_5, char_name.name AS char_name_name_6, company_name.country_code AS country_code, company_name.id AS company_name_id_8, movie_companies.note AS movie_companies_note_9, name.gender AS gender, name.name AS name_name_11, role_type.role AS role, title.id AS title_id_13, title.production_year AS production_year, title.title AS title
 from char_name,name,role_type,movie_companies,title,company_name,aka_name,cast_info
 where (char_name.id = cast_info.person_role_id) And (name.id = cast_info.person_id) And (aka_name.person_id = name.id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (movie_companies.movie_id = cast_info.movie_id) And (movie_companies.note like '%(200%)%')  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (company_name.id = movie_companies.company_id) And (title.id = cast_info.movie_id) And (cast_info.note = '(voice)')","create materialized view if not exists mv100 as select aka_name.name AS aka_name_name_0, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_3, cast_info.role_id AS role_id, char_name.id AS char_name_id_5, char_name.name AS char_name_name_6, company_name.country_code AS country_code, company_name.id AS company_name_id_8, movie_companies.note AS movie_companies_note_9, name.gender AS gender, name.name AS name_name_11, role_type.role AS role, title.id AS title_id_13, title.production_year AS production_year, title.title AS title
 from char_name,name,role_type,movie_companies,title,company_name,aka_name,cast_info
 where (char_name.id = cast_info.person_role_id) And (name.id = cast_info.person_id) And (aka_name.person_id = name.id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (movie_companies.movie_id = cast_info.movie_id) And (movie_companies.note like '%(200%)%')  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (company_name.id = movie_companies.company_id) And (title.id = cast_info.movie_id) And (cast_info.note = '(voice)')"
101,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, name.gender AS gender, name.name AS name_name_7, role_type.role AS role
 from role_type,char_name,cast_info,name
 where (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (char_name.id = cast_info.person_role_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (name.id = cast_info.person_id)","create materialized view if not exists mv101 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, name.gender AS gender, name.name AS name_name_7, role_type.role AS role
 from role_type,char_name,cast_info,name
 where (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (char_name.id = cast_info.person_role_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (name.id = cast_info.person_id)"
102,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, name.gender AS gender, name.name AS name_name_7, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from char_name,name,role_type,title,cast_info
 where (char_name.id = cast_info.person_role_id) And (name.id = cast_info.person_id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (title.id = cast_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)'))","create materialized view if not exists mv102 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, name.gender AS gender, name.name AS name_name_7, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from char_name,name,role_type,title,cast_info
 where (char_name.id = cast_info.person_role_id) And (name.id = cast_info.person_id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (title.id = cast_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)'))"
103,"select aka_name.name AS aka_name_name_0, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.role_id AS role_id, char_name.id AS id, char_name.name AS char_name_name_6, name.gender AS gender, name.name AS name_name_8, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from char_name,name,role_type,title,aka_name,cast_info
 where (char_name.id = cast_info.person_role_id) And (name.id = cast_info.person_id) And (aka_name.person_id = name.id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (title.id = cast_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)'))","create materialized view if not exists mv103 as select aka_name.name AS aka_name_name_0, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.role_id AS role_id, char_name.id AS id, char_name.name AS char_name_name_6, name.gender AS gender, name.name AS name_name_8, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from char_name,name,role_type,title,aka_name,cast_info
 where (char_name.id = cast_info.person_role_id) And (name.id = cast_info.person_id) And (aka_name.person_id = name.id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (title.id = cast_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)'))"
104,"select aka_name.name AS aka_name_name_0, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.role_id AS role_id, char_name.id AS char_name_id_5, char_name.name AS char_name_name_6, movie_companies.company_id AS company_id, name.gender AS gender, name.name AS name_name_9, role_type.role AS role, title.id AS title_id_11, title.title AS title
 from char_name,name,role_type,movie_companies,title,aka_name,cast_info
 where (char_name.id = cast_info.person_role_id) And (name.id = cast_info.person_id) And (aka_name.person_id = name.id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (movie_companies.movie_id = cast_info.movie_id) And (title.id = cast_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)'))","create materialized view if not exists mv104 as select aka_name.name AS aka_name_name_0, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.role_id AS role_id, char_name.id AS char_name_id_5, char_name.name AS char_name_name_6, movie_companies.company_id AS company_id, name.gender AS gender, name.name AS name_name_9, role_type.role AS role, title.id AS title_id_11, title.title AS title
 from char_name,name,role_type,movie_companies,title,aka_name,cast_info
 where (char_name.id = cast_info.person_role_id) And (name.id = cast_info.person_id) And (aka_name.person_id = name.id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (movie_companies.movie_id = cast_info.movie_id) And (title.id = cast_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)'))"
105,"select aka_name.name AS aka_name_name_0, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.role_id AS role_id, char_name.id AS char_name_id_5, char_name.name AS char_name_name_6, company_name.country_code AS country_code, company_name.id AS company_name_id_8, name.gender AS gender, name.name AS name_name_10, role_type.role AS role, title.id AS title_id_12, title.title AS title
 from char_name,name,role_type,movie_companies,title,company_name,aka_name,cast_info
 where (char_name.id = cast_info.person_role_id) And (name.id = cast_info.person_id) And (aka_name.person_id = name.id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (movie_companies.movie_id = cast_info.movie_id) And (company_name.id = movie_companies.company_id) And (title.id = cast_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)'))","create materialized view if not exists mv105 as select aka_name.name AS aka_name_name_0, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.role_id AS role_id, char_name.id AS char_name_id_5, char_name.name AS char_name_name_6, company_name.country_code AS country_code, company_name.id AS company_name_id_8, name.gender AS gender, name.name AS name_name_10, role_type.role AS role, title.id AS title_id_12, title.title AS title
 from char_name,name,role_type,movie_companies,title,company_name,aka_name,cast_info
 where (char_name.id = cast_info.person_role_id) And (name.id = cast_info.person_id) And (aka_name.person_id = name.id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (movie_companies.movie_id = cast_info.movie_id) And (company_name.id = movie_companies.company_id) And (title.id = cast_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)'))"
106,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, movie_companies.company_id AS company_id, name.gender AS gender, name.name AS name_name_8, role_type.role AS role
 from char_name,name,role_type,movie_companies,cast_info
 where (char_name.id = cast_info.person_role_id) And (name.id = cast_info.person_id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (movie_companies.movie_id = cast_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)'))","create materialized view if not exists mv106 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, movie_companies.company_id AS company_id, name.gender AS gender, name.name AS name_name_8, role_type.role AS role
 from char_name,name,role_type,movie_companies,cast_info
 where (char_name.id = cast_info.person_role_id) And (name.id = cast_info.person_id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (movie_companies.movie_id = cast_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)'))"
107,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, company_name.country_code AS country_code, company_name.id AS id, name.gender AS gender, name.name AS name_name_9, role_type.role AS role
 from char_name,name,role_type,movie_companies,company_name,cast_info
 where (char_name.id = cast_info.person_role_id) And (name.id = cast_info.person_id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (movie_companies.movie_id = cast_info.movie_id) And (company_name.id = movie_companies.company_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)'))","create materialized view if not exists mv107 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, company_name.country_code AS country_code, company_name.id AS id, name.gender AS gender, name.name AS name_name_9, role_type.role AS role
 from char_name,name,role_type,movie_companies,company_name,cast_info
 where (char_name.id = cast_info.person_role_id) And (name.id = cast_info.person_id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (movie_companies.movie_id = cast_info.movie_id) And (company_name.id = movie_companies.company_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)'))"
108,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, company_name.country_code AS country_code, company_name.id AS id, name.gender AS gender, name.name AS name_name_9, role_type.role AS role, title.title AS title
 from char_name,name,role_type,movie_companies,title,company_name,cast_info
 where (char_name.id = cast_info.person_role_id) And (name.id = cast_info.person_id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (title.id = movie_companies.movie_id) And (movie_companies.movie_id = cast_info.movie_id) And (company_name.id = movie_companies.company_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)'))","create materialized view if not exists mv108 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, company_name.country_code AS country_code, company_name.id AS id, name.gender AS gender, name.name AS name_name_9, role_type.role AS role, title.title AS title
 from char_name,name,role_type,movie_companies,title,company_name,cast_info
 where (char_name.id = cast_info.person_role_id) And (name.id = cast_info.person_id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (title.id = movie_companies.movie_id) And (movie_companies.movie_id = cast_info.movie_id) And (company_name.id = movie_companies.company_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)'))"
109,"select company_name.country_code AS country_code, company_name.id AS id, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id
 from movie_companies,company_name
 where (movie_companies.company_id = company_name.id) And (company_name.country_code = '[ru]')","create materialized view if not exists mv109 as select company_name.country_code AS country_code, company_name.id AS id, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id
 from movie_companies,company_name
 where (movie_companies.company_id = company_name.id) And (company_name.country_code = '[ru]')"
110,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, role_type.role AS role
 from role_type,cast_info
 where (cast_info.role_id = role_type.id) And (role_type.role = 'actor') And (cast_info.note like '%(voice)%')  And  (cast_info.note like '%(uncredited)%')","create materialized view if not exists mv110 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, role_type.role AS role
 from role_type,cast_info
 where (cast_info.role_id = role_type.id) And (role_type.role = 'actor') And (cast_info.note like '%(voice)%')  And  (cast_info.note like '%(uncredited)%')"
111,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from role_type,title,cast_info
 where (cast_info.role_id = role_type.id) And (role_type.role = 'actor') And (title.id = cast_info.movie_id) And (cast_info.note like '%(voice)%')  And  (cast_info.note like '%(uncredited)%')","create materialized view if not exists mv111 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from role_type,title,cast_info
 where (cast_info.role_id = role_type.id) And (role_type.role = 'actor') And (title.id = cast_info.movie_id) And (cast_info.note like '%(voice)%')  And  (cast_info.note like '%(uncredited)%')"
112,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from role_type,title,char_name,cast_info
 where (cast_info.role_id = role_type.id) And (role_type.role = 'actor') And (title.id = cast_info.movie_id) And (char_name.id = cast_info.person_role_id) And (cast_info.note like '%(voice)%')  And  (cast_info.note like '%(uncredited)%')","create materialized view if not exists mv112 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from role_type,title,char_name,cast_info
 where (cast_info.role_id = role_type.id) And (role_type.role = 'actor') And (title.id = cast_info.movie_id) And (char_name.id = cast_info.person_role_id) And (cast_info.note like '%(voice)%')  And  (cast_info.note like '%(uncredited)%')"
113,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, company_name.country_code AS country_code, company_name.id AS id, movie_companies.company_type_id AS company_type_id, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from char_name,role_type,movie_companies,title,company_name,cast_info
 where (char_name.id = cast_info.person_role_id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actor') And (movie_companies.movie_id = title.id) And (movie_companies.company_id = company_name.id) And (title.id = movie_companies.movie_id) And (company_name.country_code = '[ru]') And (cast_info.note like '%(voice)%')  And  (cast_info.note like '%(uncredited)%') And (title.id = cast_info.movie_id)","create materialized view if not exists mv113 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, company_name.country_code AS country_code, company_name.id AS id, movie_companies.company_type_id AS company_type_id, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from char_name,role_type,movie_companies,title,company_name,cast_info
 where (char_name.id = cast_info.person_role_id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actor') And (movie_companies.movie_id = title.id) And (movie_companies.company_id = company_name.id) And (title.id = movie_companies.movie_id) And (company_name.country_code = '[ru]') And (cast_info.note like '%(voice)%')  And  (cast_info.note like '%(uncredited)%') And (title.id = cast_info.movie_id)"
114,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, company_name.country_code AS country_code, company_name.id AS company_name_id_6, company_type.id AS company_type_id_7, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from char_name,role_type,movie_companies,title,company_type,company_name,cast_info
 where (char_name.id = cast_info.person_role_id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actor') And (movie_companies.movie_id = title.id) And (movie_companies.company_id = company_name.id) And (company_type.id = movie_companies.company_type_id) And (title.id = movie_companies.movie_id) And (company_name.country_code = '[ru]') And (cast_info.note like '%(voice)%')  And  (cast_info.note like '%(uncredited)%') And (title.id = cast_info.movie_id)","create materialized view if not exists mv114 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, company_name.country_code AS country_code, company_name.id AS company_name_id_6, company_type.id AS company_type_id_7, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from char_name,role_type,movie_companies,title,company_type,company_name,cast_info
 where (char_name.id = cast_info.person_role_id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actor') And (movie_companies.movie_id = title.id) And (movie_companies.company_id = company_name.id) And (company_type.id = movie_companies.company_type_id) And (title.id = movie_companies.movie_id) And (company_name.country_code = '[ru]') And (cast_info.note like '%(voice)%')  And  (cast_info.note like '%(uncredited)%') And (title.id = cast_info.movie_id)"
115,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, role_type.role AS role
 from role_type,cast_info
 where (cast_info.role_id = role_type.id) And (role_type.role = 'actor') And (cast_info.note like '%(producer)%')","create materialized view if not exists mv115 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, role_type.role AS role
 from role_type,cast_info
 where (cast_info.role_id = role_type.id) And (role_type.role = 'actor') And (cast_info.note like '%(producer)%')"
116,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, movie_companies.company_type_id AS company_type_id, role_type.role AS role
 from role_type,movie_companies,company_name,cast_info
 where (cast_info.role_id = role_type.id) And (role_type.role = 'actor') And (cast_info.movie_id = movie_companies.movie_id) And (movie_companies.company_id = company_name.id) And (company_name.country_code = '[ru]') And (cast_info.note like '%(producer)%')","create materialized view if not exists mv116 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, movie_companies.company_type_id AS company_type_id, role_type.role AS role
 from role_type,movie_companies,company_name,cast_info
 where (cast_info.role_id = role_type.id) And (role_type.role = 'actor') And (cast_info.movie_id = movie_companies.movie_id) And (movie_companies.company_id = company_name.id) And (company_name.country_code = '[ru]') And (cast_info.note like '%(producer)%')"
117,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, movie_companies.company_type_id AS company_type_id, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from role_type,movie_companies,title,company_name,cast_info
 where (cast_info.role_id = role_type.id) And (role_type.role = 'actor') And (title.id = movie_companies.movie_id) And (cast_info.movie_id = movie_companies.movie_id) And (movie_companies.company_id = company_name.id) And (company_name.country_code = '[ru]') And (cast_info.note like '%(producer)%')","create materialized view if not exists mv117 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS id, movie_companies.company_type_id AS company_type_id, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from role_type,movie_companies,title,company_name,cast_info
 where (cast_info.role_id = role_type.id) And (role_type.role = 'actor') And (title.id = movie_companies.movie_id) And (cast_info.movie_id = movie_companies.movie_id) And (movie_companies.company_id = company_name.id) And (company_name.country_code = '[ru]') And (cast_info.note like '%(producer)%')"
118,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, company_name.country_code AS country_code, company_name.id AS id, movie_companies.company_type_id AS company_type_id, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from char_name,role_type,movie_companies,title,company_name,cast_info
 where (char_name.id = cast_info.person_role_id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actor') And (movie_companies.movie_id = title.id) And (movie_companies.company_id = company_name.id) And (title.id = movie_companies.movie_id) And (company_name.country_code = '[ru]') And (cast_info.movie_id = movie_companies.movie_id) And (cast_info.note like '%(producer)%')","create materialized view if not exists mv118 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, company_name.country_code AS country_code, company_name.id AS id, movie_companies.company_type_id AS company_type_id, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from char_name,role_type,movie_companies,title,company_name,cast_info
 where (char_name.id = cast_info.person_role_id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actor') And (movie_companies.movie_id = title.id) And (movie_companies.company_id = company_name.id) And (title.id = movie_companies.movie_id) And (company_name.country_code = '[ru]') And (cast_info.movie_id = movie_companies.movie_id) And (cast_info.note like '%(producer)%')"
119,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, company_name.country_code AS country_code, company_name.id AS company_name_id_6, company_type.id AS company_type_id_7, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from char_name,role_type,movie_companies,title,company_type,company_name,cast_info
 where (char_name.id = cast_info.person_role_id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actor') And (movie_companies.movie_id = title.id) And (movie_companies.company_id = company_name.id) And (company_type.id = movie_companies.company_type_id) And (title.id = movie_companies.movie_id) And (company_name.country_code = '[ru]') And (cast_info.movie_id = movie_companies.movie_id) And (cast_info.note like '%(producer)%')","create materialized view if not exists mv119 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, company_name.country_code AS country_code, company_name.id AS company_name_id_6, company_type.id AS company_type_id_7, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from char_name,role_type,movie_companies,title,company_type,company_name,cast_info
 where (char_name.id = cast_info.person_role_id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actor') And (movie_companies.movie_id = title.id) And (movie_companies.company_id = company_name.id) And (company_type.id = movie_companies.company_type_id) And (title.id = movie_companies.movie_id) And (company_name.country_code = '[ru]') And (cast_info.movie_id = movie_companies.movie_id) And (cast_info.note like '%(producer)%')"
120,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id
 from role_type,cast_info
 where (cast_info.role_id = role_type.id) And (cast_info.note like '%(producer)%')","create materialized view if not exists mv120 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id
 from role_type,cast_info
 where (cast_info.role_id = role_type.id) And (cast_info.note like '%(producer)%')"
121,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name
 from role_type,char_name,cast_info
 where (cast_info.role_id = role_type.id) And (cast_info.person_role_id = char_name.id) And (cast_info.note like '%(producer)%')","create materialized view if not exists mv121 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name
 from role_type,char_name,cast_info
 where (cast_info.role_id = role_type.id) And (cast_info.person_role_id = char_name.id) And (cast_info.note like '%(producer)%')"
122,"select company_name.country_code AS country_code, company_name.id AS id, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
 from movie_companies,title,company_name
 where (movie_companies.movie_id = title.id) And (movie_companies.company_id = company_name.id) And (title.production_year > 1990) And (company_name.country_code = '[us]')","create materialized view if not exists mv122 as select company_name.country_code AS country_code, company_name.id AS id, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
 from movie_companies,title,company_name
 where (movie_companies.movie_id = title.id) And (movie_companies.company_id = company_name.id) And (title.production_year > 1990) And (company_name.country_code = '[us]')"
123,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.role_id AS role_id, char_name.name AS name, company_name.country_code AS country_code, company_name.id AS company_name_id_5, movie_companies.company_type_id AS company_type_id, role_type.id AS role_type_id_7, title.production_year AS production_year, title.title AS title
 from char_name,role_type,movie_companies,title,company_name,cast_info
 where (char_name.id = cast_info.person_role_id) And (cast_info.role_id = role_type.id) And (movie_companies.movie_id = title.id) And (movie_companies.company_id = company_name.id) And (cast_info.movie_id = title.id) And (title.production_year > 1990) And (company_name.country_code = '[us]') And (cast_info.person_role_id = char_name.id) And (cast_info.note like '%(producer)%')","create materialized view if not exists mv123 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.role_id AS role_id, char_name.name AS name, company_name.country_code AS country_code, company_name.id AS company_name_id_5, movie_companies.company_type_id AS company_type_id, role_type.id AS role_type_id_7, title.production_year AS production_year, title.title AS title
 from char_name,role_type,movie_companies,title,company_name,cast_info
 where (char_name.id = cast_info.person_role_id) And (cast_info.role_id = role_type.id) And (movie_companies.movie_id = title.id) And (movie_companies.company_id = company_name.id) And (cast_info.movie_id = title.id) And (title.production_year > 1990) And (company_name.country_code = '[us]') And (cast_info.person_role_id = char_name.id) And (cast_info.note like '%(producer)%')"
124,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.role_id AS role_id, char_name.name AS name, company_name.country_code AS country_code, company_name.id AS company_name_id_5, company_type.id AS company_type_id_6, role_type.id AS role_type_id_7, title.production_year AS production_year, title.title AS title
 from char_name,role_type,movie_companies,title,company_type,company_name,cast_info
 where (char_name.id = cast_info.person_role_id) And (cast_info.role_id = role_type.id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = title.id) And (movie_companies.company_id = company_name.id) And (cast_info.movie_id = title.id) And (title.production_year > 1990) And (company_name.country_code = '[us]') And (cast_info.person_role_id = char_name.id) And (cast_info.note like '%(producer)%')","create materialized view if not exists mv124 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.role_id AS role_id, char_name.name AS name, company_name.country_code AS country_code, company_name.id AS company_name_id_5, company_type.id AS company_type_id_6, role_type.id AS role_type_id_7, title.production_year AS production_year, title.title AS title
 from char_name,role_type,movie_companies,title,company_type,company_name,cast_info
 where (char_name.id = cast_info.person_role_id) And (cast_info.role_id = role_type.id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = title.id) And (movie_companies.company_id = company_name.id) And (cast_info.movie_id = title.id) And (title.production_year > 1990) And (company_name.country_code = '[us]') And (cast_info.person_role_id = char_name.id) And (cast_info.note like '%(producer)%')"
125,"select link_type.id AS id, link_type.link AS link, movie_link.movie_id AS movie_id
 from link_type,movie_link
 where (movie_link.link_type_id = link_type.id) And (link_type.link like '%follow%')","create materialized view if not exists mv125 as select link_type.id AS id, link_type.link AS link, movie_link.movie_id AS movie_id
 from link_type,movie_link
 where (movie_link.link_type_id = link_type.id) And (link_type.link like '%follow%')"
126,"select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id
 from keyword,movie_keyword
 where (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'sequel')","create materialized view if not exists mv126 as select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id
 from keyword,movie_keyword
 where (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'sequel')"
127,"select keyword.id AS keyword_id_0, keyword.keyword AS keyword, link_type.id AS link_type_id_2, link_type.link AS link, movie_keyword.movie_id AS movie_id
 from link_type,movie_keyword,keyword,movie_link
 where (movie_link.link_type_id = link_type.id) And (link_type.link like '%follow%') And (movie_keyword.movie_id = movie_link.movie_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'sequel')","create materialized view if not exists mv127 as select keyword.id AS keyword_id_0, keyword.keyword AS keyword, link_type.id AS link_type_id_2, link_type.link AS link, movie_keyword.movie_id AS movie_id
 from link_type,movie_keyword,keyword,movie_link
 where (movie_link.link_type_id = link_type.id) And (link_type.link like '%follow%') And (movie_keyword.movie_id = movie_link.movie_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'sequel')"
128,"select company_type.id AS id, company_type.kind AS kind, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note
 from movie_companies,company_type
 where (movie_companies.company_type_id = company_type.id) And (movie_companies.note IS NULL) And (company_type.kind = 'production companies')","create materialized view if not exists mv128 as select company_type.id AS id, company_type.kind AS kind, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note
 from movie_companies,company_type
 where (movie_companies.company_type_id = company_type.id) And (movie_companies.note IS NULL) And (company_type.kind = 'production companies')"
129,"select company_type.id AS company_type_id_0, company_type.kind AS kind, keyword.id AS keyword_id_2, keyword.keyword AS keyword, link_type.id AS link_type_id_4, link_type.link AS link, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note
 from link_type,keyword,movie_companies,company_type,movie_link,movie_keyword
 where (movie_link.link_type_id = link_type.id) And (link_type.link like '%follow%') And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'sequel') And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note IS NULL) And (company_type.kind = 'production companies') And (movie_keyword.movie_id = movie_link.movie_id)","create materialized view if not exists mv129 as select company_type.id AS company_type_id_0, company_type.kind AS kind, keyword.id AS keyword_id_2, keyword.keyword AS keyword, link_type.id AS link_type_id_4, link_type.link AS link, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note
 from link_type,keyword,movie_companies,company_type,movie_link,movie_keyword
 where (movie_link.link_type_id = link_type.id) And (link_type.link like '%follow%') And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'sequel') And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note IS NULL) And (company_type.kind = 'production companies') And (movie_keyword.movie_id = movie_link.movie_id)"
130,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, keyword.id AS keyword_id_5, keyword.keyword AS keyword, link_type.id AS link_type_id_7, link_type.link AS link, movie_companies.movie_id AS movie_id, movie_companies.note AS note
 from link_type,keyword,movie_companies,company_type,company_name,movie_link,movie_keyword
 where (movie_link.link_type_id = link_type.id) And (link_type.link like '%follow%') And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'sequel') And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note IS NULL) And (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (movie_keyword.movie_id = movie_link.movie_id)","create materialized view if not exists mv130 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, keyword.id AS keyword_id_5, keyword.keyword AS keyword, link_type.id AS link_type_id_7, link_type.link AS link, movie_companies.movie_id AS movie_id, movie_companies.note AS note
 from link_type,keyword,movie_companies,company_type,company_name,movie_link,movie_keyword
 where (movie_link.link_type_id = link_type.id) And (link_type.link like '%follow%') And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'sequel') And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note IS NULL) And (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (movie_keyword.movie_id = movie_link.movie_id)"
131,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, keyword.id AS keyword_id_5, keyword.keyword AS keyword, link_type.id AS link_type_id_7, link_type.link AS link, movie_companies.movie_id AS movie_id, movie_companies.note AS note, title.production_year AS production_year, title.title AS title
 from link_type,keyword,movie_companies,company_type,title,company_name,movie_link,movie_keyword
 where (movie_link.link_type_id = link_type.id) And (link_type.link like '%follow%') And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'sequel') And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note IS NULL) And (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (title.id = movie_keyword.movie_id) And (movie_link.movie_id = title.id) And (movie_keyword.movie_id = movie_link.movie_id)","create materialized view if not exists mv131 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, keyword.id AS keyword_id_5, keyword.keyword AS keyword, link_type.id AS link_type_id_7, link_type.link AS link, movie_companies.movie_id AS movie_id, movie_companies.note AS note, title.production_year AS production_year, title.title AS title
 from link_type,keyword,movie_companies,company_type,title,company_name,movie_link,movie_keyword
 where (movie_link.link_type_id = link_type.id) And (link_type.link like '%follow%') And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'sequel') And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note IS NULL) And (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (title.id = movie_keyword.movie_id) And (movie_link.movie_id = title.id) And (movie_keyword.movie_id = movie_link.movie_id)"
132,"select movie_keyword.keyword_id AS keyword_id, movie_keyword.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
 from title,movie_keyword
 where (movie_keyword.movie_id = title.id) And (title.title like '%Money%')  And  (title.production_year = 1998)","create materialized view if not exists mv132 as select movie_keyword.keyword_id AS keyword_id, movie_keyword.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
 from title,movie_keyword
 where (movie_keyword.movie_id = title.id) And (title.title like '%Money%')  And  (title.production_year = 1998)"
133,"select link_type.id AS id, link_type.link AS link, movie_link.movie_id AS movie_id
 from link_type,movie_link
 where (movie_link.link_type_id = link_type.id) And (link_type.link like '%follows%')","create materialized view if not exists mv133 as select link_type.id AS id, link_type.link AS link, movie_link.movie_id AS movie_id
 from link_type,movie_link
 where (movie_link.link_type_id = link_type.id) And (link_type.link like '%follows%')"
134,"select link_type.id AS id, link_type.link AS link, movie_keyword.keyword_id AS keyword_id, movie_keyword.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
 from movie_link,title,link_type,movie_keyword
 where (title.id = movie_link.movie_id) And (movie_link.link_type_id = link_type.id) And (movie_keyword.movie_id = title.id) And (title.title like '%Money%')  And  (title.production_year = 1998) And (link_type.link like '%follows%')","create materialized view if not exists mv134 as select link_type.id AS id, link_type.link AS link, movie_keyword.keyword_id AS keyword_id, movie_keyword.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
 from movie_link,title,link_type,movie_keyword
 where (title.id = movie_link.movie_id) And (movie_link.link_type_id = link_type.id) And (movie_keyword.movie_id = title.id) And (title.title like '%Money%')  And  (title.production_year = 1998) And (link_type.link like '%follows%')"
135,"select company_type.id AS company_type_id_0, company_type.kind AS kind, link_type.id AS link_type_id_2, link_type.link AS link, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_companies_movie_id_5, movie_companies.note AS note, movie_keyword.keyword_id AS keyword_id, movie_keyword.movie_id AS movie_keyword_movie_id_8, title.production_year AS production_year, title.title AS title
 from link_type,movie_companies,title,company_type,movie_link,movie_keyword
 where (movie_link.link_type_id = link_type.id) And (link_type.link like '%follows%') And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note IS NULL) And (title.id = movie_link.movie_id) And (movie_keyword.movie_id = title.id) And (title.title like '%Money%')  And  (title.production_year = 1998) And (company_type.kind = 'production companies')","create materialized view if not exists mv135 as select company_type.id AS company_type_id_0, company_type.kind AS kind, link_type.id AS link_type_id_2, link_type.link AS link, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_companies_movie_id_5, movie_companies.note AS note, movie_keyword.keyword_id AS keyword_id, movie_keyword.movie_id AS movie_keyword_movie_id_8, title.production_year AS production_year, title.title AS title
 from link_type,movie_companies,title,company_type,movie_link,movie_keyword
 where (movie_link.link_type_id = link_type.id) And (link_type.link like '%follows%') And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note IS NULL) And (title.id = movie_link.movie_id) And (movie_keyword.movie_id = title.id) And (title.title like '%Money%')  And  (title.production_year = 1998) And (company_type.kind = 'production companies')"
136,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, link_type.id AS link_type_id_5, link_type.link AS link, movie_companies.movie_id AS movie_companies_movie_id_7, movie_companies.note AS note, movie_keyword.keyword_id AS keyword_id, movie_keyword.movie_id AS movie_keyword_movie_id_10, title.production_year AS production_year, title.title AS title
 from link_type,movie_companies,title,company_type,company_name,movie_link,movie_keyword
 where (movie_link.link_type_id = link_type.id) And (link_type.link like '%follows%') And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note IS NULL) And (company_name.id = movie_companies.company_id) And (title.id = movie_link.movie_id) And (movie_keyword.movie_id = title.id) And (title.title like '%Money%')  And  (title.production_year = 1998) And (company_type.kind = 'production companies')","create materialized view if not exists mv136 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, link_type.id AS link_type_id_5, link_type.link AS link, movie_companies.movie_id AS movie_companies_movie_id_7, movie_companies.note AS note, movie_keyword.keyword_id AS keyword_id, movie_keyword.movie_id AS movie_keyword_movie_id_10, title.production_year AS production_year, title.title AS title
 from link_type,movie_companies,title,company_type,company_name,movie_link,movie_keyword
 where (movie_link.link_type_id = link_type.id) And (link_type.link like '%follows%') And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note IS NULL) And (company_name.id = movie_companies.company_id) And (title.id = movie_link.movie_id) And (movie_keyword.movie_id = title.id) And (title.title like '%Money%')  And  (title.production_year = 1998) And (company_type.kind = 'production companies')"
137,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, keyword.id AS keyword_id_5, keyword.keyword AS keyword, link_type.id AS link_type_id_7, link_type.link AS link, movie_companies.movie_id AS movie_companies_movie_id_9, movie_companies.note AS note, movie_keyword.movie_id AS movie_keyword_movie_id_11, title.production_year AS production_year, title.title AS title
 from link_type,keyword,movie_companies,title,company_type,company_name,movie_link,movie_keyword
 where (movie_link.link_type_id = link_type.id) And (link_type.link like '%follows%') And (keyword.id = movie_keyword.keyword_id) And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note IS NULL) And (company_name.id = movie_companies.company_id) And (title.id = movie_link.movie_id) And (movie_keyword.movie_id = title.id) And (title.title like '%Money%')  And  (title.production_year = 1998) And (company_type.kind = 'production companies')","create materialized view if not exists mv137 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, keyword.id AS keyword_id_5, keyword.keyword AS keyword, link_type.id AS link_type_id_7, link_type.link AS link, movie_companies.movie_id AS movie_companies_movie_id_9, movie_companies.note AS note, movie_keyword.movie_id AS movie_keyword_movie_id_11, title.production_year AS production_year, title.title AS title
 from link_type,keyword,movie_companies,title,company_type,company_name,movie_link,movie_keyword
 where (movie_link.link_type_id = link_type.id) And (link_type.link like '%follows%') And (keyword.id = movie_keyword.keyword_id) And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note IS NULL) And (company_name.id = movie_companies.company_id) And (title.id = movie_link.movie_id) And (movie_keyword.movie_id = title.id) And (title.title like '%Money%')  And  (title.production_year = 1998) And (company_type.kind = 'production companies')"
138,"select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id
 from keyword,movie_keyword
 where (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('sequel', 'revenge', 'based-on-novel'))","create materialized view if not exists mv138 as select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id
 from keyword,movie_keyword
 where (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('sequel', 'revenge', 'based-on-novel'))"
139,"select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
 from title,keyword,movie_keyword
 where (title.id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('sequel', 'revenge', 'based-on-novel'))","create materialized view if not exists mv139 as select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
 from title,keyword,movie_keyword
 where (title.id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('sequel', 'revenge', 'based-on-novel'))"
140,"select keyword.id AS id, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note, title.production_year AS production_year, title.title AS title
 from movie_companies,title,keyword,movie_keyword
 where (movie_companies.movie_id = title.id) And (movie_companies.note IS NOT NULL) And (title.id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('sequel', 'revenge', 'based-on-novel'))","create materialized view if not exists mv140 as select keyword.id AS id, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note, title.production_year AS production_year, title.title AS title
 from movie_companies,title,keyword,movie_keyword
 where (movie_companies.movie_id = title.id) And (movie_companies.note IS NOT NULL) And (title.id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('sequel', 'revenge', 'based-on-novel'))"
141,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, keyword.id AS keyword_id_3, keyword.keyword AS keyword, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_companies,title,company_name,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_companies.movie_id = title.id) And (movie_companies.note IS NOT NULL) And (company_name.id = movie_companies.company_id) And (keyword.keyword in ('sequel', 'revenge', 'based-on-novel'))","create materialized view if not exists mv141 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, keyword.id AS keyword_id_3, keyword.keyword AS keyword, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_companies,title,company_name,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_companies.movie_id = title.id) And (movie_companies.note IS NOT NULL) And (company_name.id = movie_companies.company_id) And (keyword.keyword in ('sequel', 'revenge', 'based-on-novel'))"
142,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, keyword.id AS keyword_id_5, keyword.keyword AS keyword, movie_companies.movie_id AS movie_id, movie_companies.note AS note, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_companies,title,company_type,company_name,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_companies.movie_id = title.id) And (movie_companies.note IS NOT NULL) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (keyword.keyword in ('sequel', 'revenge', 'based-on-novel'))","create materialized view if not exists mv142 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, keyword.id AS keyword_id_5, keyword.keyword AS keyword, movie_companies.movie_id AS movie_id, movie_companies.note AS note, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_companies,title,company_type,company_name,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_companies.movie_id = title.id) And (movie_companies.note IS NOT NULL) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (keyword.keyword in ('sequel', 'revenge', 'based-on-novel'))"
143,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, keyword.id AS keyword_id_5, keyword.keyword AS keyword, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_link.link_type_id AS link_type_id, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_companies,title,company_type,company_name,movie_link,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_companies.movie_id = title.id) And (movie_companies.note IS NOT NULL) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (title.id = movie_link.movie_id) And (keyword.keyword in ('sequel', 'revenge', 'based-on-novel'))","create materialized view if not exists mv143 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, keyword.id AS keyword_id_5, keyword.keyword AS keyword, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_link.link_type_id AS link_type_id, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_companies,title,company_type,company_name,movie_link,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_companies.movie_id = title.id) And (movie_companies.note IS NOT NULL) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (title.id = movie_link.movie_id) And (keyword.keyword in ('sequel', 'revenge', 'based-on-novel'))"
144,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, keyword.id AS keyword_id_5, keyword.keyword AS keyword, link_type.id AS link_type_id_7, movie_companies.movie_id AS movie_companies_movie_id_8, movie_companies.note AS note, movie_link.movie_id AS movie_link_movie_id_10, title.production_year AS production_year, title.title AS title
 from link_type,movie_keyword,movie_companies,title,company_type,company_name,movie_link,keyword
 where (link_type.id = movie_link.link_type_id) And (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_companies.movie_id = title.id) And (movie_companies.note IS NOT NULL) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (title.id = movie_link.movie_id) And (keyword.keyword in ('sequel', 'revenge', 'based-on-novel'))","create materialized view if not exists mv144 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, keyword.id AS keyword_id_5, keyword.keyword AS keyword, link_type.id AS link_type_id_7, movie_companies.movie_id AS movie_companies_movie_id_8, movie_companies.note AS note, movie_link.movie_id AS movie_link_movie_id_10, title.production_year AS production_year, title.title AS title
 from link_type,movie_keyword,movie_companies,title,company_type,company_name,movie_link,keyword
 where (link_type.id = movie_link.link_type_id) And (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_companies.movie_id = title.id) And (movie_companies.note IS NOT NULL) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (title.id = movie_link.movie_id) And (keyword.keyword in ('sequel', 'revenge', 'based-on-novel'))"
145,"select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id, movie_link.link_type_id AS link_type_id
 from movie_link,keyword,movie_keyword
 where (movie_keyword.movie_id = movie_link.movie_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('sequel', 'revenge', 'based-on-novel'))","create materialized view if not exists mv145 as select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id, movie_link.link_type_id AS link_type_id
 from movie_link,keyword,movie_keyword
 where (movie_keyword.movie_id = movie_link.movie_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('sequel', 'revenge', 'based-on-novel'))"
146,"select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id, movie_link.link_type_id AS link_type_id, title.production_year AS production_year, title.title AS title
 from movie_link,title,keyword,movie_keyword
 where (movie_keyword.movie_id = movie_link.movie_id) And (movie_link.movie_id = title.id) And (title.id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('sequel', 'revenge', 'based-on-novel'))","create materialized view if not exists mv146 as select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id, movie_link.link_type_id AS link_type_id, title.production_year AS production_year, title.title AS title
 from movie_link,title,keyword,movie_keyword
 where (movie_keyword.movie_id = movie_link.movie_id) And (movie_link.movie_id = title.id) And (title.id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('sequel', 'revenge', 'based-on-novel'))"
147,"select keyword.id AS keyword_id_0, keyword.keyword AS keyword, link_type.id AS link_type_id_2, movie_keyword.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
 from link_type,movie_keyword,title,movie_link,keyword
 where (link_type.id = movie_link.link_type_id) And (title.id = movie_keyword.movie_id) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('sequel', 'revenge', 'based-on-novel'))","create materialized view if not exists mv147 as select keyword.id AS keyword_id_0, keyword.keyword AS keyword, link_type.id AS link_type_id_2, movie_keyword.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
 from link_type,movie_keyword,title,movie_link,keyword
 where (link_type.id = movie_link.link_type_id) And (title.id = movie_keyword.movie_id) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('sequel', 'revenge', 'based-on-novel'))"
148,"select keyword.id AS keyword_id_0, keyword.keyword AS keyword, link_type.id AS link_type_id_2, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note, title.production_year AS production_year, title.title AS title
 from link_type,movie_keyword,movie_companies,title,movie_link,keyword
 where (link_type.id = movie_link.link_type_id) And (title.id = movie_keyword.movie_id) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.note IS NOT NULL) And (movie_link.movie_id = title.id) And (keyword.keyword in ('sequel', 'revenge', 'based-on-novel'))","create materialized view if not exists mv148 as select keyword.id AS keyword_id_0, keyword.keyword AS keyword, link_type.id AS link_type_id_2, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note, title.production_year AS production_year, title.title AS title
 from link_type,movie_keyword,movie_companies,title,movie_link,keyword
 where (link_type.id = movie_link.link_type_id) And (title.id = movie_keyword.movie_id) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.note IS NOT NULL) And (movie_link.movie_id = title.id) And (keyword.keyword in ('sequel', 'revenge', 'based-on-novel'))"
149,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, keyword.id AS keyword_id_3, keyword.keyword AS keyword, link_type.id AS link_type_id_5, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note, title.production_year AS production_year, title.title AS title
 from link_type,movie_keyword,movie_companies,title,company_name,movie_link,keyword
 where (link_type.id = movie_link.link_type_id) And (title.id = movie_keyword.movie_id) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.note IS NOT NULL) And (company_name.id = movie_companies.company_id) And (movie_link.movie_id = title.id) And (keyword.keyword in ('sequel', 'revenge', 'based-on-novel'))","create materialized view if not exists mv149 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, keyword.id AS keyword_id_3, keyword.keyword AS keyword, link_type.id AS link_type_id_5, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note, title.production_year AS production_year, title.title AS title
 from link_type,movie_keyword,movie_companies,title,company_name,movie_link,keyword
 where (link_type.id = movie_link.link_type_id) And (title.id = movie_keyword.movie_id) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.note IS NOT NULL) And (company_name.id = movie_companies.company_id) And (movie_link.movie_id = title.id) And (keyword.keyword in ('sequel', 'revenge', 'based-on-novel'))"
150,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, keyword.id AS keyword_id_5, keyword.keyword AS keyword, link_type.id AS link_type_id_7, movie_companies.movie_id AS movie_id, movie_companies.note AS note, title.production_year AS production_year, title.title AS title
 from link_type,movie_keyword,movie_companies,title,company_type,company_name,movie_link,keyword
 where (link_type.id = movie_link.link_type_id) And (title.id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.note IS NOT NULL) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (movie_link.movie_id = title.id) And (movie_keyword.movie_id = movie_link.movie_id) And (keyword.keyword in ('sequel', 'revenge', 'based-on-novel'))","create materialized view if not exists mv150 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, keyword.id AS keyword_id_5, keyword.keyword AS keyword, link_type.id AS link_type_id_7, movie_companies.movie_id AS movie_id, movie_companies.note AS note, title.production_year AS production_year, title.title AS title
 from link_type,movie_keyword,movie_companies,title,company_type,company_name,movie_link,keyword
 where (link_type.id = movie_link.link_type_id) And (title.id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.note IS NOT NULL) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (movie_link.movie_id = title.id) And (movie_keyword.movie_id = movie_link.movie_id) And (keyword.keyword in ('sequel', 'revenge', 'based-on-novel'))"
151,"select company_type.id AS id, company_type.kind AS kind, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id
 from movie_companies,company_type
 where (movie_companies.company_type_id = company_type.id) And (company_type.kind = 'production companies')","create materialized view if not exists mv151 as select company_type.id AS id, company_type.kind AS kind, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id
 from movie_companies,company_type
 where (movie_companies.company_type_id = company_type.id) And (company_type.kind = 'production companies')"
152,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info_idx.info AS movie_info_idx_info_2, movie_info_idx.movie_id AS movie_id
 from info_type,movie_info_idx
 where (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'rating') And (movie_info_idx.info > '8.0')","create materialized view if not exists mv152 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info_idx.info AS movie_info_idx_info_2, movie_info_idx.movie_id AS movie_id
 from info_type,movie_info_idx
 where (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'rating') And (movie_info_idx.info > '8.0')"
153,"select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, info_type.info AS info_type_info_3, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_6
 from movie_companies,info_type,company_type,movie_info_idx
 where (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_companies.company_type_id = company_type.id) And (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'rating') And (company_type.kind = 'production companies') And (movie_info_idx.info > '8.0')","create materialized view if not exists mv153 as select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, info_type.info AS info_type_info_3, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_6
 from movie_companies,info_type,company_type,movie_info_idx
 where (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_companies.company_type_id = company_type.id) And (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'rating') And (company_type.kind = 'production companies') And (movie_info_idx.info > '8.0')"
154,"select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, info_type.info AS info_type_info_3, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_6, title.production_year AS production_year, title.title AS title
 from movie_info_idx,movie_companies,company_type,title,info_type
 where (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info > '8.0') And (title.id = movie_companies.movie_id) And (movie_companies.company_type_id = company_type.id) And (company_type.kind = 'production companies') And (info_type.info = 'rating')","create materialized view if not exists mv154 as select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, info_type.info AS info_type_info_3, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_6, title.production_year AS production_year, title.title AS title
 from movie_info_idx,movie_companies,company_type,title,info_type
 where (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info > '8.0') And (title.id = movie_companies.movie_id) And (movie_companies.company_type_id = company_type.id) And (company_type.kind = 'production companies') And (info_type.info = 'rating')"
155,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, movie_companies.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_8, title.production_year AS production_year, title.title AS title
 from movie_info_idx,movie_companies,company_type,title,company_name,info_type
 where (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info > '8.0') And (title.id = movie_companies.movie_id) And (movie_companies.company_type_id = company_type.id) And (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (info_type.info = 'rating')","create materialized view if not exists mv155 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, movie_companies.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_8, title.production_year AS production_year, title.title AS title
 from movie_info_idx,movie_companies,company_type,title,company_name,info_type
 where (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info > '8.0') And (title.id = movie_companies.movie_id) And (movie_companies.company_type_id = company_type.id) And (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (info_type.info = 'rating')"
156,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_8, movie_info.info_type_id AS info_type_id, movie_info_idx.info AS movie_info_idx_info_10, title.production_year AS production_year, title.title AS title
 from movie_info_idx,movie_info,movie_companies,company_type,title,company_name,info_type
 where (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info > '8.0') And (title.id = movie_info.movie_id) And (movie_info.info in ('Drama', 'Horror')) And (title.id = movie_companies.movie_id) And (movie_companies.company_type_id = company_type.id) And (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (info_type.info = 'rating')","create materialized view if not exists mv156 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_8, movie_info.info_type_id AS info_type_id, movie_info_idx.info AS movie_info_idx_info_10, title.production_year AS production_year, title.title AS title
 from movie_info_idx,movie_info,movie_companies,company_type,title,company_name,info_type
 where (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info > '8.0') And (title.id = movie_info.movie_id) And (movie_info.info in ('Drama', 'Horror')) And (title.id = movie_companies.movie_id) And (movie_companies.company_type_id = company_type.id) And (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (info_type.info = 'rating')"
157,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_8, movie_info_idx.info AS movie_info_idx_info_9, title.production_year AS production_year, title.title AS title
 from movie_info_idx,movie_info,movie_companies,company_type,title,company_name,info_type
 where (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info > '8.0') And (title.id = movie_info.movie_id) And (movie_info.info in ('Drama', 'Horror')) And (info_type.id = movie_info.info_type_id) And (title.id = movie_companies.movie_id) And (movie_companies.company_type_id = company_type.id) And (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (info_type.info = 'rating')","create materialized view if not exists mv157 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_8, movie_info_idx.info AS movie_info_idx_info_9, title.production_year AS production_year, title.title AS title
 from movie_info_idx,movie_info,movie_companies,company_type,title,company_name,info_type
 where (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info > '8.0') And (title.id = movie_info.movie_id) And (movie_info.info in ('Drama', 'Horror')) And (info_type.id = movie_info.info_type_id) And (title.id = movie_companies.movie_id) And (movie_companies.company_type_id = company_type.id) And (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (info_type.info = 'rating')"
158,"select company_type.id AS id, company_type.kind AS kind, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id
 from movie_companies,company_type
 where (movie_companies.company_type_id = company_type.id) And (company_type.kind IS NOT NULL)  And  (((company_type.kind = 'production companies')) Or ((company_type.kind = 'distributors')))","create materialized view if not exists mv158 as select company_type.id AS id, company_type.kind AS kind, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id
 from movie_companies,company_type
 where (movie_companies.company_type_id = company_type.id) And (company_type.kind IS NOT NULL)  And  (((company_type.kind = 'production companies')) Or ((company_type.kind = 'distributors')))"
159,"select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, info_type.info AS info, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id
 from movie_companies,info_type,company_type,movie_info_idx
 where (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_companies.company_type_id = company_type.id) And (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'bottom 10 rank') And (company_type.kind IS NOT NULL)  And  (((company_type.kind = 'production companies')) Or ((company_type.kind = 'distributors')))","create materialized view if not exists mv159 as select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, info_type.info AS info, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id
 from movie_companies,info_type,company_type,movie_info_idx
 where (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_companies.company_type_id = company_type.id) And (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'bottom 10 rank') And (company_type.kind IS NOT NULL)  And  (((company_type.kind = 'production companies')) Or ((company_type.kind = 'distributors')))"
160,"select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, info_type.info AS info, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
 from movie_info_idx,movie_companies,company_type,title,info_type
 where (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_companies.movie_id) And (movie_companies.company_type_id = company_type.id) And (company_type.kind IS NOT NULL)  And  (((company_type.kind = 'production companies')) Or ((company_type.kind = 'distributors'))) And (movie_info_idx.movie_id = title.id) And (info_type.info = 'bottom 10 rank')","create materialized view if not exists mv160 as select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, info_type.info AS info, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
 from movie_info_idx,movie_companies,company_type,title,info_type
 where (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_companies.movie_id) And (movie_companies.company_type_id = company_type.id) And (company_type.kind IS NOT NULL)  And  (((company_type.kind = 'production companies')) Or ((company_type.kind = 'distributors'))) And (movie_info_idx.movie_id = title.id) And (info_type.info = 'bottom 10 rank')"
161,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id
 from movie_info,info_type
 where (movie_info.info_type_id = info_type.id) And (info_type.info = 'budget')","create materialized view if not exists mv161 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id
 from movie_info,info_type
 where (movie_info.info_type_id = info_type.id) And (info_type.info = 'budget')"
162,"select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, info_type.info AS info_type_info_3, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_6, movie_info.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
 from movie_info_idx,movie_info,movie_companies,company_type,title,info_type
 where (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (title.id = movie_companies.movie_id) And (movie_companies.company_type_id = company_type.id) And (company_type.kind IS NOT NULL)  And  (((company_type.kind = 'production companies')) Or ((company_type.kind = 'distributors'))) And (movie_info_idx.movie_id = title.id) And (info_type.info = 'bottom 10 rank') And (info_type.info = 'budget')","create materialized view if not exists mv162 as select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, info_type.info AS info_type_info_3, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_6, movie_info.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
 from movie_info_idx,movie_info,movie_companies,company_type,title,info_type
 where (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (title.id = movie_companies.movie_id) And (movie_companies.company_type_id = company_type.id) And (company_type.kind IS NOT NULL)  And  (((company_type.kind = 'production companies')) Or ((company_type.kind = 'distributors'))) And (movie_info_idx.movie_id = title.id) And (info_type.info = 'bottom 10 rank') And (info_type.info = 'budget')"
163,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_type.id AS company_type_id_2, company_type.kind AS kind, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_7, movie_info.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
 from movie_info_idx,movie_info,movie_companies,company_type,title,company_name,info_type
 where (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (title.id = movie_companies.movie_id) And (movie_companies.company_type_id = company_type.id) And (company_name.id = movie_companies.company_id) And (company_type.kind IS NOT NULL)  And  (((company_type.kind = 'production companies')) Or ((company_type.kind = 'distributors'))) And (movie_info_idx.movie_id = title.id) And (info_type.info = 'bottom 10 rank') And (info_type.info = 'budget')","create materialized view if not exists mv163 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_type.id AS company_type_id_2, company_type.kind AS kind, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_7, movie_info.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
 from movie_info_idx,movie_info,movie_companies,company_type,title,company_name,info_type
 where (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (title.id = movie_companies.movie_id) And (movie_companies.company_type_id = company_type.id) And (company_name.id = movie_companies.company_id) And (company_type.kind IS NOT NULL)  And  (((company_type.kind = 'production companies')) Or ((company_type.kind = 'distributors'))) And (movie_info_idx.movie_id = title.id) And (info_type.info = 'bottom 10 rank') And (info_type.info = 'budget')"
164,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id
 from movie_info,info_type
 where (info_type.id = movie_info.info_type_id) And (movie_info.info in ('Drama', 'Horror', 'Western', 'Family')) And (info_type.info = 'genres')","create materialized view if not exists mv164 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id
 from movie_info,info_type
 where (info_type.id = movie_info.info_type_id) And (movie_info.info in ('Drama', 'Horror', 'Western', 'Family')) And (info_type.info = 'genres')"
165,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info_idx.info AS movie_info_idx_info_2, movie_info_idx.movie_id AS movie_id
 from info_type,movie_info_idx
 where (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'rating') And (movie_info_idx.info > '7.0')","create materialized view if not exists mv165 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info_idx.info AS movie_info_idx_info_2, movie_info_idx.movie_id AS movie_id
 from info_type,movie_info_idx
 where (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'rating') And (movie_info_idx.info > '7.0')"
166,"select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, info_type.info AS info_type_info_3, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_6
 from movie_companies,info_type,company_type,movie_info_idx
 where (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_companies.company_type_id = company_type.id) And (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'rating') And (company_type.kind = 'production companies') And (movie_info_idx.info > '7.0')","create materialized view if not exists mv166 as select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, info_type.info AS info_type_info_3, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_6
 from movie_companies,info_type,company_type,movie_info_idx
 where (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_companies.company_type_id = company_type.id) And (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'rating') And (company_type.kind = 'production companies') And (movie_info_idx.info > '7.0')"
167,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, movie_companies.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_8
 from movie_info_idx,movie_companies,company_type,company_name,info_type
 where (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info > '7.0') And (movie_companies.company_type_id = company_type.id) And (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (info_type.info = 'rating')","create materialized view if not exists mv167 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, movie_companies.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_8
 from movie_info_idx,movie_companies,company_type,company_name,info_type
 where (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info > '7.0') And (movie_companies.company_type_id = company_type.id) And (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (info_type.info = 'rating')"
168,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, movie_companies.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_8, title.production_year AS production_year, title.title AS title
 from movie_info_idx,movie_companies,company_type,title,company_name,info_type
 where (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info > '7.0') And (title.id = movie_companies.movie_id) And (movie_companies.company_type_id = company_type.id) And (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (info_type.info = 'rating')","create materialized view if not exists mv168 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, movie_companies.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_8, title.production_year AS production_year, title.title AS title
 from movie_info_idx,movie_companies,company_type,title,company_name,info_type
 where (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info > '7.0') And (title.id = movie_companies.movie_id) And (movie_companies.company_type_id = company_type.id) And (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (info_type.info = 'rating')"
169,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_8, movie_info_idx.info AS movie_info_idx_info_9, title.production_year AS production_year, title.title AS title
 from movie_info_idx,movie_info,movie_companies,company_type,title,company_name,info_type
 where (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info > '7.0') And (movie_info.movie_id = title.id) And (info_type.id = movie_info.info_type_id) And (movie_info.info in ('Drama', 'Horror', 'Western', 'Family')) And (title.id = movie_companies.movie_id) And (movie_companies.company_type_id = company_type.id) And (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (info_type.info = 'genres') And (info_type.info = 'rating')","create materialized view if not exists mv169 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_8, movie_info_idx.info AS movie_info_idx_info_9, title.production_year AS production_year, title.title AS title
 from movie_info_idx,movie_info,movie_companies,company_type,title,company_name,info_type
 where (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info > '7.0') And (movie_info.movie_id = title.id) And (info_type.id = movie_info.info_type_id) And (movie_info.info in ('Drama', 'Horror', 'Western', 'Family')) And (title.id = movie_companies.movie_id) And (movie_companies.company_type_id = company_type.id) And (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (info_type.info = 'genres') And (info_type.info = 'rating')"
170,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info_idx.info AS movie_info_idx_info_2, movie_info_idx.movie_id AS movie_id
 from info_type,movie_info_idx
 where (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'rating')","create materialized view if not exists mv170 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info_idx.info AS movie_info_idx_info_2, movie_info_idx.movie_id AS movie_id
 from info_type,movie_info_idx
 where (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'rating')"
171,"select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, info_type.info AS info_type_info_3, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_6
 from movie_companies,info_type,company_type,movie_info_idx
 where (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_companies.company_type_id = company_type.id) And (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'rating') And (company_type.kind = 'production companies')","create materialized view if not exists mv171 as select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, info_type.info AS info_type_info_3, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_6
 from movie_companies,info_type,company_type,movie_info_idx
 where (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_companies.company_type_id = company_type.id) And (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'rating') And (company_type.kind = 'production companies')"
172,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_type.id AS company_type_id_2, company_type.kind AS kind, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, movie_companies.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_7
 from movie_info_idx,movie_companies,company_type,company_name,info_type
 where (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (movie_companies.company_type_id = company_type.id) And (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (info_type.info = 'rating')","create materialized view if not exists mv172 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_type.id AS company_type_id_2, company_type.kind AS kind, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, movie_companies.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_7
 from movie_info_idx,movie_companies,company_type,company_name,info_type
 where (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (movie_companies.company_type_id = company_type.id) And (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (info_type.info = 'rating')"
173,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_type.id AS company_type_id_2, company_type.kind AS kind, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, movie_companies.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_7, title.kind_id AS kind_id, title.title AS title
 from movie_info_idx,movie_companies,company_type,title,company_name,info_type
 where (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_companies.movie_id) And (movie_companies.company_type_id = company_type.id) And (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (info_type.info = 'rating')","create materialized view if not exists mv173 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_type.id AS company_type_id_2, company_type.kind AS kind, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, movie_companies.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_7, title.kind_id AS kind_id, title.title AS title
 from movie_info_idx,movie_companies,company_type,title,company_name,info_type
 where (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_companies.movie_id) And (movie_companies.company_type_id = company_type.id) And (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (info_type.info = 'rating')"
174,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_type.id AS company_type_id_2, company_type.kind AS company_type_kind_3, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, kind_type.id AS kind_type_id_6, kind_type.kind AS kind_type_kind_7, movie_companies.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_9, title.title AS title
 from movie_info_idx,movie_companies,company_type,title,company_name,info_type,kind_type
 where (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_companies.movie_id) And (movie_companies.company_type_id = company_type.id) And (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (kind_type.id = title.kind_id) And (info_type.info = 'rating')","create materialized view if not exists mv174 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_type.id AS company_type_id_2, company_type.kind AS company_type_kind_3, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, kind_type.id AS kind_type_id_6, kind_type.kind AS kind_type_kind_7, movie_companies.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_9, title.title AS title
 from movie_info_idx,movie_companies,company_type,title,company_name,info_type,kind_type
 where (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_companies.movie_id) And (movie_companies.company_type_id = company_type.id) And (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (kind_type.id = title.kind_id) And (info_type.info = 'rating')"
175,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id
 from movie_info,info_type
 where (movie_info.info_type_id = info_type.id) And (info_type.info = 'release dates')","create materialized view if not exists mv175 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id
 from movie_info,info_type
 where (movie_info.info_type_id = info_type.id) And (info_type.info = 'release dates')"
176,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS company_type_kind_4, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, kind_type.id AS kind_type_id_7, kind_type.kind AS kind_type_kind_8, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_10, movie_info.info_type_id AS info_type_id, movie_info_idx.info AS movie_info_idx_info_12, title.title AS title
 from movie_info_idx,movie_info,movie_companies,company_type,title,company_name,info_type,kind_type
 where (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (title.id = movie_companies.movie_id) And (movie_companies.company_type_id = company_type.id) And (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (kind_type.id = title.kind_id) And (info_type.info = 'rating') And (info_type.info = 'release dates')","create materialized view if not exists mv176 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS company_type_kind_4, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, kind_type.id AS kind_type_id_7, kind_type.kind AS kind_type_kind_8, movie_companies.movie_id AS movie_id, movie_info.info AS movie_info_info_10, movie_info.info_type_id AS info_type_id, movie_info_idx.info AS movie_info_idx_info_12, title.title AS title
 from movie_info_idx,movie_info,movie_companies,company_type,title,company_name,info_type,kind_type
 where (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (title.id = movie_companies.movie_id) And (movie_companies.company_type_id = company_type.id) And (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (kind_type.id = title.kind_id) And (info_type.info = 'rating') And (info_type.info = 'release dates')"
177,"select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, info_type.info AS info_type_info_3, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_6, title.kind_id AS kind_id, title.title AS title
 from movie_info_idx,movie_companies,company_type,title,info_type
 where (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_companies.movie_id) And (movie_companies.company_type_id = company_type.id) And (company_type.kind = 'production companies') And (info_type.info = 'rating')","create materialized view if not exists mv177 as select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, info_type.info AS info_type_info_3, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_6, title.kind_id AS kind_id, title.title AS title
 from movie_info_idx,movie_companies,company_type,title,info_type
 where (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_companies.movie_id) And (movie_companies.company_type_id = company_type.id) And (company_type.kind = 'production companies') And (info_type.info = 'rating')"
178,"select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, info_type.info AS info_type_info_3, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, movie_info.info_type_id AS info_type_id, movie_info_idx.info AS movie_info_idx_info_7, title.kind_id AS kind_id, title.title AS title
 from movie_info_idx,movie_info,movie_companies,company_type,title,info_type
 where (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (title.id = movie_companies.movie_id) And (movie_companies.company_type_id = company_type.id) And (company_type.kind = 'production companies') And (info_type.info = 'rating') And (info_type.info = 'release dates')","create materialized view if not exists mv178 as select company_type.id AS company_type_id_0, company_type.kind AS kind, info_type.id AS info_type_id_2, info_type.info AS info_type_info_3, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, movie_info.info_type_id AS info_type_id, movie_info_idx.info AS movie_info_idx_info_7, title.kind_id AS kind_id, title.title AS title
 from movie_info_idx,movie_info,movie_companies,company_type,title,info_type
 where (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (title.id = movie_companies.movie_id) And (movie_companies.company_type_id = company_type.id) And (company_type.kind = 'production companies') And (info_type.info = 'rating') And (info_type.info = 'release dates')"
179,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, movie_companies.movie_id AS movie_id, movie_info.info_type_id AS info_type_id, movie_info_idx.info AS movie_info_idx_info_9, title.kind_id AS kind_id, title.title AS title
 from movie_info_idx,movie_info,movie_companies,company_type,title,company_name,info_type
 where (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (title.id = movie_companies.movie_id) And (movie_companies.company_type_id = company_type.id) And (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (info_type.info = 'rating') And (info_type.info = 'release dates')","create materialized view if not exists mv179 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, movie_companies.movie_id AS movie_id, movie_info.info_type_id AS info_type_id, movie_info_idx.info AS movie_info_idx_info_9, title.kind_id AS kind_id, title.title AS title
 from movie_info_idx,movie_info,movie_companies,company_type,title,company_name,info_type
 where (movie_companies.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (title.id = movie_companies.movie_id) And (movie_companies.company_type_id = company_type.id) And (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (info_type.info = 'rating') And (info_type.info = 'release dates')"
180,"select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id
 from keyword,movie_keyword
 where (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence'))","create materialized view if not exists mv180 as select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id
 from keyword,movie_keyword
 where (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence'))"
181,"select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
 from title,keyword,movie_keyword
 where (title.id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence'))","create materialized view if not exists mv181 as select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
 from title,keyword,movie_keyword
 where (title.id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence'))"
182,"select keyword.id AS keyword_id_0, keyword.keyword AS keyword, kind_type.id AS kind_type_id_2, kind_type.kind AS kind, movie_keyword.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
 from kind_type,title,keyword,movie_keyword
 where (kind_type.id = title.kind_id) And (title.id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence'))","create materialized view if not exists mv182 as select keyword.id AS keyword_id_0, keyword.keyword AS keyword, kind_type.id AS kind_type_id_2, kind_type.kind AS kind, movie_keyword.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
 from kind_type,title,keyword,movie_keyword
 where (kind_type.id = title.kind_id) And (title.id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence'))"
183,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info_idx.info AS movie_info_idx_info_2, movie_info_idx.movie_id AS movie_id
 from info_type,movie_info_idx
 where (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'rating') And (movie_info_idx.info < '8.5')","create materialized view if not exists mv183 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info_idx.info AS movie_info_idx_info_2, movie_info_idx.movie_id AS movie_id
 from info_type,movie_info_idx
 where (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'rating') And (movie_info_idx.info < '8.5')"
184,"select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, kind_type.id AS kind_type_id_4, kind_type.kind AS kind, movie_info_idx.info AS movie_info_idx_info_6, movie_info_idx.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,keyword,title,info_type,kind_type
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info < '8.5') And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence')) And (kind_type.id = title.kind_id) And (info_type.info = 'rating')","create materialized view if not exists mv184 as select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, kind_type.id AS kind_type_id_4, kind_type.kind AS kind, movie_info_idx.info AS movie_info_idx_info_6, movie_info_idx.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,keyword,title,info_type,kind_type
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info < '8.5') And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence')) And (kind_type.id = title.kind_id) And (info_type.info = 'rating')"
185,"select info_type.info AS info_type_info_0, movie_info.info AS movie_info_info_1, movie_info.movie_id AS movie_id
 from movie_info,info_type
 where (info_type.id = movie_info.info_type_id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (info_type.info = 'countries')","create materialized view if not exists mv185 as select info_type.info AS info_type_info_0, movie_info.info AS movie_info_info_1, movie_info.movie_id AS movie_id
 from movie_info,info_type
 where (info_type.id = movie_info.info_type_id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (info_type.info = 'countries')"
186,"select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, kind_type.id AS kind_type_id_4, kind_type.kind AS kind, movie_info.info AS movie_info_info_6, movie_info.info_type_id AS info_type_id, movie_info.movie_id AS movie_info_movie_id_8, movie_info_idx.info AS movie_info_idx_info_9, movie_keyword.movie_id AS movie_keyword_movie_id_10, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,movie_info,keyword,title,info_type,kind_type
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info < '8.5') And (movie_info.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')) And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence')) And (kind_type.id = title.kind_id) And (info_type.info = 'countries') And (info_type.info = 'rating')","create materialized view if not exists mv186 as select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, kind_type.id AS kind_type_id_4, kind_type.kind AS kind, movie_info.info AS movie_info_info_6, movie_info.info_type_id AS info_type_id, movie_info.movie_id AS movie_info_movie_id_8, movie_info_idx.info AS movie_info_idx_info_9, movie_keyword.movie_id AS movie_keyword_movie_id_10, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,movie_info,keyword,title,info_type,kind_type
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info < '8.5') And (movie_info.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')) And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence')) And (kind_type.id = title.kind_id) And (info_type.info = 'countries') And (info_type.info = 'rating')"
187,"select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id
 from keyword,movie_keyword
 where (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('murder', 'murder-in-title'))","create materialized view if not exists mv187 as select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id
 from keyword,movie_keyword
 where (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('murder', 'murder-in-title'))"
188,"select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
 from title,keyword,movie_keyword
 where (title.id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('murder', 'murder-in-title'))","create materialized view if not exists mv188 as select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
 from title,keyword,movie_keyword
 where (title.id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('murder', 'murder-in-title'))"
189,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info_idx.info AS movie_info_idx_info_2, movie_info_idx.movie_id AS movie_id
 from info_type,movie_info_idx
 where (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'rating') And (movie_info_idx.info > '6.0')","create materialized view if not exists mv189 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info_idx.info AS movie_info_idx_info_2, movie_info_idx.movie_id AS movie_id
 from info_type,movie_info_idx
 where (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'rating') And (movie_info_idx.info > '6.0')"
190,"select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.movie_id AS movie_id, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,title,info_type,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info > '6.0') And (info_type.info = 'rating') And (keyword.keyword in ('murder', 'murder-in-title'))","create materialized view if not exists mv190 as select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.movie_id AS movie_id, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,title,info_type,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info > '6.0') And (info_type.info = 'rating') And (keyword.keyword in ('murder', 'murder-in-title'))"
191,"select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, movie_info.info AS movie_info_info_4, movie_info.info_type_id AS info_type_id, movie_info.movie_id AS movie_info_movie_id_6, movie_info_idx.info AS movie_info_idx_info_7, movie_keyword.movie_id AS movie_keyword_movie_id_8, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,movie_info,title,info_type,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info > '6.0') And (movie_info.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')) And (info_type.info = 'countries') And (info_type.info = 'rating') And (keyword.keyword in ('murder', 'murder-in-title'))","create materialized view if not exists mv191 as select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, movie_info.info AS movie_info_info_4, movie_info.info_type_id AS info_type_id, movie_info.movie_id AS movie_info_movie_id_6, movie_info_idx.info AS movie_info_idx_info_7, movie_keyword.movie_id AS movie_keyword_movie_id_8, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,movie_info,title,info_type,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info > '6.0') And (movie_info.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')) And (info_type.info = 'countries') And (info_type.info = 'rating') And (keyword.keyword in ('murder', 'murder-in-title'))"
192,"select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, kind_type.id AS kind_type_id_4, kind_type.kind AS kind, movie_info.info AS movie_info_info_6, movie_info.info_type_id AS info_type_id, movie_info.movie_id AS movie_info_movie_id_8, movie_info_idx.info AS movie_info_idx_info_9, movie_keyword.movie_id AS movie_keyword_movie_id_10, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,movie_info,title,kind_type,info_type,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info > '6.0') And (movie_info.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')) And (kind_type.id = title.kind_id) And (info_type.info = 'countries') And (info_type.info = 'rating') And (keyword.keyword in ('murder', 'murder-in-title'))","create materialized view if not exists mv192 as select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, kind_type.id AS kind_type_id_4, kind_type.kind AS kind, movie_info.info AS movie_info_info_6, movie_info.info_type_id AS info_type_id, movie_info.movie_id AS movie_info_movie_id_8, movie_info_idx.info AS movie_info_idx_info_9, movie_keyword.movie_id AS movie_keyword_movie_id_10, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,movie_info,title,kind_type,info_type,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info > '6.0') And (movie_info.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American')) And (kind_type.id = title.kind_id) And (info_type.info = 'countries') And (info_type.info = 'rating') And (keyword.keyword in ('murder', 'murder-in-title'))"
193,"select movie_info.info AS info, movie_info.info_type_id AS info_type_id, movie_info.movie_id AS movie_id, movie_info.note AS note, title.production_year AS production_year, title.title AS title
 from title,movie_info
 where (title.id = movie_info.movie_id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%')","create materialized view if not exists mv193 as select movie_info.info AS info, movie_info.info_type_id AS info_type_id, movie_info.movie_id AS movie_id, movie_info.note AS note, title.production_year AS production_year, title.title AS title
 from title,movie_info
 where (title.id = movie_info.movie_id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%')"
194,"select aka_title.movie_id AS movie_id, movie_info.info AS info, movie_info.info_type_id AS info_type_id, movie_info.note AS note, title.production_year AS production_year, title.title AS title
 from aka_title,title,movie_info
 where (aka_title.movie_id = title.id) And (title.id = movie_info.movie_id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%')","create materialized view if not exists mv194 as select aka_title.movie_id AS movie_id, movie_info.info AS info, movie_info.info_type_id AS info_type_id, movie_info.note AS note, title.production_year AS production_year, title.title AS title
 from aka_title,title,movie_info
 where (aka_title.movie_id = title.id) And (title.id = movie_info.movie_id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%')"
195,"select aka_title.movie_id AS movie_id, movie_info.info AS info, movie_info.info_type_id AS info_type_id, movie_info.note AS note, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
 from aka_title,title,movie_info,movie_keyword
 where (aka_title.movie_id = title.id) And (title.id = movie_info.movie_id) And (movie_keyword.movie_id = title.id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%')","create materialized view if not exists mv195 as select aka_title.movie_id AS movie_id, movie_info.info AS info, movie_info.info_type_id AS info_type_id, movie_info.note AS note, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
 from aka_title,title,movie_info,movie_keyword
 where (aka_title.movie_id = title.id) And (title.id = movie_info.movie_id) And (movie_keyword.movie_id = title.id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%')"
196,"select aka_title.movie_id AS movie_id, info_type.id AS id, info_type.info AS info_type_info_2, movie_info.info AS movie_info_info_3, movie_info.note AS note, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
 from movie_info,title,aka_title,info_type,movie_keyword
 where (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%') And (title.id = movie_info.movie_id) And (aka_title.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (info_type.info = 'release dates')","create materialized view if not exists mv196 as select aka_title.movie_id AS movie_id, info_type.id AS id, info_type.info AS info_type_info_2, movie_info.info AS movie_info_info_3, movie_info.note AS note, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
 from movie_info,title,aka_title,info_type,movie_keyword
 where (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%') And (title.id = movie_info.movie_id) And (aka_title.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (info_type.info = 'release dates')"
197,"select aka_title.movie_id AS movie_id, info_type.id AS id, info_type.info AS info_type_info_2, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.note AS movie_companies_note_5, movie_info.info AS movie_info_info_6, movie_info.note AS movie_info_note_7, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
 from movie_info,movie_companies,title,aka_title,info_type,movie_keyword
 where (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%') And (title.id = movie_info.movie_id) And (title.id = movie_companies.movie_id) And (movie_companies.note like '%(200%)%')  And  (movie_companies.note like '%(worldwide)%') And (aka_title.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (info_type.info = 'release dates')","create materialized view if not exists mv197 as select aka_title.movie_id AS movie_id, info_type.id AS id, info_type.info AS info_type_info_2, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.note AS movie_companies_note_5, movie_info.info AS movie_info_info_6, movie_info.note AS movie_info_note_7, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
 from movie_info,movie_companies,title,aka_title,info_type,movie_keyword
 where (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%') And (title.id = movie_info.movie_id) And (title.id = movie_companies.movie_id) And (movie_companies.note like '%(200%)%')  And  (movie_companies.note like '%(worldwide)%') And (aka_title.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (info_type.info = 'release dates')"
198,"select aka_title.movie_id AS movie_id, company_name.country_code AS country_code, company_name.id AS company_name_id_2, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, movie_companies.company_type_id AS company_type_id, movie_companies.note AS movie_companies_note_6, movie_info.info AS movie_info_info_7, movie_info.note AS movie_info_note_8, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
 from movie_info,movie_companies,title,company_name,aka_title,info_type,movie_keyword
 where (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%') And (title.id = movie_info.movie_id) And (title.id = movie_companies.movie_id) And (movie_companies.note like '%(200%)%')  And  (movie_companies.note like '%(worldwide)%') And (company_name.id = movie_companies.company_id) And (aka_title.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (info_type.info = 'release dates')","create materialized view if not exists mv198 as select aka_title.movie_id AS movie_id, company_name.country_code AS country_code, company_name.id AS company_name_id_2, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, movie_companies.company_type_id AS company_type_id, movie_companies.note AS movie_companies_note_6, movie_info.info AS movie_info_info_7, movie_info.note AS movie_info_note_8, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
 from movie_info,movie_companies,title,company_name,aka_title,info_type,movie_keyword
 where (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%') And (title.id = movie_info.movie_id) And (title.id = movie_companies.movie_id) And (movie_companies.note like '%(200%)%')  And  (movie_companies.note like '%(worldwide)%') And (company_name.id = movie_companies.company_id) And (aka_title.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (info_type.info = 'release dates')"
199,"select aka_title.movie_id AS movie_id, company_name.country_code AS country_code, company_name.id AS company_name_id_2, company_type.id AS company_type_id_3, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, movie_companies.note AS movie_companies_note_6, movie_info.info AS movie_info_info_7, movie_info.note AS movie_info_note_8, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
 from movie_info,movie_companies,title,company_type,company_name,aka_title,info_type,movie_keyword
 where (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%') And (title.id = movie_info.movie_id) And (title.id = movie_companies.movie_id) And (movie_companies.note like '%(200%)%')  And  (movie_companies.note like '%(worldwide)%') And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (aka_title.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (info_type.info = 'release dates')","create materialized view if not exists mv199 as select aka_title.movie_id AS movie_id, company_name.country_code AS country_code, company_name.id AS company_name_id_2, company_type.id AS company_type_id_3, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, movie_companies.note AS movie_companies_note_6, movie_info.info AS movie_info_info_7, movie_info.note AS movie_info_note_8, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
 from movie_info,movie_companies,title,company_type,company_name,aka_title,info_type,movie_keyword
 where (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%') And (title.id = movie_info.movie_id) And (title.id = movie_companies.movie_id) And (movie_companies.note like '%(200%)%')  And  (movie_companies.note like '%(worldwide)%') And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (aka_title.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (info_type.info = 'release dates')"
200,"select aka_title.movie_id AS movie_id, company_name.country_code AS country_code, company_name.id AS company_name_id_2, company_type.id AS company_type_id_3, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, keyword.id AS keyword_id_6, movie_companies.note AS movie_companies_note_7, movie_info.info AS movie_info_info_8, movie_info.note AS movie_info_note_9, title.production_year AS production_year, title.title AS title
 from movie_info,keyword,movie_companies,title,company_type,company_name,aka_title,info_type,movie_keyword
 where (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%') And (title.id = movie_info.movie_id) And (keyword.id = movie_keyword.keyword_id) And (title.id = movie_companies.movie_id) And (movie_companies.note like '%(200%)%')  And  (movie_companies.note like '%(worldwide)%') And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (aka_title.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (info_type.info = 'release dates')","create materialized view if not exists mv200 as select aka_title.movie_id AS movie_id, company_name.country_code AS country_code, company_name.id AS company_name_id_2, company_type.id AS company_type_id_3, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, keyword.id AS keyword_id_6, movie_companies.note AS movie_companies_note_7, movie_info.info AS movie_info_info_8, movie_info.note AS movie_info_note_9, title.production_year AS production_year, title.title AS title
 from movie_info,keyword,movie_companies,title,company_type,company_name,aka_title,info_type,movie_keyword
 where (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%') And (title.id = movie_info.movie_id) And (keyword.id = movie_keyword.keyword_id) And (title.id = movie_companies.movie_id) And (movie_companies.note like '%(200%)%')  And  (movie_companies.note like '%(worldwide)%') And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (aka_title.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (info_type.info = 'release dates')"
201,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info.note AS note
 from movie_info,info_type
 where (info_type.id = movie_info.info_type_id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%') And (info_type.info = 'release dates')","create materialized view if not exists mv201 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info.note AS note
 from movie_info,info_type
 where (info_type.id = movie_info.info_type_id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%') And (info_type.info = 'release dates')"
202,"select aka_title.movie_id AS movie_id, info_type.id AS id, info_type.info AS info_type_info_2, movie_info.info AS movie_info_info_3, movie_info.note AS note
 from aka_title,movie_info,info_type
 where (movie_info.movie_id = aka_title.movie_id) And (info_type.id = movie_info.info_type_id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%') And (info_type.info = 'release dates')","create materialized view if not exists mv202 as select aka_title.movie_id AS movie_id, info_type.id AS id, info_type.info AS info_type_info_2, movie_info.info AS movie_info_info_3, movie_info.note AS note
 from aka_title,movie_info,info_type
 where (movie_info.movie_id = aka_title.movie_id) And (info_type.id = movie_info.info_type_id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%') And (info_type.info = 'release dates')"
203,"select company_name.country_code AS country_code, company_name.name AS name, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note
 from movie_companies,company_name
 where (movie_companies.company_id = company_name.id) And (movie_companies.note like '%(200%)%')  And  (movie_companies.note like '%(worldwide)%') And (company_name.id = movie_companies.company_id) And (company_name.country_code = '[us]')  And  (company_name.name = 'YouTube')","create materialized view if not exists mv203 as select company_name.country_code AS country_code, company_name.name AS name, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note
 from movie_companies,company_name
 where (movie_companies.company_id = company_name.id) And (movie_companies.note like '%(200%)%')  And  (movie_companies.note like '%(worldwide)%') And (company_name.id = movie_companies.company_id) And (company_name.country_code = '[us]')  And  (company_name.name = 'YouTube')"
204,"select company_name.country_code AS country_code, company_name.id AS id, company_name.name AS name, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_keyword.keyword_id AS keyword_id
 from movie_companies,company_name,movie_keyword
 where (movie_keyword.movie_id = movie_companies.movie_id) And (company_name.id = movie_companies.company_id) And (movie_companies.note like '%(200%)%')  And  (movie_companies.note like '%(worldwide)%') And (company_name.country_code = '[us]')  And  (company_name.name = 'YouTube')","create materialized view if not exists mv204 as select company_name.country_code AS country_code, company_name.id AS id, company_name.name AS name, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_keyword.keyword_id AS keyword_id
 from movie_companies,company_name,movie_keyword
 where (movie_keyword.movie_id = movie_companies.movie_id) And (company_name.id = movie_companies.company_id) And (movie_companies.note like '%(200%)%')  And  (movie_companies.note like '%(worldwide)%') And (company_name.country_code = '[us]')  And  (company_name.name = 'YouTube')"
205,"select company_name.country_code AS country_code, company_name.id AS id, company_name.name AS name, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
 from movie_companies,title,company_name,movie_keyword
 where (movie_keyword.movie_id = movie_companies.movie_id) And (company_name.id = movie_companies.company_id) And (movie_companies.note like '%(200%)%')  And  (movie_companies.note like '%(worldwide)%') And (title.id = movie_keyword.movie_id) And (company_name.country_code = '[us]')  And  (company_name.name = 'YouTube')","create materialized view if not exists mv205 as select company_name.country_code AS country_code, company_name.id AS id, company_name.name AS name, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
 from movie_companies,title,company_name,movie_keyword
 where (movie_keyword.movie_id = movie_companies.movie_id) And (company_name.id = movie_companies.company_id) And (movie_companies.note like '%(200%)%')  And  (movie_companies.note like '%(worldwide)%') And (title.id = movie_keyword.movie_id) And (company_name.country_code = '[us]')  And  (company_name.name = 'YouTube')"
206,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
 from movie_companies,title,company_type,company_name,movie_keyword
 where (movie_keyword.movie_id = movie_companies.movie_id) And (company_name.id = movie_companies.company_id) And (movie_companies.note like '%(200%)%')  And  (movie_companies.note like '%(worldwide)%') And (company_type.id = movie_companies.company_type_id) And (title.id = movie_keyword.movie_id) And (company_name.country_code = '[us]')  And  (company_name.name = 'YouTube')","create materialized view if not exists mv206 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title
 from movie_companies,title,company_type,company_name,movie_keyword
 where (movie_keyword.movie_id = movie_companies.movie_id) And (company_name.id = movie_companies.company_id) And (movie_companies.note like '%(200%)%')  And  (movie_companies.note like '%(worldwide)%') And (company_type.id = movie_companies.company_type_id) And (title.id = movie_keyword.movie_id) And (company_name.country_code = '[us]')  And  (company_name.name = 'YouTube')"
207,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, movie_companies.note AS note, movie_keyword.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
 from keyword,movie_companies,title,company_type,company_name,movie_keyword
 where (keyword.id = movie_keyword.keyword_id) And (movie_keyword.movie_id = movie_companies.movie_id) And (company_name.id = movie_companies.company_id) And (movie_companies.note like '%(200%)%')  And  (movie_companies.note like '%(worldwide)%') And (company_type.id = movie_companies.company_type_id) And (title.id = movie_keyword.movie_id) And (company_name.country_code = '[us]')  And  (company_name.name = 'YouTube') And (movie_keyword.keyword_id = keyword.id)","create materialized view if not exists mv207 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, movie_companies.note AS note, movie_keyword.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
 from keyword,movie_companies,title,company_type,company_name,movie_keyword
 where (keyword.id = movie_keyword.keyword_id) And (movie_keyword.movie_id = movie_companies.movie_id) And (company_name.id = movie_companies.company_id) And (movie_companies.note like '%(200%)%')  And  (movie_companies.note like '%(worldwide)%') And (company_type.id = movie_companies.company_type_id) And (title.id = movie_keyword.movie_id) And (company_name.country_code = '[us]')  And  (company_name.name = 'YouTube') And (movie_keyword.keyword_id = keyword.id)"
208,"select aka_title.movie_id AS aka_title_movie_id_0, company_name.country_code AS country_code, company_name.id AS company_name_id_2, company_name.name AS name, company_type.id AS company_type_id_4, info_type.info AS info_type_info_5, keyword.id AS keyword_id_6, movie_companies.movie_id AS movie_companies_movie_id_7, movie_companies.note AS movie_companies_note_8, movie_info.info AS movie_info_info_9, movie_info.note AS movie_info_note_10, title.production_year AS production_year, title.title AS title
 from movie_info,keyword,movie_companies,title,company_type,company_name,aka_title,info_type,movie_keyword
 where (movie_info.movie_id = aka_title.movie_id) And (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%') And (keyword.id = movie_keyword.keyword_id) And (movie_keyword.movie_id = movie_companies.movie_id) And (company_name.id = movie_companies.company_id) And (movie_companies.note like '%(200%)%')  And  (movie_companies.note like '%(worldwide)%') And (company_type.id = movie_companies.company_type_id) And (title.id = movie_keyword.movie_id) And (aka_title.movie_id = title.id) And (company_name.country_code = '[us]')  And  (company_name.name = 'YouTube') And (info_type.id = movie_info.info_type_id) And (info_type.info = 'release dates')","create materialized view if not exists mv208 as select aka_title.movie_id AS aka_title_movie_id_0, company_name.country_code AS country_code, company_name.id AS company_name_id_2, company_name.name AS name, company_type.id AS company_type_id_4, info_type.info AS info_type_info_5, keyword.id AS keyword_id_6, movie_companies.movie_id AS movie_companies_movie_id_7, movie_companies.note AS movie_companies_note_8, movie_info.info AS movie_info_info_9, movie_info.note AS movie_info_note_10, title.production_year AS production_year, title.title AS title
 from movie_info,keyword,movie_companies,title,company_type,company_name,aka_title,info_type,movie_keyword
 where (movie_info.movie_id = aka_title.movie_id) And (movie_info.info_type_id = info_type.id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%') And (keyword.id = movie_keyword.keyword_id) And (movie_keyword.movie_id = movie_companies.movie_id) And (company_name.id = movie_companies.company_id) And (movie_companies.note like '%(200%)%')  And  (movie_companies.note like '%(worldwide)%') And (company_type.id = movie_companies.company_type_id) And (title.id = movie_keyword.movie_id) And (aka_title.movie_id = title.id) And (company_name.country_code = '[us]')  And  (company_name.name = 'YouTube') And (info_type.id = movie_info.info_type_id) And (info_type.info = 'release dates')"
209,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info.note AS note
 from movie_info,info_type
 where (info_type.id = movie_info.info_type_id) And (movie_info.info IS NOT NULL)  And  (movie_info.note like '%internet%')  And  (((movie_info.info like 'USA:% 199%')) Or ((movie_info.info like 'USA:% 200%'))) And (info_type.info = 'release dates')","create materialized view if not exists mv209 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info.note AS note
 from movie_info,info_type
 where (info_type.id = movie_info.info_type_id) And (movie_info.info IS NOT NULL)  And  (movie_info.note like '%internet%')  And  (((movie_info.info like 'USA:% 199%')) Or ((movie_info.info like 'USA:% 200%'))) And (info_type.info = 'release dates')"
210,"select aka_title.movie_id AS movie_id, info_type.id AS id, info_type.info AS info_type_info_2, movie_info.info AS movie_info_info_3, movie_info.note AS note
 from aka_title,movie_info,info_type
 where (movie_info.movie_id = aka_title.movie_id) And (info_type.id = movie_info.info_type_id) And (movie_info.info IS NOT NULL)  And  (movie_info.note like '%internet%')  And  (((movie_info.info like 'USA:% 199%')) Or ((movie_info.info like 'USA:% 200%'))) And (info_type.info = 'release dates')","create materialized view if not exists mv210 as select aka_title.movie_id AS movie_id, info_type.id AS id, info_type.info AS info_type_info_2, movie_info.info AS movie_info_info_3, movie_info.note AS note
 from aka_title,movie_info,info_type
 where (movie_info.movie_id = aka_title.movie_id) And (info_type.id = movie_info.info_type_id) And (movie_info.info IS NOT NULL)  And  (movie_info.note like '%internet%')  And  (((movie_info.info like 'USA:% 199%')) Or ((movie_info.info like 'USA:% 200%'))) And (info_type.info = 'release dates')"
211,"select aka_title.movie_id AS movie_id, info_type.id AS id, info_type.info AS info_type_info_2, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_info.info AS movie_info_info_5, movie_info.note AS note
 from movie_companies,movie_info,aka_title,info_type
 where (movie_companies.movie_id = aka_title.movie_id) And (aka_title.movie_id = movie_info.movie_id) And (info_type.id = movie_info.info_type_id) And (movie_info.info IS NOT NULL)  And  (movie_info.note like '%internet%')  And  (((movie_info.info like 'USA:% 199%')) Or ((movie_info.info like 'USA:% 200%'))) And (info_type.info = 'release dates')","create materialized view if not exists mv211 as select aka_title.movie_id AS movie_id, info_type.id AS id, info_type.info AS info_type_info_2, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_info.info AS movie_info_info_5, movie_info.note AS note
 from movie_companies,movie_info,aka_title,info_type
 where (movie_companies.movie_id = aka_title.movie_id) And (aka_title.movie_id = movie_info.movie_id) And (info_type.id = movie_info.info_type_id) And (movie_info.info IS NOT NULL)  And  (movie_info.note like '%internet%')  And  (((movie_info.info like 'USA:% 199%')) Or ((movie_info.info like 'USA:% 200%'))) And (info_type.info = 'release dates')"
212,"select aka_title.movie_id AS movie_id, company_name.country_code AS country_code, company_name.id AS company_name_id_2, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, movie_companies.company_type_id AS company_type_id, movie_info.info AS movie_info_info_6, movie_info.note AS note
 from movie_info,movie_companies,company_name,aka_title,info_type
 where (aka_title.movie_id = movie_info.movie_id) And (info_type.id = movie_info.info_type_id) And (movie_info.info IS NOT NULL)  And  (movie_info.note like '%internet%')  And  (((movie_info.info like 'USA:% 199%')) Or ((movie_info.info like 'USA:% 200%'))) And (movie_companies.movie_id = aka_title.movie_id) And (company_name.id = movie_companies.company_id) And (info_type.info = 'release dates')","create materialized view if not exists mv212 as select aka_title.movie_id AS movie_id, company_name.country_code AS country_code, company_name.id AS company_name_id_2, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, movie_companies.company_type_id AS company_type_id, movie_info.info AS movie_info_info_6, movie_info.note AS note
 from movie_info,movie_companies,company_name,aka_title,info_type
 where (aka_title.movie_id = movie_info.movie_id) And (info_type.id = movie_info.info_type_id) And (movie_info.info IS NOT NULL)  And  (movie_info.note like '%internet%')  And  (((movie_info.info like 'USA:% 199%')) Or ((movie_info.info like 'USA:% 200%'))) And (movie_companies.movie_id = aka_title.movie_id) And (company_name.id = movie_companies.company_id) And (info_type.info = 'release dates')"
213,"select aka_title.movie_id AS movie_id, company_name.country_code AS country_code, company_name.id AS company_name_id_2, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, movie_companies.company_type_id AS company_type_id, movie_info.info AS movie_info_info_6, movie_info.note AS note, title.production_year AS production_year, title.title AS title
 from movie_info,movie_companies,title,company_name,aka_title,info_type
 where (aka_title.movie_id = movie_info.movie_id) And (info_type.id = movie_info.info_type_id) And (movie_info.info IS NOT NULL)  And  (movie_info.note like '%internet%')  And  (((movie_info.info like 'USA:% 199%')) Or ((movie_info.info like 'USA:% 200%'))) And (title.id = movie_companies.movie_id) And (movie_companies.movie_id = aka_title.movie_id) And (company_name.id = movie_companies.company_id) And (aka_title.movie_id = title.id) And (info_type.info = 'release dates')","create materialized view if not exists mv213 as select aka_title.movie_id AS movie_id, company_name.country_code AS country_code, company_name.id AS company_name_id_2, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, movie_companies.company_type_id AS company_type_id, movie_info.info AS movie_info_info_6, movie_info.note AS note, title.production_year AS production_year, title.title AS title
 from movie_info,movie_companies,title,company_name,aka_title,info_type
 where (aka_title.movie_id = movie_info.movie_id) And (info_type.id = movie_info.info_type_id) And (movie_info.info IS NOT NULL)  And  (movie_info.note like '%internet%')  And  (((movie_info.info like 'USA:% 199%')) Or ((movie_info.info like 'USA:% 200%'))) And (title.id = movie_companies.movie_id) And (movie_companies.movie_id = aka_title.movie_id) And (company_name.id = movie_companies.company_id) And (aka_title.movie_id = title.id) And (info_type.info = 'release dates')"
214,"select aka_title.movie_id AS movie_id, company_name.country_code AS country_code, company_name.id AS company_name_id_2, company_type.id AS company_type_id_3, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, movie_info.info AS movie_info_info_6, movie_info.note AS note, title.production_year AS production_year, title.title AS title
 from movie_info,movie_companies,title,company_type,company_name,aka_title,info_type
 where (aka_title.movie_id = movie_info.movie_id) And (info_type.id = movie_info.info_type_id) And (movie_info.info IS NOT NULL)  And  (movie_info.note like '%internet%')  And  (((movie_info.info like 'USA:% 199%')) Or ((movie_info.info like 'USA:% 200%'))) And (title.id = movie_companies.movie_id) And (movie_companies.movie_id = aka_title.movie_id) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (aka_title.movie_id = title.id) And (info_type.info = 'release dates')","create materialized view if not exists mv214 as select aka_title.movie_id AS movie_id, company_name.country_code AS country_code, company_name.id AS company_name_id_2, company_type.id AS company_type_id_3, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, movie_info.info AS movie_info_info_6, movie_info.note AS note, title.production_year AS production_year, title.title AS title
 from movie_info,movie_companies,title,company_type,company_name,aka_title,info_type
 where (aka_title.movie_id = movie_info.movie_id) And (info_type.id = movie_info.info_type_id) And (movie_info.info IS NOT NULL)  And  (movie_info.note like '%internet%')  And  (((movie_info.info like 'USA:% 199%')) Or ((movie_info.info like 'USA:% 200%'))) And (title.id = movie_companies.movie_id) And (movie_companies.movie_id = aka_title.movie_id) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (aka_title.movie_id = title.id) And (info_type.info = 'release dates')"
215,"select aka_title.movie_id AS aka_title_movie_id_0, company_name.country_code AS country_code, company_name.id AS company_name_id_2, company_type.id AS company_type_id_3, info_type.info AS info_type_info_4, movie_info.info AS movie_info_info_5, movie_info.note AS note, movie_keyword.keyword_id AS keyword_id, movie_keyword.movie_id AS movie_keyword_movie_id_8, title.production_year AS production_year, title.title AS title
 from movie_info,movie_companies,title,company_type,company_name,aka_title,info_type,movie_keyword
 where (aka_title.movie_id = movie_info.movie_id) And (movie_info.info_type_id = info_type.id) And (movie_info.info IS NOT NULL)  And  (movie_info.note like '%internet%')  And  (((movie_info.info like 'USA:% 199%')) Or ((movie_info.info like 'USA:% 200%'))) And (title.id = movie_companies.movie_id) And (movie_companies.movie_id = aka_title.movie_id) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (aka_title.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (info_type.id = movie_info.info_type_id) And (info_type.info = 'release dates')","create materialized view if not exists mv215 as select aka_title.movie_id AS aka_title_movie_id_0, company_name.country_code AS country_code, company_name.id AS company_name_id_2, company_type.id AS company_type_id_3, info_type.info AS info_type_info_4, movie_info.info AS movie_info_info_5, movie_info.note AS note, movie_keyword.keyword_id AS keyword_id, movie_keyword.movie_id AS movie_keyword_movie_id_8, title.production_year AS production_year, title.title AS title
 from movie_info,movie_companies,title,company_type,company_name,aka_title,info_type,movie_keyword
 where (aka_title.movie_id = movie_info.movie_id) And (movie_info.info_type_id = info_type.id) And (movie_info.info IS NOT NULL)  And  (movie_info.note like '%internet%')  And  (((movie_info.info like 'USA:% 199%')) Or ((movie_info.info like 'USA:% 200%'))) And (title.id = movie_companies.movie_id) And (movie_companies.movie_id = aka_title.movie_id) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (aka_title.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (info_type.id = movie_info.info_type_id) And (info_type.info = 'release dates')"
216,"select aka_title.movie_id AS movie_id, company_name.country_code AS country_code, company_name.id AS company_name_id_2, company_type.id AS company_type_id_3, info_type.info AS info_type_info_4, keyword.id AS keyword_id_5, movie_info.info AS movie_info_info_6, movie_info.note AS note, title.production_year AS production_year, title.title AS title
 from movie_info,keyword,movie_companies,title,company_type,company_name,aka_title,info_type,movie_keyword
 where (movie_info.movie_id = aka_title.movie_id) And (movie_info.info_type_id = info_type.id) And (movie_info.info IS NOT NULL)  And  (movie_info.note like '%internet%')  And  (((movie_info.info like 'USA:% 199%')) Or ((movie_info.info like 'USA:% 200%'))) And (keyword.id = movie_keyword.keyword_id) And (title.id = movie_companies.movie_id) And (movie_companies.movie_id = aka_title.movie_id) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (aka_title.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (aka_title.movie_id = movie_info.movie_id) And (info_type.id = movie_info.info_type_id) And (info_type.info = 'release dates')","create materialized view if not exists mv216 as select aka_title.movie_id AS movie_id, company_name.country_code AS country_code, company_name.id AS company_name_id_2, company_type.id AS company_type_id_3, info_type.info AS info_type_info_4, keyword.id AS keyword_id_5, movie_info.info AS movie_info_info_6, movie_info.note AS note, title.production_year AS production_year, title.title AS title
 from movie_info,keyword,movie_companies,title,company_type,company_name,aka_title,info_type,movie_keyword
 where (movie_info.movie_id = aka_title.movie_id) And (movie_info.info_type_id = info_type.id) And (movie_info.info IS NOT NULL)  And  (movie_info.note like '%internet%')  And  (((movie_info.info like 'USA:% 199%')) Or ((movie_info.info like 'USA:% 200%'))) And (keyword.id = movie_keyword.keyword_id) And (title.id = movie_companies.movie_id) And (movie_companies.movie_id = aka_title.movie_id) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (aka_title.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (aka_title.movie_id = movie_info.movie_id) And (info_type.id = movie_info.info_type_id) And (info_type.info = 'release dates')"
217,"select info_type.id AS id, info_type.info AS info, movie_info.movie_id AS movie_id, movie_info.note AS note
 from movie_info,info_type
 where (info_type.id = movie_info.info_type_id) And (movie_info.note like '%internet%') And (info_type.info = 'release dates')","create materialized view if not exists mv217 as select info_type.id AS id, info_type.info AS info, movie_info.movie_id AS movie_id, movie_info.note AS note
 from movie_info,info_type
 where (info_type.id = movie_info.info_type_id) And (movie_info.note like '%internet%') And (info_type.info = 'release dates')"
218,"select info_type.id AS id, info_type.info AS info, movie_info.movie_id AS movie_id, movie_info.note AS note, title.production_year AS production_year, title.title AS title
 from title,movie_info,info_type
 where (title.id = movie_info.movie_id) And (info_type.id = movie_info.info_type_id) And (movie_info.note like '%internet%') And (info_type.info = 'release dates')","create materialized view if not exists mv218 as select info_type.id AS id, info_type.info AS info, movie_info.movie_id AS movie_id, movie_info.note AS note, title.production_year AS production_year, title.title AS title
 from title,movie_info,info_type
 where (title.id = movie_info.movie_id) And (info_type.id = movie_info.info_type_id) And (movie_info.note like '%internet%') And (info_type.info = 'release dates')"
219,"select aka_title.movie_id AS movie_id, aka_title.title AS aka_title_title_1, info_type.id AS id, info_type.info AS info, movie_info.note AS note, title.production_year AS production_year, title.title AS title_title_6
 from aka_title,title,movie_info,info_type
 where (aka_title.movie_id = title.id) And (title.id = movie_info.movie_id) And (info_type.id = movie_info.info_type_id) And (movie_info.note like '%internet%') And (info_type.info = 'release dates')","create materialized view if not exists mv219 as select aka_title.movie_id AS movie_id, aka_title.title AS aka_title_title_1, info_type.id AS id, info_type.info AS info, movie_info.note AS note, title.production_year AS production_year, title.title AS title_title_6
 from aka_title,title,movie_info,info_type
 where (aka_title.movie_id = title.id) And (title.id = movie_info.movie_id) And (info_type.id = movie_info.info_type_id) And (movie_info.note like '%internet%') And (info_type.info = 'release dates')"
220,"select aka_title.movie_id AS aka_title_movie_id_0, aka_title.title AS aka_title_title_1, info_type.id AS id, info_type.info AS info, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_info.movie_id AS movie_info_movie_id_6, movie_info.note AS note, title.production_year AS production_year, title.title AS title_title_9
 from movie_info,movie_companies,title,aka_title,info_type
 where (info_type.id = movie_info.info_type_id) And (movie_info.note like '%internet%') And (title.id = movie_info.movie_id) And (movie_companies.movie_id = title.id) And (aka_title.movie_id = title.id) And (info_type.info = 'release dates')","create materialized view if not exists mv220 as select aka_title.movie_id AS aka_title_movie_id_0, aka_title.title AS aka_title_title_1, info_type.id AS id, info_type.info AS info, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_info.movie_id AS movie_info_movie_id_6, movie_info.note AS note, title.production_year AS production_year, title.title AS title_title_9
 from movie_info,movie_companies,title,aka_title,info_type
 where (info_type.id = movie_info.info_type_id) And (movie_info.note like '%internet%') And (title.id = movie_info.movie_id) And (movie_companies.movie_id = title.id) And (aka_title.movie_id = title.id) And (info_type.info = 'release dates')"
221,"select aka_title.movie_id AS aka_title_movie_id_0, aka_title.title AS aka_title_title_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, info_type.id AS info_type_id_4, info_type.info AS info, movie_companies.company_type_id AS company_type_id, movie_info.movie_id AS movie_info_movie_id_7, movie_info.note AS note, title.production_year AS production_year, title.title AS title_title_10
 from movie_info,movie_companies,title,company_name,aka_title,info_type
 where (info_type.id = movie_info.info_type_id) And (movie_info.note like '%internet%') And (title.id = movie_info.movie_id) And (movie_companies.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (aka_title.movie_id = title.id) And (info_type.info = 'release dates')","create materialized view if not exists mv221 as select aka_title.movie_id AS aka_title_movie_id_0, aka_title.title AS aka_title_title_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, info_type.id AS info_type_id_4, info_type.info AS info, movie_companies.company_type_id AS company_type_id, movie_info.movie_id AS movie_info_movie_id_7, movie_info.note AS note, title.production_year AS production_year, title.title AS title_title_10
 from movie_info,movie_companies,title,company_name,aka_title,info_type
 where (info_type.id = movie_info.info_type_id) And (movie_info.note like '%internet%') And (title.id = movie_info.movie_id) And (movie_companies.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (aka_title.movie_id = title.id) And (info_type.info = 'release dates')"
222,"select aka_title.movie_id AS aka_title_movie_id_0, aka_title.title AS aka_title_title_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_type.id AS company_type_id_4, info_type.id AS info_type_id_5, info_type.info AS info, movie_info.movie_id AS movie_info_movie_id_7, movie_info.note AS note, title.production_year AS production_year, title.title AS title_title_10
 from movie_info,movie_companies,title,company_type,company_name,aka_title,info_type
 where (info_type.id = movie_info.info_type_id) And (movie_info.note like '%internet%') And (title.id = movie_info.movie_id) And (movie_companies.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (aka_title.movie_id = title.id) And (info_type.info = 'release dates')","create materialized view if not exists mv222 as select aka_title.movie_id AS aka_title_movie_id_0, aka_title.title AS aka_title_title_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_type.id AS company_type_id_4, info_type.id AS info_type_id_5, info_type.info AS info, movie_info.movie_id AS movie_info_movie_id_7, movie_info.note AS note, title.production_year AS production_year, title.title AS title_title_10
 from movie_info,movie_companies,title,company_type,company_name,aka_title,info_type
 where (info_type.id = movie_info.info_type_id) And (movie_info.note like '%internet%') And (title.id = movie_info.movie_id) And (movie_companies.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (aka_title.movie_id = title.id) And (info_type.info = 'release dates')"
223,"select aka_title.movie_id AS aka_title_movie_id_0, aka_title.title AS aka_title_title_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_type.id AS company_type_id_4, info_type.id AS info_type_id_5, info_type.info AS info, movie_info.movie_id AS movie_info_movie_id_7, movie_info.note AS note, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title_title_11
 from movie_info,movie_companies,title,company_type,company_name,aka_title,info_type,movie_keyword
 where (info_type.id = movie_info.info_type_id) And (movie_info.note like '%internet%') And (title.id = movie_info.movie_id) And (movie_companies.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (aka_title.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (info_type.info = 'release dates')","create materialized view if not exists mv223 as select aka_title.movie_id AS aka_title_movie_id_0, aka_title.title AS aka_title_title_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_type.id AS company_type_id_4, info_type.id AS info_type_id_5, info_type.info AS info, movie_info.movie_id AS movie_info_movie_id_7, movie_info.note AS note, movie_keyword.keyword_id AS keyword_id, title.production_year AS production_year, title.title AS title_title_11
 from movie_info,movie_companies,title,company_type,company_name,aka_title,info_type,movie_keyword
 where (info_type.id = movie_info.info_type_id) And (movie_info.note like '%internet%') And (title.id = movie_info.movie_id) And (movie_companies.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (aka_title.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (info_type.info = 'release dates')"
224,"select aka_title.movie_id AS aka_title_movie_id_0, aka_title.title AS aka_title_title_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_type.id AS company_type_id_4, info_type.id AS info_type_id_5, info_type.info AS info, keyword.id AS keyword_id_7, movie_info.movie_id AS movie_info_movie_id_8, movie_info.note AS note, title.production_year AS production_year, title.title AS title_title_11
 from movie_info,keyword,movie_companies,title,company_type,company_name,aka_title,info_type,movie_keyword
 where (info_type.id = movie_info.info_type_id) And (movie_info.note like '%internet%') And (title.id = movie_info.movie_id) And (keyword.id = movie_keyword.keyword_id) And (movie_companies.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (aka_title.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (info_type.info = 'release dates')","create materialized view if not exists mv224 as select aka_title.movie_id AS aka_title_movie_id_0, aka_title.title AS aka_title_title_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_type.id AS company_type_id_4, info_type.id AS info_type_id_5, info_type.info AS info, keyword.id AS keyword_id_7, movie_info.movie_id AS movie_info_movie_id_8, movie_info.note AS note, title.production_year AS production_year, title.title AS title_title_11
 from movie_info,keyword,movie_companies,title,company_type,company_name,aka_title,info_type,movie_keyword
 where (info_type.id = movie_info.info_type_id) And (movie_info.note like '%internet%') And (title.id = movie_info.movie_id) And (keyword.id = movie_keyword.keyword_id) And (movie_companies.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (aka_title.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (info_type.info = 'release dates')"
225,"select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, keyword.id AS id, keyword.keyword AS keyword, title.episode_nr AS episode_nr, title.title AS title
 from title,keyword,cast_info,movie_keyword
 where (title.id = movie_keyword.movie_id) And (cast_info.movie_id = title.id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'character-name-in-title')","create materialized view if not exists mv225 as select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, keyword.id AS id, keyword.keyword AS keyword, title.episode_nr AS episode_nr, title.title AS title
 from title,keyword,cast_info,movie_keyword
 where (title.id = movie_keyword.movie_id) And (cast_info.movie_id = title.id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'character-name-in-title')"
226,"select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, keyword.id AS id, keyword.keyword AS keyword, title.episode_nr AS episode_nr, title.title AS title
 from movie_keyword,name,title,cast_info,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (name.id = cast_info.person_id) And (cast_info.movie_id = title.id) And (keyword.keyword = 'character-name-in-title')","create materialized view if not exists mv226 as select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, keyword.id AS id, keyword.keyword AS keyword, title.episode_nr AS episode_nr, title.title AS title
 from movie_keyword,name,title,cast_info,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (name.id = cast_info.person_id) And (cast_info.movie_id = title.id) And (keyword.keyword = 'character-name-in-title')"
227,"select aka_name.name AS name, aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_2, keyword.keyword AS keyword, movie_keyword.keyword_id AS keyword_id, movie_keyword.movie_id AS movie_keyword_movie_id_5, title.episode_nr AS episode_nr, title.title AS title
 from movie_keyword,name,title,aka_name,cast_info,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (name.id = cast_info.person_id) And (aka_name.person_id = name.id) And (cast_info.movie_id = title.id) And (keyword.keyword = 'character-name-in-title')","create materialized view if not exists mv227 as select aka_name.name AS name, aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_2, keyword.keyword AS keyword, movie_keyword.keyword_id AS keyword_id, movie_keyword.movie_id AS movie_keyword_movie_id_5, title.episode_nr AS episode_nr, title.title AS title
 from movie_keyword,name,title,aka_name,cast_info,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (name.id = cast_info.person_id) And (aka_name.person_id = name.id) And (cast_info.movie_id = title.id) And (keyword.keyword = 'character-name-in-title')"
228,"select aka_name.name AS name, aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_2, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_keyword.keyword_id AS keyword_id, movie_keyword.movie_id AS movie_keyword_movie_id_6, title.episode_nr AS episode_nr, title.title AS title
 from movie_keyword,name,movie_companies,title,aka_name,cast_info,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (name.id = cast_info.person_id) And (aka_name.person_id = name.id) And (movie_companies.movie_id = cast_info.movie_id) And (cast_info.movie_id = title.id) And (keyword.keyword = 'character-name-in-title')","create materialized view if not exists mv228 as select aka_name.name AS name, aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_2, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_keyword.keyword_id AS keyword_id, movie_keyword.movie_id AS movie_keyword_movie_id_6, title.episode_nr AS episode_nr, title.title AS title
 from movie_keyword,name,movie_companies,title,aka_name,cast_info,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (name.id = cast_info.person_id) And (aka_name.person_id = name.id) And (movie_companies.movie_id = cast_info.movie_id) And (cast_info.movie_id = title.id) And (keyword.keyword = 'character-name-in-title')"
229,"select aka_name.name AS name, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, company_name.country_code AS country_code, company_name.id AS company_name_id_4, keyword.id AS keyword_id_5, keyword.keyword AS keyword, title.episode_nr AS episode_nr, title.title AS title
 from movie_keyword,name,movie_companies,title,company_name,aka_name,cast_info,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (name.id = cast_info.person_id) And (aka_name.person_id = name.id) And (movie_companies.movie_id = cast_info.movie_id) And (company_name.id = movie_companies.company_id) And (cast_info.movie_id = title.id) And (keyword.keyword = 'character-name-in-title')","create materialized view if not exists mv229 as select aka_name.name AS name, aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, company_name.country_code AS country_code, company_name.id AS company_name_id_4, keyword.id AS keyword_id_5, keyword.keyword AS keyword, title.episode_nr AS episode_nr, title.title AS title
 from movie_keyword,name,movie_companies,title,company_name,aka_name,cast_info,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (name.id = cast_info.person_id) And (aka_name.person_id = name.id) And (movie_companies.movie_id = cast_info.movie_id) And (company_name.id = movie_companies.company_id) And (cast_info.movie_id = title.id) And (keyword.keyword = 'character-name-in-title')"
230,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.person_id AS person_id, company_name.country_code AS country_code, company_name.id AS company_name_id_3, keyword.id AS keyword_id_4, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_keyword_movie_id_6
 from movie_keyword,movie_companies,title,company_name,cast_info,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_companies.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (cast_info.movie_id = title.id) And (keyword.keyword = 'character-name-in-title')","create materialized view if not exists mv230 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.person_id AS person_id, company_name.country_code AS country_code, company_name.id AS company_name_id_3, keyword.id AS keyword_id_4, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_keyword_movie_id_6
 from movie_keyword,movie_companies,title,company_name,cast_info,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_companies.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (cast_info.movie_id = title.id) And (keyword.keyword = 'character-name-in-title')"
231,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.person_id AS person_id, company_name.country_code AS country_code, company_name.id AS company_name_id_3, keyword.id AS keyword_id_4, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_keyword_movie_id_6, name.name AS name
 from movie_keyword,name,movie_companies,title,company_name,cast_info,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (name.id = cast_info.person_id) And (movie_companies.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (cast_info.movie_id = title.id) And (keyword.keyword = 'character-name-in-title')","create materialized view if not exists mv231 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.person_id AS person_id, company_name.country_code AS country_code, company_name.id AS company_name_id_3, keyword.id AS keyword_id_4, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_keyword_movie_id_6, name.name AS name
 from movie_keyword,name,movie_companies,title,company_name,cast_info,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (name.id = cast_info.person_id) And (movie_companies.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (cast_info.movie_id = title.id) And (keyword.keyword = 'character-name-in-title')"
232,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.person_id AS person_id, keyword.id AS id, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_keyword.movie_id AS movie_keyword_movie_id_5
 from movie_keyword,movie_companies,title,cast_info,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_companies.movie_id = title.id) And (cast_info.movie_id = title.id) And (keyword.keyword = 'character-name-in-title')","create materialized view if not exists mv232 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.person_id AS person_id, keyword.id AS id, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_keyword.movie_id AS movie_keyword_movie_id_5
 from movie_keyword,movie_companies,title,cast_info,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_companies.movie_id = title.id) And (cast_info.movie_id = title.id) And (keyword.keyword = 'character-name-in-title')"
233,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.person_id AS person_id, keyword.id AS id, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_keyword.movie_id AS movie_keyword_movie_id_5, name.name AS name
 from movie_keyword,name,movie_companies,title,cast_info,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (name.id = cast_info.person_id) And (movie_companies.movie_id = title.id) And (cast_info.movie_id = title.id) And (keyword.keyword = 'character-name-in-title')","create materialized view if not exists mv233 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.person_id AS person_id, keyword.id AS id, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_keyword.movie_id AS movie_keyword_movie_id_5, name.name AS name
 from movie_keyword,name,movie_companies,title,cast_info,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (name.id = cast_info.person_id) And (movie_companies.movie_id = title.id) And (cast_info.movie_id = title.id) And (keyword.keyword = 'character-name-in-title')"
234,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info_idx.info AS movie_info_idx_info_2, movie_info_idx.movie_id AS movie_id
 from info_type,movie_info_idx
 where (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'votes')","create materialized view if not exists mv234 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info_idx.info AS movie_info_idx_info_2, movie_info_idx.movie_id AS movie_id
 from info_type,movie_info_idx
 where (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'votes')"
235,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.info_type_id AS info_type_id
 from movie_info,movie_info_idx,info_type
 where (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.info_type_id = info_type.id) And (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'budget') And (info_type.info = 'votes')","create materialized view if not exists mv235 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.info_type_id AS info_type_id
 from movie_info,movie_info_idx,info_type
 where (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info.info_type_id = info_type.id) And (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'budget') And (info_type.info = 'votes')"
236,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, info_type.id AS id, info_type.info AS info_type_info_4, movie_info.info AS movie_info_info_5, movie_info.info_type_id AS info_type_id, movie_info_idx.info AS movie_info_idx_info_7
 from movie_info_idx,movie_info,cast_info,info_type
 where (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.info_type_id = info_type.id) And (cast_info.note in ('(producer)', '(executive producer)')) And (info_type.info = 'budget') And (info_type.info = 'votes')","create materialized view if not exists mv236 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, info_type.id AS id, info_type.info AS info_type_info_4, movie_info.info AS movie_info_info_5, movie_info.info_type_id AS info_type_id, movie_info_idx.info AS movie_info_idx_info_7
 from movie_info_idx,movie_info,cast_info,info_type
 where (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.info_type_id = info_type.id) And (cast_info.note in ('(producer)', '(executive producer)')) And (info_type.info = 'budget') And (info_type.info = 'votes')"
237,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, info_type.id AS id, info_type.info AS info_type_info_4, movie_info.info AS movie_info_info_5, movie_info.info_type_id AS info_type_id, movie_info_idx.info AS movie_info_idx_info_7, name.gender AS gender, name.name AS name
 from movie_info_idx,name,movie_info,cast_info,info_type
 where (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (name.id = cast_info.person_id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.info_type_id = info_type.id) And (cast_info.note in ('(producer)', '(executive producer)')) And (info_type.info = 'budget') And (info_type.info = 'votes')","create materialized view if not exists mv237 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, info_type.id AS id, info_type.info AS info_type_info_4, movie_info.info AS movie_info_info_5, movie_info.info_type_id AS info_type_id, movie_info_idx.info AS movie_info_idx_info_7, name.gender AS gender, name.name AS name
 from movie_info_idx,name,movie_info,cast_info,info_type
 where (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (name.id = cast_info.person_id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.info_type_id = info_type.id) And (cast_info.note in ('(producer)', '(executive producer)')) And (info_type.info = 'budget') And (info_type.info = 'votes')"
238,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, info_type.id AS id, info_type.info AS info_type_info_4, movie_info.info AS movie_info_info_5, movie_info.info_type_id AS info_type_id, movie_info_idx.info AS movie_info_idx_info_7, name.gender AS gender, name.name AS name, title.title AS title
 from movie_info_idx,name,movie_info,title,cast_info,info_type
 where (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (name.id = cast_info.person_id) And (title.id = movie_info.movie_id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.info_type_id = info_type.id) And (cast_info.note in ('(producer)', '(executive producer)')) And (info_type.info = 'budget') And (info_type.info = 'votes')","create materialized view if not exists mv238 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, info_type.id AS id, info_type.info AS info_type_info_4, movie_info.info AS movie_info_info_5, movie_info.info_type_id AS info_type_id, movie_info_idx.info AS movie_info_idx_info_7, name.gender AS gender, name.name AS name, title.title AS title
 from movie_info_idx,name,movie_info,title,cast_info,info_type
 where (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (name.id = cast_info.person_id) And (title.id = movie_info.movie_id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.info_type_id = info_type.id) And (cast_info.note in ('(producer)', '(executive producer)')) And (info_type.info = 'budget') And (info_type.info = 'votes')"
239,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id
 from movie_info,info_type
 where (info_type.id = movie_info.info_type_id) And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (info_type.info = 'genres')","create materialized view if not exists mv239 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id
 from movie_info,info_type
 where (info_type.id = movie_info.info_type_id) And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (info_type.info = 'genres')"
240,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_4
 from movie_info,movie_info_idx,info_type
 where (movie_info.movie_id = movie_info_idx.movie_id) And (info_type.id = movie_info.info_type_id) And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'genres') And (info_type.info = 'votes')","create materialized view if not exists mv240 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_4
 from movie_info,movie_info_idx,info_type
 where (movie_info.movie_id = movie_info_idx.movie_id) And (info_type.id = movie_info.info_type_id) And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'genres') And (info_type.info = 'votes')"
241,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_4, title.title AS title
 from title,movie_info,movie_info_idx,info_type
 where (title.id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (info_type.id = movie_info.info_type_id) And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'genres') And (info_type.info = 'votes')","create materialized view if not exists mv241 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_4, title.title AS title
 from title,movie_info,movie_info_idx,info_type
 where (title.id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_info.movie_id = movie_info_idx.movie_id) And (info_type.id = movie_info.info_type_id) And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'genres') And (info_type.info = 'votes')"
242,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, info_type.id AS id, info_type.info AS info_type_info_4, movie_info.info AS movie_info_info_5, movie_info.movie_id AS movie_info_movie_id_6, movie_info_idx.info AS movie_info_idx_info_7, title.title AS title
 from movie_info_idx,movie_info,title,cast_info,info_type
 where (title.id = movie_info_idx.movie_id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info.movie_id = title.id) And (info_type.id = movie_info.info_type_id) And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (cast_info.movie_id = title.id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (info_type.info = 'genres') And (info_type.info = 'votes')","create materialized view if not exists mv242 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, info_type.id AS id, info_type.info AS info_type_info_4, movie_info.info AS movie_info_info_5, movie_info.movie_id AS movie_info_movie_id_6, movie_info_idx.info AS movie_info_idx_info_7, title.title AS title
 from movie_info_idx,movie_info,title,cast_info,info_type
 where (title.id = movie_info_idx.movie_id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info.movie_id = title.id) And (info_type.id = movie_info.info_type_id) And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (cast_info.movie_id = title.id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (info_type.info = 'genres') And (info_type.info = 'votes')"
243,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, info_type.id AS id, info_type.info AS info_type_info_4, movie_info.info AS movie_info_info_5, movie_info.movie_id AS movie_info_movie_id_6, movie_info_idx.info AS movie_info_idx_info_7, name.gender AS gender, title.title AS title
 from movie_info_idx,name,movie_info,title,cast_info,info_type
 where (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (name.id = cast_info.person_id) And (movie_info.movie_id = title.id) And (info_type.id = movie_info.info_type_id) And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (title.id = movie_info_idx.movie_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (info_type.info = 'genres') And (info_type.info = 'votes')","create materialized view if not exists mv243 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, info_type.id AS id, info_type.info AS info_type_info_4, movie_info.info AS movie_info_info_5, movie_info.movie_id AS movie_info_movie_id_6, movie_info_idx.info AS movie_info_idx_info_7, name.gender AS gender, title.title AS title
 from movie_info_idx,name,movie_info,title,cast_info,info_type
 where (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (name.id = cast_info.person_id) And (movie_info.movie_id = title.id) And (info_type.id = movie_info.info_type_id) And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (title.id = movie_info_idx.movie_id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (info_type.info = 'genres') And (info_type.info = 'votes')"
244,"select info_type.info AS info_type_info_0, movie_info.info AS movie_info_info_1, movie_info.movie_id AS movie_id
 from movie_info,info_type
 where (info_type.id = movie_info.info_type_id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.info_type_id = info_type.id) And (info_type.info = 'release dates')","create materialized view if not exists mv244 as select info_type.info AS info_type_info_0, movie_info.info AS movie_info_info_1, movie_info.movie_id AS movie_id
 from movie_info,info_type
 where (info_type.id = movie_info.info_type_id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_info.info_type_id = info_type.id) And (info_type.info = 'release dates')"
245,"select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS cast_info_note_2, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS company_name_id_6, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, movie_companies.note AS movie_companies_note_9, movie_info.info AS movie_info_info_10, movie_info.movie_id AS movie_info_movie_id_11, name.gender AS gender, name.name AS name, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from name,role_type,movie_info,movie_companies,title,company_name,aka_name,cast_info,info_type
 where (name.id = cast_info.person_id) And (aka_name.person_id = name.id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (movie_info.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_companies.movie_id = title.id) And (movie_companies.movie_id = cast_info.movie_id) And (movie_companies.note IS NOT NULL)  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (company_name.id = movie_companies.company_id) And (title.id = cast_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (info_type.info = 'release dates')","create materialized view if not exists mv245 as select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS cast_info_note_2, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, company_name.country_code AS country_code, company_name.id AS company_name_id_6, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, movie_companies.note AS movie_companies_note_9, movie_info.info AS movie_info_info_10, movie_info.movie_id AS movie_info_movie_id_11, name.gender AS gender, name.name AS name, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from name,role_type,movie_info,movie_companies,title,company_name,aka_name,cast_info,info_type
 where (name.id = cast_info.person_id) And (aka_name.person_id = name.id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (movie_info.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_companies.movie_id = title.id) And (movie_companies.movie_id = cast_info.movie_id) And (movie_companies.note IS NOT NULL)  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (company_name.id = movie_companies.company_id) And (title.id = cast_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (info_type.info = 'release dates')"
246,"select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS cast_info_note_2, cast_info.role_id AS role_id, char_name.id AS char_name_id_4, company_name.country_code AS country_code, company_name.id AS company_name_id_6, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, movie_companies.note AS movie_companies_note_9, movie_info.info AS movie_info_info_10, movie_info.movie_id AS movie_info_movie_id_11, name.gender AS gender, name.name AS name, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from char_name,name,role_type,movie_info,movie_companies,title,company_name,aka_name,cast_info,info_type
 where (char_name.id = cast_info.person_role_id) And (name.id = cast_info.person_id) And (aka_name.person_id = name.id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (movie_info.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_companies.movie_id = title.id) And (movie_companies.movie_id = cast_info.movie_id) And (movie_companies.note IS NOT NULL)  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (company_name.id = movie_companies.company_id) And (title.id = cast_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (info_type.info = 'release dates')","create materialized view if not exists mv246 as select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS cast_info_note_2, cast_info.role_id AS role_id, char_name.id AS char_name_id_4, company_name.country_code AS country_code, company_name.id AS company_name_id_6, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, movie_companies.note AS movie_companies_note_9, movie_info.info AS movie_info_info_10, movie_info.movie_id AS movie_info_movie_id_11, name.gender AS gender, name.name AS name, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from char_name,name,role_type,movie_info,movie_companies,title,company_name,aka_name,cast_info,info_type
 where (char_name.id = cast_info.person_role_id) And (name.id = cast_info.person_id) And (aka_name.person_id = name.id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (movie_info.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_companies.movie_id = title.id) And (movie_companies.movie_id = cast_info.movie_id) And (movie_companies.note IS NOT NULL)  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (company_name.id = movie_companies.company_id) And (title.id = cast_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (info_type.info = 'release dates')"
247,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id
 from movie_info,info_type
 where (info_type.id = movie_info.info_type_id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%2007%')) Or ((movie_info.info = '__LIKE__USA:%2008%'))) And (info_type.info = 'release dates')","create materialized view if not exists mv247 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id
 from movie_info,info_type
 where (info_type.id = movie_info.info_type_id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%2007%')) Or ((movie_info.info = '__LIKE__USA:%2008%'))) And (info_type.info = 'release dates')"
248,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
 from title,movie_info,info_type
 where (title.id = movie_info.movie_id) And (info_type.id = movie_info.info_type_id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%2007%')) Or ((movie_info.info = '__LIKE__USA:%2008%'))) And (info_type.info = 'release dates')","create materialized view if not exists mv248 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info.info AS movie_info_info_2, movie_info.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
 from title,movie_info,info_type
 where (title.id = movie_info.movie_id) And (info_type.id = movie_info.info_type_id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%2007%')) Or ((movie_info.info = '__LIKE__USA:%2008%'))) And (info_type.info = 'release dates')"
249,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS movie_info_info_5, title.production_year AS production_year, title.title AS title
 from movie_companies,title,movie_info,info_type
 where (title.id = movie_companies.movie_id) And (movie_companies.note like '%(200%)%')  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (title.id = movie_info.movie_id) And (info_type.id = movie_info.info_type_id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%2007%')) Or ((movie_info.info = '__LIKE__USA:%2008%'))) And (info_type.info = 'release dates')","create materialized view if not exists mv249 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS movie_info_info_5, title.production_year AS production_year, title.title AS title
 from movie_companies,title,movie_info,info_type
 where (title.id = movie_companies.movie_id) And (movie_companies.note like '%(200%)%')  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (title.id = movie_info.movie_id) And (info_type.id = movie_info.info_type_id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%2007%')) Or ((movie_info.info = '__LIKE__USA:%2008%'))) And (info_type.info = 'release dates')"
250,"select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.role_id AS role_id, char_name.id AS id, name.gender AS gender, name.name AS name, role_type.role AS role
 from char_name,name,role_type,aka_name,cast_info
 where (char_name.id = cast_info.person_role_id) And (name.id = cast_info.person_id) And (aka_name.person_id = name.id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (cast_info.note = '(voice)')","create materialized view if not exists mv250 as select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.role_id AS role_id, char_name.id AS id, name.gender AS gender, name.name AS name, role_type.role AS role
 from char_name,name,role_type,aka_name,cast_info
 where (char_name.id = cast_info.person_role_id) And (name.id = cast_info.person_id) And (aka_name.person_id = name.id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (cast_info.note = '(voice)')"
251,"select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS cast_info_note_2, cast_info.role_id AS role_id, char_name.id AS id, info_type.info AS info_type_info_5, movie_companies.company_id AS company_id, movie_companies.note AS movie_companies_note_7, movie_info.info AS movie_info_info_8, movie_info.info_type_id AS info_type_id, movie_info.movie_id AS movie_info_movie_id_10, name.gender AS gender, name.name AS name, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from char_name,name,role_type,movie_info,movie_companies,title,aka_name,cast_info,info_type
 where (char_name.id = cast_info.person_role_id) And (name.id = cast_info.person_id) And (aka_name.person_id = name.id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (info_type.id = movie_info.info_type_id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%2007%')) Or ((movie_info.info = '__LIKE__USA:%2008%'))) And (title.id = movie_info.movie_id) And (title.id = movie_companies.movie_id) And (movie_companies.note like '%(200%)%')  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (title.id = cast_info.movie_id) And (cast_info.note = '(voice)') And (info_type.info = 'release dates')","create materialized view if not exists mv251 as select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS cast_info_note_2, cast_info.role_id AS role_id, char_name.id AS id, info_type.info AS info_type_info_5, movie_companies.company_id AS company_id, movie_companies.note AS movie_companies_note_7, movie_info.info AS movie_info_info_8, movie_info.info_type_id AS info_type_id, movie_info.movie_id AS movie_info_movie_id_10, name.gender AS gender, name.name AS name, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from char_name,name,role_type,movie_info,movie_companies,title,aka_name,cast_info,info_type
 where (char_name.id = cast_info.person_role_id) And (name.id = cast_info.person_id) And (aka_name.person_id = name.id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (info_type.id = movie_info.info_type_id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%2007%')) Or ((movie_info.info = '__LIKE__USA:%2008%'))) And (title.id = movie_info.movie_id) And (title.id = movie_companies.movie_id) And (movie_companies.note like '%(200%)%')  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (title.id = cast_info.movie_id) And (cast_info.note = '(voice)') And (info_type.info = 'release dates')"
252,"select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_2, cast_info.role_id AS role_id, char_name.id AS char_name_id_4, company_name.country_code AS country_code, company_name.id AS company_name_id_6, info_type.info AS info_type_info_7, movie_companies.note AS movie_companies_note_8, movie_info.info AS movie_info_info_9, name.gender AS gender, name.name AS name, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from char_name,name,role_type,movie_info,movie_companies,title,company_name,aka_name,cast_info,info_type
 where (char_name.id = cast_info.person_role_id) And (name.id = cast_info.person_id) And (aka_name.person_id = name.id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (movie_info.info_type_id = info_type.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%2007%')) Or ((movie_info.info = '__LIKE__USA:%2008%'))) And (movie_info.movie_id = title.id) And (title.id = movie_companies.movie_id) And (movie_companies.note like '%(200%)%')  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (company_name.id = movie_companies.company_id) And (title.id = cast_info.movie_id) And (title.id = movie_info.movie_id) And (cast_info.note = '(voice)') And (info_type.id = movie_info.info_type_id) And (info_type.info = 'release dates')","create materialized view if not exists mv252 as select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS cast_info_note_2, cast_info.role_id AS role_id, char_name.id AS char_name_id_4, company_name.country_code AS country_code, company_name.id AS company_name_id_6, info_type.info AS info_type_info_7, movie_companies.note AS movie_companies_note_8, movie_info.info AS movie_info_info_9, name.gender AS gender, name.name AS name, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from char_name,name,role_type,movie_info,movie_companies,title,company_name,aka_name,cast_info,info_type
 where (char_name.id = cast_info.person_role_id) And (name.id = cast_info.person_id) And (aka_name.person_id = name.id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (movie_info.info_type_id = info_type.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%2007%')) Or ((movie_info.info = '__LIKE__USA:%2008%'))) And (movie_info.movie_id = title.id) And (title.id = movie_companies.movie_id) And (movie_companies.note like '%(200%)%')  And  (((movie_companies.note like '%(USA)%')) Or ((movie_companies.note like '%(worldwide)%'))) And (company_name.id = movie_companies.company_id) And (title.id = cast_info.movie_id) And (title.id = movie_info.movie_id) And (cast_info.note = '(voice)') And (info_type.id = movie_info.info_type_id) And (info_type.info = 'release dates')"
253,"select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.role_id AS role_id, char_name.id AS id, movie_companies.company_id AS company_id, name.gender AS gender, name.name AS name, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from char_name,name,role_type,movie_companies,title,aka_name,cast_info
 where (char_name.id = cast_info.person_role_id) And (name.id = cast_info.person_id) And (aka_name.person_id = name.id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (movie_companies.movie_id = title.id) And (title.id = cast_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)'))","create materialized view if not exists mv253 as select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.role_id AS role_id, char_name.id AS id, movie_companies.company_id AS company_id, name.gender AS gender, name.name AS name, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from char_name,name,role_type,movie_companies,title,aka_name,cast_info
 where (char_name.id = cast_info.person_role_id) And (name.id = cast_info.person_id) And (aka_name.person_id = name.id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (movie_companies.movie_id = title.id) And (title.id = cast_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)'))"
254,"select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.role_id AS role_id, char_name.id AS char_name_id_4, company_name.country_code AS country_code, company_name.id AS company_name_id_6, name.gender AS gender, name.name AS name, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from char_name,name,role_type,movie_companies,title,company_name,aka_name,cast_info
 where (char_name.id = cast_info.person_role_id) And (name.id = cast_info.person_id) And (aka_name.person_id = name.id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (movie_companies.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (title.id = cast_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)'))","create materialized view if not exists mv254 as select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.role_id AS role_id, char_name.id AS char_name_id_4, company_name.country_code AS country_code, company_name.id AS company_name_id_6, name.gender AS gender, name.name AS name, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from char_name,name,role_type,movie_companies,title,company_name,aka_name,cast_info
 where (char_name.id = cast_info.person_role_id) And (name.id = cast_info.person_id) And (aka_name.person_id = name.id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (movie_companies.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (title.id = cast_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)'))"
255,"select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.role_id AS role_id, char_name.id AS char_name_id_4, company_name.country_code AS country_code, company_name.id AS company_name_id_6, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, movie_info.info AS movie_info_info_9, name.gender AS gender, name.name AS name, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from char_name,name,role_type,movie_info,movie_companies,title,company_name,aka_name,cast_info,info_type
 where (char_name.id = cast_info.person_role_id) And (name.id = cast_info.person_id) And (aka_name.person_id = name.id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (movie_info.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_companies.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (title.id = cast_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (info_type.info = 'release dates')","create materialized view if not exists mv255 as select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.role_id AS role_id, char_name.id AS char_name_id_4, company_name.country_code AS country_code, company_name.id AS company_name_id_6, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, movie_info.info AS movie_info_info_9, name.gender AS gender, name.name AS name, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from char_name,name,role_type,movie_info,movie_companies,title,company_name,aka_name,cast_info,info_type
 where (char_name.id = cast_info.person_role_id) And (name.id = cast_info.person_id) And (aka_name.person_id = name.id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (movie_info.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_companies.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (title.id = cast_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (info_type.info = 'release dates')"
256,"select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.role_id AS role_id, char_name.id AS char_name_id_4, info_type.id AS info_type_id_5, info_type.info AS info, movie_companies.company_id AS company_id, movie_info.info_type_id AS info_type_id, name.gender AS gender, name.name AS name, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from char_name,name,role_type,movie_info,movie_companies,title,aka_name,cast_info,info_type
 where (char_name.id = cast_info.person_role_id) And (name.id = cast_info.person_id) And (aka_name.person_id = name.id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (movie_info.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (movie_companies.movie_id = title.id) And (title.id = cast_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (info_type.info = 'release dates')","create materialized view if not exists mv256 as select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.role_id AS role_id, char_name.id AS char_name_id_4, info_type.id AS info_type_id_5, info_type.info AS info, movie_companies.company_id AS company_id, movie_info.info_type_id AS info_type_id, name.gender AS gender, name.name AS name, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from char_name,name,role_type,movie_info,movie_companies,title,aka_name,cast_info,info_type
 where (char_name.id = cast_info.person_role_id) And (name.id = cast_info.person_id) And (aka_name.person_id = name.id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (movie_info.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (movie_companies.movie_id = title.id) And (title.id = cast_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (info_type.info = 'release dates')"
257,"select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.role_id AS role_id, char_name.id AS char_name_id_4, company_name.country_code AS country_code, company_name.id AS company_name_id_6, info_type.id AS info_type_id_7, info_type.info AS info, movie_info.movie_id AS movie_info_movie_id_9, name.gender AS gender, name.name AS name, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from char_name,name,role_type,movie_info,movie_companies,title,company_name,aka_name,cast_info,info_type
 where (char_name.id = cast_info.person_role_id) And (name.id = cast_info.person_id) And (aka_name.person_id = name.id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (movie_info.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (movie_companies.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (title.id = cast_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (info_type.info = 'release dates')","create materialized view if not exists mv257 as select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.role_id AS role_id, char_name.id AS char_name_id_4, company_name.country_code AS country_code, company_name.id AS company_name_id_6, info_type.id AS info_type_id_7, info_type.info AS info, movie_info.movie_id AS movie_info_movie_id_9, name.gender AS gender, name.name AS name, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from char_name,name,role_type,movie_info,movie_companies,title,company_name,aka_name,cast_info,info_type
 where (char_name.id = cast_info.person_role_id) And (name.id = cast_info.person_id) And (aka_name.person_id = name.id) And (cast_info.role_id = role_type.id) And (role_type.role = 'actress') And (movie_info.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (movie_companies.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (title.id = cast_info.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (info_type.info = 'release dates')"
258,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, keyword.id AS keyword_id_5, keyword.keyword AS keyword, link_type.id AS link_type_id_7, link_type.link AS link, movie_companies.movie_id AS movie_companies_movie_id_9, movie_companies.note AS note, movie_info.info AS info, movie_keyword.movie_id AS movie_keyword_movie_id_12
 from link_type,movie_info,keyword,movie_companies,company_type,company_name,movie_link,movie_keyword
 where (movie_link.link_type_id = link_type.id) And (link_type.link like '%follow%') And (movie_link.movie_id = movie_info.movie_id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'sequel') And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note IS NULL) And (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (movie_keyword.movie_id = movie_link.movie_id)","create materialized view if not exists mv258 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, keyword.id AS keyword_id_5, keyword.keyword AS keyword, link_type.id AS link_type_id_7, link_type.link AS link, movie_companies.movie_id AS movie_companies_movie_id_9, movie_companies.note AS note, movie_info.info AS info, movie_keyword.movie_id AS movie_keyword_movie_id_12
 from link_type,movie_info,keyword,movie_companies,company_type,company_name,movie_link,movie_keyword
 where (movie_link.link_type_id = link_type.id) And (link_type.link like '%follow%') And (movie_link.movie_id = movie_info.movie_id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'sequel') And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note IS NULL) And (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (movie_keyword.movie_id = movie_link.movie_id)"
259,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, keyword.id AS keyword_id_5, keyword.keyword AS keyword, link_type.id AS link_type_id_7, link_type.link AS link, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info, title.production_year AS production_year, title.title AS title
 from link_type,movie_info,keyword,movie_companies,company_type,title,company_name,movie_link,movie_keyword
 where (movie_link.link_type_id = link_type.id) And (link_type.link like '%follow%') And (movie_link.movie_id = movie_info.movie_id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'sequel') And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note IS NULL) And (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (title.id = movie_keyword.movie_id) And (movie_link.movie_id = title.id) And (movie_keyword.movie_id = movie_link.movie_id)","create materialized view if not exists mv259 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, keyword.id AS keyword_id_5, keyword.keyword AS keyword, link_type.id AS link_type_id_7, link_type.link AS link, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info, title.production_year AS production_year, title.title AS title
 from link_type,movie_info,keyword,movie_companies,company_type,title,company_name,movie_link,movie_keyword
 where (movie_link.link_type_id = link_type.id) And (link_type.link like '%follow%') And (movie_link.movie_id = movie_info.movie_id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German')) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'sequel') And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note IS NULL) And (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (title.id = movie_keyword.movie_id) And (movie_link.movie_id = title.id) And (movie_keyword.movie_id = movie_link.movie_id)"
260,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, keyword.id AS keyword_id_5, keyword.keyword AS keyword, link_type.id AS link_type_id_7, link_type.link AS link, movie_companies.movie_id AS movie_companies_movie_id_9, movie_companies.note AS note, movie_info.info AS info, movie_keyword.movie_id AS movie_keyword_movie_id_12
 from link_type,movie_info,keyword,movie_companies,company_type,company_name,movie_link,movie_keyword
 where (movie_link.link_type_id = link_type.id) And (link_type.link like '%follow%') And (movie_link.movie_id = movie_info.movie_id) And (movie_info.info in ('Germany', 'German')) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'sequel') And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note IS NULL) And (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (movie_keyword.movie_id = movie_link.movie_id)","create materialized view if not exists mv260 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, keyword.id AS keyword_id_5, keyword.keyword AS keyword, link_type.id AS link_type_id_7, link_type.link AS link, movie_companies.movie_id AS movie_companies_movie_id_9, movie_companies.note AS note, movie_info.info AS info, movie_keyword.movie_id AS movie_keyword_movie_id_12
 from link_type,movie_info,keyword,movie_companies,company_type,company_name,movie_link,movie_keyword
 where (movie_link.link_type_id = link_type.id) And (link_type.link like '%follow%') And (movie_link.movie_id = movie_info.movie_id) And (movie_info.info in ('Germany', 'German')) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'sequel') And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note IS NULL) And (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (movie_keyword.movie_id = movie_link.movie_id)"
261,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, keyword.id AS keyword_id_5, keyword.keyword AS keyword, link_type.id AS link_type_id_7, link_type.link AS link, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info, title.production_year AS production_year, title.title AS title
 from link_type,movie_info,keyword,movie_companies,company_type,title,company_name,movie_link,movie_keyword
 where (movie_link.link_type_id = link_type.id) And (link_type.link like '%follow%') And (movie_link.movie_id = movie_info.movie_id) And (movie_info.info in ('Germany', 'German')) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'sequel') And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note IS NULL) And (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (title.id = movie_keyword.movie_id) And (movie_link.movie_id = title.id) And (movie_keyword.movie_id = movie_link.movie_id)","create materialized view if not exists mv261 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, keyword.id AS keyword_id_5, keyword.keyword AS keyword, link_type.id AS link_type_id_7, link_type.link AS link, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info, title.production_year AS production_year, title.title AS title
 from link_type,movie_info,keyword,movie_companies,company_type,title,company_name,movie_link,movie_keyword
 where (movie_link.link_type_id = link_type.id) And (link_type.link like '%follow%') And (movie_link.movie_id = movie_info.movie_id) And (movie_info.info in ('Germany', 'German')) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'sequel') And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note IS NULL) And (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (title.id = movie_keyword.movie_id) And (movie_link.movie_id = title.id) And (movie_keyword.movie_id = movie_link.movie_id)"
262,"select link_type.id AS id, link_type.link AS link, movie_info.info AS info, movie_info.movie_id AS movie_id
 from link_type,movie_info,movie_link
 where (movie_link.link_type_id = link_type.id) And (link_type.link like '%follow%') And (movie_info.movie_id = movie_link.movie_id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English'))","create materialized view if not exists mv262 as select link_type.id AS id, link_type.link AS link, movie_info.info AS info, movie_info.movie_id AS movie_id
 from link_type,movie_info,movie_link
 where (movie_link.link_type_id = link_type.id) And (link_type.link like '%follow%') And (movie_info.movie_id = movie_link.movie_id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English'))"
263,"select keyword.id AS keyword_id_0, keyword.keyword AS keyword, link_type.id AS link_type_id_2, link_type.link AS link, movie_info.info AS info, movie_info.movie_id AS movie_id
 from link_type,movie_info,keyword,movie_link,movie_keyword
 where (movie_link.link_type_id = link_type.id) And (link_type.link like '%follow%') And (movie_info.movie_id = movie_link.movie_id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'sequel') And (movie_keyword.movie_id = movie_link.movie_id)","create materialized view if not exists mv263 as select keyword.id AS keyword_id_0, keyword.keyword AS keyword, link_type.id AS link_type_id_2, link_type.link AS link, movie_info.info AS info, movie_info.movie_id AS movie_id
 from link_type,movie_info,keyword,movie_link,movie_keyword
 where (movie_link.link_type_id = link_type.id) And (link_type.link like '%follow%') And (movie_info.movie_id = movie_link.movie_id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'sequel') And (movie_keyword.movie_id = movie_link.movie_id)"
264,"select keyword.id AS keyword_id_0, keyword.keyword AS keyword, link_type.id AS link_type_id_2, link_type.link AS link, movie_info.info AS info, movie_info.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
 from link_type,movie_info,keyword,title,movie_link,movie_keyword
 where (movie_link.link_type_id = link_type.id) And (link_type.link like '%follow%') And (movie_info.movie_id = movie_link.movie_id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'sequel') And (title.id = movie_keyword.movie_id) And (movie_link.movie_id = title.id) And (movie_keyword.movie_id = movie_link.movie_id)","create materialized view if not exists mv264 as select keyword.id AS keyword_id_0, keyword.keyword AS keyword, link_type.id AS link_type_id_2, link_type.link AS link, movie_info.info AS info, movie_info.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
 from link_type,movie_info,keyword,title,movie_link,movie_keyword
 where (movie_link.link_type_id = link_type.id) And (link_type.link like '%follow%') And (movie_info.movie_id = movie_link.movie_id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'sequel') And (title.id = movie_keyword.movie_id) And (movie_link.movie_id = title.id) And (movie_keyword.movie_id = movie_link.movie_id)"
265,"select company_type.id AS company_type_id_0, company_type.kind AS kind, keyword.id AS keyword_id_2, keyword.keyword AS keyword, link_type.id AS link_type_id_4, link_type.link AS link, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info, title.production_year AS production_year, title.title AS title
 from link_type,movie_info,keyword,movie_companies,title,company_type,movie_link,movie_keyword
 where (movie_link.link_type_id = link_type.id) And (link_type.link like '%follow%') And (movie_info.movie_id = movie_link.movie_id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'sequel') And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note IS NULL) And (title.id = movie_keyword.movie_id) And (movie_link.movie_id = title.id) And (company_type.kind = 'production companies') And (movie_keyword.movie_id = movie_link.movie_id)","create materialized view if not exists mv265 as select company_type.id AS company_type_id_0, company_type.kind AS kind, keyword.id AS keyword_id_2, keyword.keyword AS keyword, link_type.id AS link_type_id_4, link_type.link AS link, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info, title.production_year AS production_year, title.title AS title
 from link_type,movie_info,keyword,movie_companies,title,company_type,movie_link,movie_keyword
 where (movie_link.link_type_id = link_type.id) And (link_type.link like '%follow%') And (movie_info.movie_id = movie_link.movie_id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'sequel') And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note IS NULL) And (title.id = movie_keyword.movie_id) And (movie_link.movie_id = title.id) And (company_type.kind = 'production companies') And (movie_keyword.movie_id = movie_link.movie_id)"
266,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, keyword.id AS keyword_id_5, keyword.keyword AS keyword, link_type.id AS link_type_id_7, link_type.link AS link, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info, title.production_year AS production_year, title.title AS title
 from link_type,movie_info,keyword,movie_companies,title,company_type,company_name,movie_link,movie_keyword
 where (movie_link.link_type_id = link_type.id) And (link_type.link like '%follow%') And (movie_link.movie_id = movie_info.movie_id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'sequel') And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note IS NULL) And (company_name.id = movie_companies.company_id) And (title.id = movie_keyword.movie_id) And (movie_link.movie_id = title.id) And (company_type.kind = 'production companies') And (movie_info.movie_id = movie_link.movie_id) And (movie_keyword.movie_id = movie_link.movie_id)","create materialized view if not exists mv266 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, company_type.kind AS kind, keyword.id AS keyword_id_5, keyword.keyword AS keyword, link_type.id AS link_type_id_7, link_type.link AS link, movie_companies.movie_id AS movie_id, movie_companies.note AS note, movie_info.info AS info, title.production_year AS production_year, title.title AS title
 from link_type,movie_info,keyword,movie_companies,title,company_type,company_name,movie_link,movie_keyword
 where (movie_link.link_type_id = link_type.id) And (link_type.link like '%follow%') And (movie_link.movie_id = movie_info.movie_id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'sequel') And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note IS NULL) And (company_name.id = movie_companies.company_id) And (title.id = movie_keyword.movie_id) And (movie_link.movie_id = title.id) And (company_type.kind = 'production companies') And (movie_info.movie_id = movie_link.movie_id) And (movie_keyword.movie_id = movie_link.movie_id)"
267,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info_idx.info AS movie_info_idx_info_2, movie_info_idx.movie_id AS movie_id
 from info_type,movie_info_idx
 where (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'rating') And (movie_info_idx.info < '7.0')","create materialized view if not exists mv267 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info_idx.info AS movie_info_idx_info_2, movie_info_idx.movie_id AS movie_id
 from info_type,movie_info_idx
 where (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'rating') And (movie_info_idx.info < '7.0')"
268,"select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, kind_type.id AS kind_type_id_4, kind_type.kind AS kind, movie_info_idx.info AS movie_info_idx_info_6, movie_info_idx.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,keyword,title,info_type,kind_type
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info < '7.0') And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence')) And (kind_type.id = title.kind_id) And (info_type.info = 'rating')","create materialized view if not exists mv268 as select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, kind_type.id AS kind_type_id_4, kind_type.kind AS kind, movie_info_idx.info AS movie_info_idx_info_6, movie_info_idx.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,keyword,title,info_type,kind_type
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info < '7.0') And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence')) And (kind_type.id = title.kind_id) And (info_type.info = 'rating')"
269,"select info_type.info AS info_type_info_0, movie_info.info AS movie_info_info_1, movie_info.movie_id AS movie_id
 from movie_info,info_type
 where (info_type.id = movie_info.info_type_id) And (movie_info.info in ('Germany', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (info_type.info = 'countries')","create materialized view if not exists mv269 as select info_type.info AS info_type_info_0, movie_info.info AS movie_info_info_1, movie_info.movie_id AS movie_id
 from movie_info,info_type
 where (info_type.id = movie_info.info_type_id) And (movie_info.info in ('Germany', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (info_type.info = 'countries')"
270,"select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, kind_type.id AS kind_type_id_4, kind_type.kind AS kind, movie_info.info AS movie_info_info_6, movie_info.info_type_id AS info_type_id, movie_info.movie_id AS movie_info_movie_id_8, movie_info_idx.info AS movie_info_idx_info_9, movie_keyword.movie_id AS movie_keyword_movie_id_10, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,movie_info,keyword,title,info_type,kind_type
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info < '7.0') And (movie_info.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (movie_info.info in ('Germany', 'German', 'USA', 'American')) And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence')) And (kind_type.id = title.kind_id) And (info_type.info = 'countries') And (info_type.info = 'rating')","create materialized view if not exists mv270 as select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, kind_type.id AS kind_type_id_4, kind_type.kind AS kind, movie_info.info AS movie_info_info_6, movie_info.info_type_id AS info_type_id, movie_info.movie_id AS movie_info_movie_id_8, movie_info_idx.info AS movie_info_idx_info_9, movie_keyword.movie_id AS movie_keyword_movie_id_10, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,movie_info,keyword,title,info_type,kind_type
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info < '7.0') And (movie_info.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (movie_info.info in ('Germany', 'German', 'USA', 'American')) And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence')) And (kind_type.id = title.kind_id) And (info_type.info = 'countries') And (info_type.info = 'rating')"
271,"select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, kind_type.id AS kind_type_id_4, kind_type.kind AS kind, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_companies_movie_id_8, movie_companies.note AS note, movie_info.info AS movie_info_info_10, movie_info.info_type_id AS info_type_id, movie_info_idx.info AS movie_info_idx_info_12, movie_keyword.movie_id AS movie_keyword_movie_id_13, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,movie_info,keyword,movie_companies,title,info_type,kind_type
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info < '7.0') And (movie_info.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (movie_info.info in ('Germany', 'German', 'USA', 'American')) And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence')) And (title.id = movie_companies.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (kind_type.id = title.kind_id) And (info_type.info = 'countries') And (info_type.info = 'rating')","create materialized view if not exists mv271 as select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, kind_type.id AS kind_type_id_4, kind_type.kind AS kind, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_companies_movie_id_8, movie_companies.note AS note, movie_info.info AS movie_info_info_10, movie_info.info_type_id AS info_type_id, movie_info_idx.info AS movie_info_idx_info_12, movie_keyword.movie_id AS movie_keyword_movie_id_13, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,movie_info,keyword,movie_companies,title,info_type,kind_type
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info < '7.0') And (movie_info.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (movie_info.info in ('Germany', 'German', 'USA', 'American')) And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence')) And (title.id = movie_companies.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (kind_type.id = title.kind_id) And (info_type.info = 'countries') And (info_type.info = 'rating')"
272,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, keyword.id AS keyword_id_5, keyword.keyword AS keyword, kind_type.id AS kind_type_id_7, kind_type.kind AS kind, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_companies_movie_id_10, movie_companies.note AS note, movie_info.info AS movie_info_info_12, movie_info.info_type_id AS info_type_id, movie_info_idx.info AS movie_info_idx_info_14, movie_keyword.movie_id AS movie_keyword_movie_id_15, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,movie_info,keyword,movie_companies,title,company_name,info_type,kind_type
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info < '7.0') And (movie_info.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (movie_info.info in ('Germany', 'German', 'USA', 'American')) And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence')) And (title.id = movie_companies.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (company_name.id = movie_companies.company_id) And (kind_type.id = title.kind_id) And (info_type.info = 'countries') And (info_type.info = 'rating')","create materialized view if not exists mv272 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, keyword.id AS keyword_id_5, keyword.keyword AS keyword, kind_type.id AS kind_type_id_7, kind_type.kind AS kind, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_companies_movie_id_10, movie_companies.note AS note, movie_info.info AS movie_info_info_12, movie_info.info_type_id AS info_type_id, movie_info_idx.info AS movie_info_idx_info_14, movie_keyword.movie_id AS movie_keyword_movie_id_15, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,movie_info,keyword,movie_companies,title,company_name,info_type,kind_type
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info < '7.0') And (movie_info.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (movie_info.info in ('Germany', 'German', 'USA', 'American')) And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence')) And (title.id = movie_companies.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (company_name.id = movie_companies.company_id) And (kind_type.id = title.kind_id) And (info_type.info = 'countries') And (info_type.info = 'rating')"
273,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, keyword.id AS keyword_id_6, keyword.keyword AS keyword, kind_type.id AS kind_type_id_8, kind_type.kind AS kind, movie_companies.movie_id AS movie_companies_movie_id_10, movie_companies.note AS note, movie_info.info AS movie_info_info_12, movie_info.info_type_id AS info_type_id, movie_info_idx.info AS movie_info_idx_info_14, movie_keyword.movie_id AS movie_keyword_movie_id_15, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,movie_info,keyword,movie_companies,title,company_type,company_name,info_type,kind_type
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info < '7.0') And (movie_info.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (movie_info.info in ('Germany', 'German', 'USA', 'American')) And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence')) And (title.id = movie_companies.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (kind_type.id = title.kind_id) And (info_type.info = 'countries') And (info_type.info = 'rating')","create materialized view if not exists mv273 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, company_type.id AS company_type_id_3, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, keyword.id AS keyword_id_6, keyword.keyword AS keyword, kind_type.id AS kind_type_id_8, kind_type.kind AS kind, movie_companies.movie_id AS movie_companies_movie_id_10, movie_companies.note AS note, movie_info.info AS movie_info_info_12, movie_info.info_type_id AS info_type_id, movie_info_idx.info AS movie_info_idx_info_14, movie_keyword.movie_id AS movie_keyword_movie_id_15, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,movie_info,keyword,movie_companies,title,company_type,company_name,info_type,kind_type
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info < '7.0') And (movie_info.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (movie_info.info in ('Germany', 'German', 'USA', 'American')) And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence')) And (title.id = movie_companies.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (kind_type.id = title.kind_id) And (info_type.info = 'countries') And (info_type.info = 'rating')"
274,"select comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id
 from comp_cast_type,complete_cast
 where (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'complete+verified')","create materialized view if not exists mv274 as select comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id
 from comp_cast_type,complete_cast
 where (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'complete+verified')"
275,"select comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id
 from movie_companies,comp_cast_type,complete_cast
 where (movie_companies.movie_id = complete_cast.movie_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'complete+verified')","create materialized view if not exists mv275 as select comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id
 from movie_companies,comp_cast_type,complete_cast
 where (movie_companies.movie_id = complete_cast.movie_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'complete+verified')"
276,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_info.info AS movie_info_info_7, movie_info.note AS note
 from movie_info,movie_companies,comp_cast_type,complete_cast,info_type
 where (movie_info.movie_id = movie_companies.movie_id) And (info_type.id = movie_info.info_type_id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%') And (movie_companies.movie_id = complete_cast.movie_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'complete+verified') And (info_type.info = 'release dates')","create materialized view if not exists mv276 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_info.info AS movie_info_info_7, movie_info.note AS note
 from movie_info,movie_companies,comp_cast_type,complete_cast,info_type
 where (movie_info.movie_id = movie_companies.movie_id) And (info_type.id = movie_info.info_type_id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%') And (movie_companies.movie_id = complete_cast.movie_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'complete+verified') And (info_type.info = 'release dates')"
277,"select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id
 from keyword,movie_keyword
 where (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('nerd', 'loner', 'alienation', 'dignity'))","create materialized view if not exists mv277 as select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id
 from keyword,movie_keyword
 where (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('nerd', 'loner', 'alienation', 'dignity'))"
278,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, keyword.id AS keyword_id_5, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_info.info AS movie_info_info_9, movie_info.note AS note
 from movie_info,keyword,movie_companies,comp_cast_type,complete_cast,info_type,movie_keyword
 where (movie_info.movie_id = movie_companies.movie_id) And (movie_keyword.movie_id = movie_info.movie_id) And (info_type.id = movie_info.info_type_id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%') And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('nerd', 'loner', 'alienation', 'dignity')) And (movie_companies.movie_id = complete_cast.movie_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'complete+verified') And (info_type.info = 'release dates')","create materialized view if not exists mv278 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, keyword.id AS keyword_id_5, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_info.info AS movie_info_info_9, movie_info.note AS note
 from movie_info,keyword,movie_companies,comp_cast_type,complete_cast,info_type,movie_keyword
 where (movie_info.movie_id = movie_companies.movie_id) And (movie_keyword.movie_id = movie_info.movie_id) And (info_type.id = movie_info.info_type_id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%') And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('nerd', 'loner', 'alienation', 'dignity')) And (movie_companies.movie_id = complete_cast.movie_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'complete+verified') And (info_type.info = 'release dates')"
279,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, company_name.country_code AS country_code, company_name.id AS company_name_id_3, complete_cast.movie_id AS movie_id, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, keyword.id AS keyword_id_7, keyword.keyword AS keyword, movie_companies.company_type_id AS company_type_id, movie_info.info AS movie_info_info_10, movie_info.note AS note
 from movie_info,keyword,movie_companies,company_name,comp_cast_type,complete_cast,info_type,movie_keyword
 where (movie_info.movie_id = movie_companies.movie_id) And (movie_keyword.movie_id = movie_info.movie_id) And (info_type.id = movie_info.info_type_id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%') And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('nerd', 'loner', 'alienation', 'dignity')) And (movie_companies.movie_id = complete_cast.movie_id) And (company_name.id = movie_companies.company_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'complete+verified') And (info_type.info = 'release dates')","create materialized view if not exists mv279 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, company_name.country_code AS country_code, company_name.id AS company_name_id_3, complete_cast.movie_id AS movie_id, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, keyword.id AS keyword_id_7, keyword.keyword AS keyword, movie_companies.company_type_id AS company_type_id, movie_info.info AS movie_info_info_10, movie_info.note AS note
 from movie_info,keyword,movie_companies,company_name,comp_cast_type,complete_cast,info_type,movie_keyword
 where (movie_info.movie_id = movie_companies.movie_id) And (movie_keyword.movie_id = movie_info.movie_id) And (info_type.id = movie_info.info_type_id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%') And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('nerd', 'loner', 'alienation', 'dignity')) And (movie_companies.movie_id = complete_cast.movie_id) And (company_name.id = movie_companies.company_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'complete+verified') And (info_type.info = 'release dates')"
280,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_type.id AS company_type_id_4, complete_cast.movie_id AS movie_id, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, keyword.id AS keyword_id_8, keyword.keyword AS keyword, movie_info.info AS movie_info_info_10, movie_info.note AS note
 from movie_info,keyword,movie_companies,company_type,company_name,comp_cast_type,complete_cast,info_type,movie_keyword
 where (movie_info.movie_id = movie_companies.movie_id) And (movie_keyword.movie_id = movie_info.movie_id) And (info_type.id = movie_info.info_type_id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%') And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('nerd', 'loner', 'alienation', 'dignity')) And (movie_companies.movie_id = complete_cast.movie_id) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'complete+verified') And (info_type.info = 'release dates')","create materialized view if not exists mv280 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_type.id AS company_type_id_4, complete_cast.movie_id AS movie_id, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, keyword.id AS keyword_id_8, keyword.keyword AS keyword, movie_info.info AS movie_info_info_10, movie_info.note AS note
 from movie_info,keyword,movie_companies,company_type,company_name,comp_cast_type,complete_cast,info_type,movie_keyword
 where (movie_info.movie_id = movie_companies.movie_id) And (movie_keyword.movie_id = movie_info.movie_id) And (info_type.id = movie_info.info_type_id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%') And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('nerd', 'loner', 'alienation', 'dignity')) And (movie_companies.movie_id = complete_cast.movie_id) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'complete+verified') And (info_type.info = 'release dates')"
281,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_type.id AS company_type_id_4, complete_cast.movie_id AS complete_cast_movie_id_5, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, keyword.id AS keyword_id_8, keyword.keyword AS keyword, movie_info.info AS movie_info_info_10, movie_info.movie_id AS movie_info_movie_id_11, movie_info.note AS note, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
 from movie_info,keyword,movie_companies,company_type,title,company_name,comp_cast_type,complete_cast,info_type,movie_keyword
 where (movie_info.movie_id = title.id) And (movie_info.movie_id = movie_companies.movie_id) And (movie_keyword.movie_id = movie_info.movie_id) And (info_type.id = movie_info.info_type_id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%') And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('nerd', 'loner', 'alienation', 'dignity')) And (movie_companies.movie_id = complete_cast.movie_id) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (title.id = movie_keyword.movie_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'complete+verified') And (info_type.info = 'release dates')","create materialized view if not exists mv281 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_type.id AS company_type_id_4, complete_cast.movie_id AS complete_cast_movie_id_5, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, keyword.id AS keyword_id_8, keyword.keyword AS keyword, movie_info.info AS movie_info_info_10, movie_info.movie_id AS movie_info_movie_id_11, movie_info.note AS note, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
 from movie_info,keyword,movie_companies,company_type,title,company_name,comp_cast_type,complete_cast,info_type,movie_keyword
 where (movie_info.movie_id = title.id) And (movie_info.movie_id = movie_companies.movie_id) And (movie_keyword.movie_id = movie_info.movie_id) And (info_type.id = movie_info.info_type_id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%') And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('nerd', 'loner', 'alienation', 'dignity')) And (movie_companies.movie_id = complete_cast.movie_id) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (title.id = movie_keyword.movie_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'complete+verified') And (info_type.info = 'release dates')"
282,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_type.id AS company_type_id_4, complete_cast.movie_id AS complete_cast_movie_id_5, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, keyword.id AS keyword_id_8, keyword.keyword AS keyword, kind_type.id AS kind_type_id_10, kind_type.kind AS kind_type_kind_11, movie_info.info AS movie_info_info_12, movie_info.movie_id AS movie_info_movie_id_13, movie_info.note AS note, title.production_year AS production_year, title.title AS title
 from movie_info,keyword,movie_companies,company_type,title,company_name,comp_cast_type,complete_cast,kind_type,info_type,movie_keyword
 where (movie_info.movie_id = title.id) And (movie_info.movie_id = movie_companies.movie_id) And (movie_keyword.movie_id = movie_info.movie_id) And (info_type.id = movie_info.info_type_id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%') And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('nerd', 'loner', 'alienation', 'dignity')) And (movie_companies.movie_id = complete_cast.movie_id) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (title.id = movie_keyword.movie_id) And (kind_type.id = title.kind_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'complete+verified') And (info_type.info = 'release dates')","create materialized view if not exists mv282 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_type.id AS company_type_id_4, complete_cast.movie_id AS complete_cast_movie_id_5, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, keyword.id AS keyword_id_8, keyword.keyword AS keyword, kind_type.id AS kind_type_id_10, kind_type.kind AS kind_type_kind_11, movie_info.info AS movie_info_info_12, movie_info.movie_id AS movie_info_movie_id_13, movie_info.note AS note, title.production_year AS production_year, title.title AS title
 from movie_info,keyword,movie_companies,company_type,title,company_name,comp_cast_type,complete_cast,kind_type,info_type,movie_keyword
 where (movie_info.movie_id = title.id) And (movie_info.movie_id = movie_companies.movie_id) And (movie_keyword.movie_id = movie_info.movie_id) And (info_type.id = movie_info.info_type_id) And (movie_info.note like '%internet%')  And  (movie_info.info like 'USA:% 200%') And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('nerd', 'loner', 'alienation', 'dignity')) And (movie_companies.movie_id = complete_cast.movie_id) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (title.id = movie_keyword.movie_id) And (kind_type.id = title.kind_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'complete+verified') And (info_type.info = 'release dates')"
283,"select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id
 from keyword,movie_keyword
 where (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('hero', 'martial-arts', 'hand-to-hand-combat'))","create materialized view if not exists mv283 as select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id
 from keyword,movie_keyword
 where (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('hero', 'martial-arts', 'hand-to-hand-combat'))"
284,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, keyword.id AS id, keyword.keyword AS keyword
 from keyword,cast_info,movie_keyword
 where (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('hero', 'martial-arts', 'hand-to-hand-combat')) And (cast_info.movie_id = movie_keyword.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)'))","create materialized view if not exists mv284 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, keyword.id AS id, keyword.keyword AS keyword
 from keyword,cast_info,movie_keyword
 where (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('hero', 'martial-arts', 'hand-to-hand-combat')) And (cast_info.movie_id = movie_keyword.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)'))"
285,"select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, keyword.id AS id, keyword.keyword AS keyword
 from aka_name,cast_info,keyword,movie_keyword
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_keyword.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('hero', 'martial-arts', 'hand-to-hand-combat'))","create materialized view if not exists mv285 as select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, keyword.id AS id, keyword.keyword AS keyword
 from aka_name,cast_info,keyword,movie_keyword
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_keyword.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('hero', 'martial-arts', 'hand-to-hand-combat'))"
286,"select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, keyword.id AS id, keyword.keyword AS keyword
 from char_name,movie_keyword,aka_name,cast_info,keyword
 where (char_name.id = cast_info.person_role_id) And (cast_info.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (keyword.keyword in ('hero', 'martial-arts', 'hand-to-hand-combat'))","create materialized view if not exists mv286 as select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, keyword.id AS id, keyword.keyword AS keyword
 from char_name,movie_keyword,aka_name,cast_info,keyword
 where (char_name.id = cast_info.person_role_id) And (cast_info.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (keyword.keyword in ('hero', 'martial-arts', 'hand-to-hand-combat'))"
287,"select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, keyword.id AS id, keyword.keyword AS keyword, title.production_year AS production_year, title.title AS title
 from char_name,movie_keyword,title,aka_name,cast_info,keyword
 where (char_name.id = cast_info.person_role_id) And (title.id = movie_keyword.movie_id) And (cast_info.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (cast_info.movie_id = title.id) And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (keyword.keyword in ('hero', 'martial-arts', 'hand-to-hand-combat'))","create materialized view if not exists mv287 as select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, keyword.id AS id, keyword.keyword AS keyword, title.production_year AS production_year, title.title AS title
 from char_name,movie_keyword,title,aka_name,cast_info,keyword
 where (char_name.id = cast_info.person_role_id) And (title.id = movie_keyword.movie_id) And (cast_info.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (cast_info.movie_id = title.id) And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (keyword.keyword in ('hero', 'martial-arts', 'hand-to-hand-combat'))"
288,"select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, keyword.id AS id, keyword.keyword AS keyword, movie_info.info AS info, movie_info.info_type_id AS info_type_id, movie_info.movie_id AS movie_info_movie_id_10, title.production_year AS production_year, title.title AS title
 from movie_keyword,char_name,movie_info,title,aka_name,cast_info,keyword
 where (title.id = movie_keyword.movie_id) And (cast_info.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (char_name.id = cast_info.person_role_id) And (movie_info.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%201%')) Or ((movie_info.info = '__LIKE__USA:%201%'))) And (cast_info.movie_id = title.id) And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (keyword.keyword in ('hero', 'martial-arts', 'hand-to-hand-combat'))","create materialized view if not exists mv288 as select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, keyword.id AS id, keyword.keyword AS keyword, movie_info.info AS info, movie_info.info_type_id AS info_type_id, movie_info.movie_id AS movie_info_movie_id_10, title.production_year AS production_year, title.title AS title
 from movie_keyword,char_name,movie_info,title,aka_name,cast_info,keyword
 where (title.id = movie_keyword.movie_id) And (cast_info.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (char_name.id = cast_info.person_role_id) And (movie_info.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%201%')) Or ((movie_info.info = '__LIKE__USA:%201%'))) And (cast_info.movie_id = title.id) And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (keyword.keyword in ('hero', 'martial-arts', 'hand-to-hand-combat'))"
289,"select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, keyword.id AS keyword_id_8, keyword.keyword AS keyword, movie_info.info AS movie_info_info_10, movie_info.movie_id AS movie_info_movie_id_11, title.production_year AS production_year, title.title AS title
 from movie_keyword,char_name,movie_info,title,aka_name,cast_info,info_type,keyword
 where (title.id = movie_keyword.movie_id) And (cast_info.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (char_name.id = cast_info.person_role_id) And (movie_info.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%201%')) Or ((movie_info.info = '__LIKE__USA:%201%'))) And (info_type.id = movie_info.info_type_id) And (cast_info.movie_id = title.id) And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (keyword.keyword in ('hero', 'martial-arts', 'hand-to-hand-combat'))","create materialized view if not exists mv289 as select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, keyword.id AS keyword_id_8, keyword.keyword AS keyword, movie_info.info AS movie_info_info_10, movie_info.movie_id AS movie_info_movie_id_11, title.production_year AS production_year, title.title AS title
 from movie_keyword,char_name,movie_info,title,aka_name,cast_info,info_type,keyword
 where (title.id = movie_keyword.movie_id) And (cast_info.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (char_name.id = cast_info.person_role_id) And (movie_info.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%201%')) Or ((movie_info.info = '__LIKE__USA:%201%'))) And (info_type.id = movie_info.info_type_id) And (cast_info.movie_id = title.id) And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (keyword.keyword in ('hero', 'martial-arts', 'hand-to-hand-combat'))"
290,"select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, keyword.id AS keyword_id_8, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_info.info AS movie_info_info_11, movie_keyword.movie_id AS movie_keyword_movie_id_12, title.production_year AS production_year, title.title AS title
 from char_name,movie_info,keyword,movie_companies,title,aka_name,cast_info,info_type,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (movie_info.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%201%')) Or ((movie_info.info = '__LIKE__USA:%201%'))) And (info_type.id = movie_info.info_type_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('hero', 'martial-arts', 'hand-to-hand-combat')) And (movie_companies.movie_id = title.id) And (title.id = movie_keyword.movie_id) And (cast_info.movie_id = title.id) And (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_keyword.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)'))","create materialized view if not exists mv290 as select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, keyword.id AS keyword_id_8, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_info.info AS movie_info_info_11, movie_keyword.movie_id AS movie_keyword_movie_id_12, title.production_year AS production_year, title.title AS title
 from char_name,movie_info,keyword,movie_companies,title,aka_name,cast_info,info_type,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (movie_info.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%201%')) Or ((movie_info.info = '__LIKE__USA:%201%'))) And (info_type.id = movie_info.info_type_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('hero', 'martial-arts', 'hand-to-hand-combat')) And (movie_companies.movie_id = title.id) And (title.id = movie_keyword.movie_id) And (cast_info.movie_id = title.id) And (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_keyword.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)'))"
291,"select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, company_name.country_code AS country_code, company_name.id AS company_name_id_7, info_type.id AS info_type_id_8, info_type.info AS info_type_info_9, keyword.id AS keyword_id_10, keyword.keyword AS keyword, movie_info.info AS movie_info_info_12, movie_keyword.movie_id AS movie_keyword_movie_id_13, title.production_year AS production_year, title.title AS title
 from char_name,movie_info,keyword,movie_companies,title,company_name,aka_name,cast_info,info_type,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (movie_info.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%201%')) Or ((movie_info.info = '__LIKE__USA:%201%'))) And (info_type.id = movie_info.info_type_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('hero', 'martial-arts', 'hand-to-hand-combat')) And (movie_companies.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (title.id = movie_keyword.movie_id) And (cast_info.movie_id = title.id) And (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_keyword.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)'))","create materialized view if not exists mv291 as select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, company_name.country_code AS country_code, company_name.id AS company_name_id_7, info_type.id AS info_type_id_8, info_type.info AS info_type_info_9, keyword.id AS keyword_id_10, keyword.keyword AS keyword, movie_info.info AS movie_info_info_12, movie_keyword.movie_id AS movie_keyword_movie_id_13, title.production_year AS production_year, title.title AS title
 from char_name,movie_info,keyword,movie_companies,title,company_name,aka_name,cast_info,info_type,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (movie_info.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%201%')) Or ((movie_info.info = '__LIKE__USA:%201%'))) And (info_type.id = movie_info.info_type_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('hero', 'martial-arts', 'hand-to-hand-combat')) And (movie_companies.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (title.id = movie_keyword.movie_id) And (cast_info.movie_id = title.id) And (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_keyword.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)'))"
292,"select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, company_name.country_code AS country_code, company_name.id AS company_name_id_7, info_type.id AS info_type_id_8, info_type.info AS info_type_info_9, keyword.id AS keyword_id_10, keyword.keyword AS keyword, movie_info.info AS movie_info_info_12, movie_keyword.movie_id AS movie_keyword_movie_id_13, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from char_name,role_type,movie_info,keyword,movie_companies,title,company_name,aka_name,cast_info,info_type,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (role_type.id = cast_info.role_id) And (movie_info.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%201%')) Or ((movie_info.info = '__LIKE__USA:%201%'))) And (info_type.id = movie_info.info_type_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('hero', 'martial-arts', 'hand-to-hand-combat')) And (movie_companies.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (title.id = movie_keyword.movie_id) And (cast_info.movie_id = title.id) And (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_keyword.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)'))","create materialized view if not exists mv292 as select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, company_name.country_code AS country_code, company_name.id AS company_name_id_7, info_type.id AS info_type_id_8, info_type.info AS info_type_info_9, keyword.id AS keyword_id_10, keyword.keyword AS keyword, movie_info.info AS movie_info_info_12, movie_keyword.movie_id AS movie_keyword_movie_id_13, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from char_name,role_type,movie_info,keyword,movie_companies,title,company_name,aka_name,cast_info,info_type,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (role_type.id = cast_info.role_id) And (movie_info.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%201%')) Or ((movie_info.info = '__LIKE__USA:%201%'))) And (info_type.id = movie_info.info_type_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('hero', 'martial-arts', 'hand-to-hand-combat')) And (movie_companies.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (title.id = movie_keyword.movie_id) And (cast_info.movie_id = title.id) And (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_keyword.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)'))"
293,"select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, company_name.country_code AS country_code, company_name.id AS company_name_id_7, info_type.id AS info_type_id_8, info_type.info AS info_type_info_9, keyword.id AS keyword_id_10, keyword.keyword AS keyword, movie_info.info AS movie_info_info_12, movie_keyword.movie_id AS movie_keyword_movie_id_13, name.gender AS gender, name.id AS name_id_15, name.name AS name_name_16, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from char_name,name,role_type,movie_info,keyword,movie_companies,title,company_name,aka_name,cast_info,info_type,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (name.id = cast_info.person_id) And (role_type.id = cast_info.role_id) And (movie_info.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%201%')) Or ((movie_info.info = '__LIKE__USA:%201%'))) And (info_type.id = movie_info.info_type_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('hero', 'martial-arts', 'hand-to-hand-combat')) And (movie_companies.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (title.id = movie_keyword.movie_id) And (cast_info.movie_id = title.id) And (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_keyword.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)'))","create materialized view if not exists mv293 as select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, company_name.country_code AS country_code, company_name.id AS company_name_id_7, info_type.id AS info_type_id_8, info_type.info AS info_type_info_9, keyword.id AS keyword_id_10, keyword.keyword AS keyword, movie_info.info AS movie_info_info_12, movie_keyword.movie_id AS movie_keyword_movie_id_13, name.gender AS gender, name.id AS name_id_15, name.name AS name_name_16, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from char_name,name,role_type,movie_info,keyword,movie_companies,title,company_name,aka_name,cast_info,info_type,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (name.id = cast_info.person_id) And (role_type.id = cast_info.role_id) And (movie_info.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%201%')) Or ((movie_info.info = '__LIKE__USA:%201%'))) And (info_type.id = movie_info.info_type_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('hero', 'martial-arts', 'hand-to-hand-combat')) And (movie_companies.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (title.id = movie_keyword.movie_id) And (cast_info.movie_id = title.id) And (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_keyword.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)'))"
294,"select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id
 from keyword,movie_keyword
 where (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie'))","create materialized view if not exists mv294 as select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id
 from keyword,movie_keyword
 where (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie'))"
295,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, keyword.id AS id, keyword.keyword AS keyword
 from keyword,cast_info,movie_keyword
 where (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie')) And (cast_info.movie_id = movie_keyword.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)'))","create materialized view if not exists mv295 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, keyword.id AS id, keyword.keyword AS keyword
 from keyword,cast_info,movie_keyword
 where (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie')) And (cast_info.movie_id = movie_keyword.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)'))"
296,"select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, keyword.id AS id, keyword.keyword AS keyword
 from aka_name,cast_info,keyword,movie_keyword
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_keyword.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie'))","create materialized view if not exists mv296 as select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, keyword.id AS id, keyword.keyword AS keyword
 from aka_name,cast_info,keyword,movie_keyword
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_keyword.movie_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie'))"
297,"select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, keyword.id AS id, keyword.keyword AS keyword
 from char_name,movie_keyword,aka_name,cast_info,keyword
 where (char_name.id = cast_info.person_role_id) And (cast_info.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (keyword.keyword in ('hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie'))","create materialized view if not exists mv297 as select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, keyword.id AS id, keyword.keyword AS keyword
 from char_name,movie_keyword,aka_name,cast_info,keyword
 where (char_name.id = cast_info.person_role_id) And (cast_info.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (keyword.keyword in ('hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie'))"
298,"select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, keyword.id AS id, keyword.keyword AS keyword, title.production_year AS production_year, title.title AS title
 from char_name,movie_keyword,title,aka_name,cast_info,keyword
 where (char_name.id = cast_info.person_role_id) And (title.id = movie_keyword.movie_id) And (cast_info.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (cast_info.movie_id = title.id) And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (keyword.keyword in ('hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie'))","create materialized view if not exists mv298 as select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, keyword.id AS id, keyword.keyword AS keyword, title.production_year AS production_year, title.title AS title
 from char_name,movie_keyword,title,aka_name,cast_info,keyword
 where (char_name.id = cast_info.person_role_id) And (title.id = movie_keyword.movie_id) And (cast_info.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (cast_info.movie_id = title.id) And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (keyword.keyword in ('hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie'))"
299,"select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, keyword.id AS id, keyword.keyword AS keyword, movie_info.info AS info, movie_info.info_type_id AS info_type_id, movie_info.movie_id AS movie_info_movie_id_10, title.production_year AS production_year, title.title AS title
 from char_name,movie_keyword,movie_info,title,aka_name,cast_info,keyword
 where (char_name.id = cast_info.person_role_id) And (title.id = movie_keyword.movie_id) And (cast_info.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%201%')) Or ((movie_info.info = '__LIKE__USA:%201%'))) And (cast_info.movie_id = title.id) And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (keyword.keyword in ('hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie'))","create materialized view if not exists mv299 as select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, keyword.id AS id, keyword.keyword AS keyword, movie_info.info AS info, movie_info.info_type_id AS info_type_id, movie_info.movie_id AS movie_info_movie_id_10, title.production_year AS production_year, title.title AS title
 from char_name,movie_keyword,movie_info,title,aka_name,cast_info,keyword
 where (char_name.id = cast_info.person_role_id) And (title.id = movie_keyword.movie_id) And (cast_info.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%201%')) Or ((movie_info.info = '__LIKE__USA:%201%'))) And (cast_info.movie_id = title.id) And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (keyword.keyword in ('hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie'))"
300,"select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, keyword.id AS keyword_id_8, keyword.keyword AS keyword, movie_info.info AS movie_info_info_10, movie_info.movie_id AS movie_info_movie_id_11, title.production_year AS production_year, title.title AS title
 from char_name,movie_keyword,movie_info,title,aka_name,cast_info,info_type,keyword
 where (char_name.id = cast_info.person_role_id) And (title.id = movie_keyword.movie_id) And (cast_info.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%201%')) Or ((movie_info.info = '__LIKE__USA:%201%'))) And (info_type.id = movie_info.info_type_id) And (cast_info.movie_id = title.id) And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (keyword.keyword in ('hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie'))","create materialized view if not exists mv300 as select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, keyword.id AS keyword_id_8, keyword.keyword AS keyword, movie_info.info AS movie_info_info_10, movie_info.movie_id AS movie_info_movie_id_11, title.production_year AS production_year, title.title AS title
 from char_name,movie_keyword,movie_info,title,aka_name,cast_info,info_type,keyword
 where (char_name.id = cast_info.person_role_id) And (title.id = movie_keyword.movie_id) And (cast_info.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%201%')) Or ((movie_info.info = '__LIKE__USA:%201%'))) And (info_type.id = movie_info.info_type_id) And (cast_info.movie_id = title.id) And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (keyword.keyword in ('hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie'))"
301,"select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, keyword.id AS keyword_id_8, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_companies_movie_id_11, movie_info.info AS movie_info_info_12, title.production_year AS production_year, title.title AS title
 from movie_keyword,char_name,movie_info,movie_companies,title,aka_name,cast_info,info_type,keyword
 where (title.id = movie_keyword.movie_id) And (cast_info.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (char_name.id = cast_info.person_role_id) And (movie_info.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%201%')) Or ((movie_info.info = '__LIKE__USA:%201%'))) And (info_type.id = movie_info.info_type_id) And (movie_companies.movie_id = title.id) And (title.id = movie_info.movie_id) And (cast_info.movie_id = title.id) And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (keyword.keyword in ('hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie'))","create materialized view if not exists mv301 as select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, keyword.id AS keyword_id_8, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_companies_movie_id_11, movie_info.info AS movie_info_info_12, title.production_year AS production_year, title.title AS title
 from movie_keyword,char_name,movie_info,movie_companies,title,aka_name,cast_info,info_type,keyword
 where (title.id = movie_keyword.movie_id) And (cast_info.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (char_name.id = cast_info.person_role_id) And (movie_info.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%201%')) Or ((movie_info.info = '__LIKE__USA:%201%'))) And (info_type.id = movie_info.info_type_id) And (movie_companies.movie_id = title.id) And (title.id = movie_info.movie_id) And (cast_info.movie_id = title.id) And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (keyword.keyword in ('hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie'))"
302,"select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, company_name.country_code AS country_code, company_name.id AS company_name_id_7, company_name.name AS company_name_name_8, info_type.id AS info_type_id_9, info_type.info AS info_type_info_10, keyword.id AS keyword_id_11, keyword.keyword AS keyword, movie_companies.movie_id AS movie_companies_movie_id_13, movie_info.info AS movie_info_info_14, title.production_year AS production_year, title.title AS title
 from movie_keyword,char_name,movie_info,movie_companies,title,company_name,aka_name,cast_info,info_type,keyword
 where (title.id = movie_keyword.movie_id) And (cast_info.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (char_name.id = cast_info.person_role_id) And (movie_info.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%201%')) Or ((movie_info.info = '__LIKE__USA:%201%'))) And (info_type.id = movie_info.info_type_id) And (movie_companies.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (title.id = movie_info.movie_id) And (cast_info.movie_id = title.id) And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (keyword.keyword in ('hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie'))","create materialized view if not exists mv302 as select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, company_name.country_code AS country_code, company_name.id AS company_name_id_7, company_name.name AS company_name_name_8, info_type.id AS info_type_id_9, info_type.info AS info_type_info_10, keyword.id AS keyword_id_11, keyword.keyword AS keyword, movie_companies.movie_id AS movie_companies_movie_id_13, movie_info.info AS movie_info_info_14, title.production_year AS production_year, title.title AS title
 from movie_keyword,char_name,movie_info,movie_companies,title,company_name,aka_name,cast_info,info_type,keyword
 where (title.id = movie_keyword.movie_id) And (cast_info.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (char_name.id = cast_info.person_role_id) And (movie_info.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%201%')) Or ((movie_info.info = '__LIKE__USA:%201%'))) And (info_type.id = movie_info.info_type_id) And (movie_companies.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (title.id = movie_info.movie_id) And (cast_info.movie_id = title.id) And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (keyword.keyword in ('hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie'))"
303,"select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, company_name.country_code AS country_code, company_name.id AS company_name_id_7, company_name.name AS company_name_name_8, info_type.id AS info_type_id_9, info_type.info AS info_type_info_10, keyword.id AS keyword_id_11, keyword.keyword AS keyword, movie_companies.movie_id AS movie_companies_movie_id_13, movie_info.info AS movie_info_info_14, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from movie_keyword,char_name,role_type,movie_info,movie_companies,title,company_name,aka_name,cast_info,info_type,keyword
 where (title.id = movie_keyword.movie_id) And (cast_info.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (char_name.id = cast_info.person_role_id) And (role_type.id = cast_info.role_id) And (movie_info.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%201%')) Or ((movie_info.info = '__LIKE__USA:%201%'))) And (info_type.id = movie_info.info_type_id) And (movie_companies.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (title.id = movie_info.movie_id) And (cast_info.movie_id = title.id) And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (keyword.keyword in ('hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie'))","create materialized view if not exists mv303 as select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, company_name.country_code AS country_code, company_name.id AS company_name_id_7, company_name.name AS company_name_name_8, info_type.id AS info_type_id_9, info_type.info AS info_type_info_10, keyword.id AS keyword_id_11, keyword.keyword AS keyword, movie_companies.movie_id AS movie_companies_movie_id_13, movie_info.info AS movie_info_info_14, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from movie_keyword,char_name,role_type,movie_info,movie_companies,title,company_name,aka_name,cast_info,info_type,keyword
 where (title.id = movie_keyword.movie_id) And (cast_info.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (char_name.id = cast_info.person_role_id) And (role_type.id = cast_info.role_id) And (movie_info.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%201%')) Or ((movie_info.info = '__LIKE__USA:%201%'))) And (info_type.id = movie_info.info_type_id) And (movie_companies.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (title.id = movie_info.movie_id) And (cast_info.movie_id = title.id) And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (keyword.keyword in ('hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie'))"
304,"select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, company_name.country_code AS country_code, company_name.id AS company_name_id_7, company_name.name AS company_name_name_8, info_type.id AS info_type_id_9, info_type.info AS info_type_info_10, keyword.id AS keyword_id_11, keyword.keyword AS keyword, movie_companies.movie_id AS movie_companies_movie_id_13, movie_info.info AS movie_info_info_14, name.gender AS gender, name.id AS name_id_16, name.name AS name_name_17, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from movie_keyword,char_name,name,role_type,movie_info,movie_companies,title,company_name,aka_name,cast_info,info_type,keyword
 where (title.id = movie_keyword.movie_id) And (cast_info.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (char_name.id = cast_info.person_role_id) And (name.id = cast_info.person_id) And (role_type.id = cast_info.role_id) And (movie_info.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%201%')) Or ((movie_info.info = '__LIKE__USA:%201%'))) And (info_type.id = movie_info.info_type_id) And (movie_companies.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (title.id = movie_info.movie_id) And (cast_info.movie_id = title.id) And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (keyword.keyword in ('hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie'))","create materialized view if not exists mv304 as select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, company_name.country_code AS country_code, company_name.id AS company_name_id_7, company_name.name AS company_name_name_8, info_type.id AS info_type_id_9, info_type.info AS info_type_info_10, keyword.id AS keyword_id_11, keyword.keyword AS keyword, movie_companies.movie_id AS movie_companies_movie_id_13, movie_info.info AS movie_info_info_14, name.gender AS gender, name.id AS name_id_16, name.name AS name_name_17, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from movie_keyword,char_name,name,role_type,movie_info,movie_companies,title,company_name,aka_name,cast_info,info_type,keyword
 where (title.id = movie_keyword.movie_id) And (cast_info.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (char_name.id = cast_info.person_role_id) And (name.id = cast_info.person_id) And (role_type.id = cast_info.role_id) And (movie_info.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%201%')) Or ((movie_info.info = '__LIKE__USA:%201%'))) And (info_type.id = movie_info.info_type_id) And (movie_companies.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (title.id = movie_info.movie_id) And (cast_info.movie_id = title.id) And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (keyword.keyword in ('hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie'))"
305,"select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id
 from keyword,movie_keyword
 where (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('murder', 'blood', 'gore', 'death', 'female-nudity'))","create materialized view if not exists mv305 as select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id
 from keyword,movie_keyword
 where (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('murder', 'blood', 'gore', 'death', 'female-nudity'))"
306,"select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
 from title,keyword,movie_keyword
 where (title.id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('murder', 'blood', 'gore', 'death', 'female-nudity'))","create materialized view if not exists mv306 as select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
 from title,keyword,movie_keyword
 where (title.id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('murder', 'blood', 'gore', 'death', 'female-nudity'))"
307,"select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,title,info_type,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'votes') And (keyword.keyword in ('murder', 'blood', 'gore', 'death', 'female-nudity'))","create materialized view if not exists mv307 as select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,title,info_type,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'votes') And (keyword.keyword in ('murder', 'blood', 'gore', 'death', 'female-nudity'))"
308,"select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, movie_info.info AS movie_info_info_4, movie_info.info_type_id AS info_type_id, movie_info.movie_id AS movie_info_movie_id_6, movie_info_idx.info AS movie_info_idx_info_7, movie_keyword.movie_id AS movie_keyword_movie_id_8, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,movie_info,title,info_type,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info.movie_id) And (movie_info.info = 'Horror') And (info_type.info = 'votes') And (keyword.keyword in ('murder', 'blood', 'gore', 'death', 'female-nudity'))","create materialized view if not exists mv308 as select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, movie_info.info AS movie_info_info_4, movie_info.info_type_id AS info_type_id, movie_info.movie_id AS movie_info_movie_id_6, movie_info_idx.info AS movie_info_idx_info_7, movie_keyword.movie_id AS movie_keyword_movie_id_8, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,movie_info,title,info_type,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info.movie_id) And (movie_info.info = 'Horror') And (info_type.info = 'votes') And (keyword.keyword in ('murder', 'blood', 'gore', 'death', 'female-nudity'))"
309,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, keyword.id AS keyword_id_5, keyword.keyword AS keyword, movie_info.info AS movie_info_info_7, movie_info.info_type_id AS info_type_id, movie_info_idx.info AS movie_info_idx_info_9, movie_keyword.movie_id AS movie_keyword_movie_id_10, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,movie_info,title,cast_info,info_type,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info.movie_id) And (movie_info.info = 'Horror') And (title.id = cast_info.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (info_type.info = 'votes') And (keyword.keyword in ('murder', 'blood', 'gore', 'death', 'female-nudity'))","create materialized view if not exists mv309 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, keyword.id AS keyword_id_5, keyword.keyword AS keyword, movie_info.info AS movie_info_info_7, movie_info.info_type_id AS info_type_id, movie_info_idx.info AS movie_info_idx_info_9, movie_keyword.movie_id AS movie_keyword_movie_id_10, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,movie_info,title,cast_info,info_type,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info.movie_id) And (movie_info.info = 'Horror') And (title.id = cast_info.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (info_type.info = 'votes') And (keyword.keyword in ('murder', 'blood', 'gore', 'death', 'female-nudity'))"
310,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, keyword.id AS keyword_id_5, keyword.keyword AS keyword, movie_info.info AS movie_info_info_7, movie_info_idx.info AS movie_info_idx_info_8, movie_keyword.movie_id AS movie_keyword_movie_id_9, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,movie_info,title,cast_info,info_type,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info.movie_id) And (movie_info.info = 'Horror') And (info_type.id = movie_info.info_type_id) And (title.id = cast_info.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (info_type.info = 'votes') And (keyword.keyword in ('murder', 'blood', 'gore', 'death', 'female-nudity'))","create materialized view if not exists mv310 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, keyword.id AS keyword_id_5, keyword.keyword AS keyword, movie_info.info AS movie_info_info_7, movie_info_idx.info AS movie_info_idx_info_8, movie_keyword.movie_id AS movie_keyword_movie_id_9, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,movie_info,title,cast_info,info_type,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info.movie_id) And (movie_info.info = 'Horror') And (info_type.id = movie_info.info_type_id) And (title.id = cast_info.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (info_type.info = 'votes') And (keyword.keyword in ('murder', 'blood', 'gore', 'death', 'female-nudity'))"
311,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, keyword.id AS keyword_id_5, keyword.keyword AS keyword, movie_info.info AS movie_info_info_7, movie_info_idx.info AS movie_info_idx_info_8, movie_keyword.movie_id AS movie_keyword_movie_id_9, name.gender AS gender, name.name AS name, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,name,movie_info,title,cast_info,info_type,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (name.id = cast_info.person_id) And (title.id = movie_info.movie_id) And (movie_info.info = 'Horror') And (info_type.id = movie_info.info_type_id) And (title.id = cast_info.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (info_type.info = 'votes') And (keyword.keyword in ('murder', 'blood', 'gore', 'death', 'female-nudity'))","create materialized view if not exists mv311 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, keyword.id AS keyword_id_5, keyword.keyword AS keyword, movie_info.info AS movie_info_info_7, movie_info_idx.info AS movie_info_idx_info_8, movie_keyword.movie_id AS movie_keyword_movie_id_9, name.gender AS gender, name.name AS name, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,name,movie_info,title,cast_info,info_type,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (name.id = cast_info.person_id) And (title.id = movie_info.movie_id) And (movie_info.info = 'Horror') And (info_type.id = movie_info.info_type_id) And (title.id = cast_info.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (info_type.info = 'votes') And (keyword.keyword in ('murder', 'blood', 'gore', 'death', 'female-nudity'))"
312,"select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id
 from keyword,movie_keyword
 where (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser'))","create materialized view if not exists mv312 as select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id
 from keyword,movie_keyword
 where (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser'))"
313,"select complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, complete_cast.subject_id AS subject_id, keyword.id AS id, keyword.keyword AS keyword
 from keyword,complete_cast,movie_keyword
 where (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')) And (complete_cast.movie_id = movie_keyword.movie_id)","create materialized view if not exists mv313 as select complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, complete_cast.subject_id AS subject_id, keyword.id AS id, keyword.keyword AS keyword
 from keyword,complete_cast,movie_keyword
 where (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')) And (complete_cast.movie_id = movie_keyword.movie_id)"
314,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, keyword.id AS keyword_id_4, keyword.keyword AS keyword
 from keyword,comp_cast_type,complete_cast,movie_keyword
 where (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')) And (complete_cast.subject_id = comp_cast_type.id) And (comp_cast_type.kind = 'cast') And (complete_cast.movie_id = movie_keyword.movie_id)","create materialized view if not exists mv314 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, keyword.id AS keyword_id_4, keyword.keyword AS keyword
 from keyword,comp_cast_type,complete_cast,movie_keyword
 where (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser')) And (complete_cast.subject_id = comp_cast_type.id) And (comp_cast_type.kind = 'cast') And (complete_cast.movie_id = movie_keyword.movie_id)"
315,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, keyword.id AS keyword_id_4, keyword.keyword AS keyword, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
 from movie_keyword,title,comp_cast_type,complete_cast,keyword
 where (title.id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (complete_cast.subject_id = comp_cast_type.id) And (comp_cast_type.kind = 'cast') And (complete_cast.movie_id = movie_keyword.movie_id) And (keyword.keyword in ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser'))","create materialized view if not exists mv315 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, keyword.id AS keyword_id_4, keyword.keyword AS keyword, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
 from movie_keyword,title,comp_cast_type,complete_cast,keyword
 where (title.id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (complete_cast.subject_id = comp_cast_type.id) And (comp_cast_type.kind = 'cast') And (complete_cast.movie_id = movie_keyword.movie_id) And (keyword.keyword in ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser'))"
316,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, keyword.id AS keyword_id_4, keyword.keyword AS keyword, kind_type.id AS kind_type_id_6, kind_type.kind AS kind_type_kind_7, title.production_year AS production_year, title.title AS title
 from movie_keyword,title,comp_cast_type,complete_cast,kind_type,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (kind_type.id = title.kind_id) And (complete_cast.subject_id = comp_cast_type.id) And (comp_cast_type.kind = 'cast') And (keyword.keyword in ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser'))","create materialized view if not exists mv316 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, keyword.id AS keyword_id_4, keyword.keyword AS keyword, kind_type.id AS kind_type_id_6, kind_type.kind AS kind_type_kind_7, title.production_year AS production_year, title.title AS title
 from movie_keyword,title,comp_cast_type,complete_cast,kind_type,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (kind_type.id = title.kind_id) And (complete_cast.subject_id = comp_cast_type.id) And (comp_cast_type.kind = 'cast') And (keyword.keyword in ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser'))"
317,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, complete_cast.movie_id AS complete_cast_movie_id_2, complete_cast.status_id AS status_id, keyword.id AS keyword_id_4, keyword.keyword AS keyword, kind_type.id AS kind_type_id_6, kind_type.kind AS kind_type_kind_7, movie_info_idx.info AS info, movie_info_idx.info_type_id AS info_type_id, movie_info_idx.movie_id AS movie_info_idx_movie_id_10, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,title,comp_cast_type,complete_cast,kind_type,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info > '7.0') And (kind_type.id = title.kind_id) And (complete_cast.subject_id = comp_cast_type.id) And (comp_cast_type.kind = 'cast') And (keyword.keyword in ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser'))","create materialized view if not exists mv317 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, complete_cast.movie_id AS complete_cast_movie_id_2, complete_cast.status_id AS status_id, keyword.id AS keyword_id_4, keyword.keyword AS keyword, kind_type.id AS kind_type_id_6, kind_type.kind AS kind_type_kind_7, movie_info_idx.info AS info, movie_info_idx.info_type_id AS info_type_id, movie_info_idx.movie_id AS movie_info_idx_movie_id_10, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,title,comp_cast_type,complete_cast,kind_type,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info > '7.0') And (kind_type.id = title.kind_id) And (complete_cast.subject_id = comp_cast_type.id) And (comp_cast_type.kind = 'cast') And (keyword.keyword in ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser'))"
318,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, complete_cast.movie_id AS complete_cast_movie_id_2, complete_cast.status_id AS status_id, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, keyword.id AS keyword_id_6, keyword.keyword AS keyword, kind_type.id AS kind_type_id_8, kind_type.kind AS kind_type_kind_9, movie_info_idx.info AS movie_info_idx_info_10, movie_info_idx.movie_id AS movie_info_idx_movie_id_11, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,title,comp_cast_type,complete_cast,kind_type,info_type,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info > '7.0') And (info_type.id = movie_info_idx.info_type_id) And (kind_type.id = title.kind_id) And (complete_cast.subject_id = comp_cast_type.id) And (comp_cast_type.kind = 'cast') And (keyword.keyword in ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser'))","create materialized view if not exists mv318 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, complete_cast.movie_id AS complete_cast_movie_id_2, complete_cast.status_id AS status_id, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, keyword.id AS keyword_id_6, keyword.keyword AS keyword, kind_type.id AS kind_type_id_8, kind_type.kind AS kind_type_kind_9, movie_info_idx.info AS movie_info_idx_info_10, movie_info_idx.movie_id AS movie_info_idx_movie_id_11, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,title,comp_cast_type,complete_cast,kind_type,info_type,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info > '7.0') And (info_type.id = movie_info_idx.info_type_id) And (kind_type.id = title.kind_id) And (complete_cast.subject_id = comp_cast_type.id) And (comp_cast_type.kind = 'cast') And (keyword.keyword in ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser'))"
319,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, complete_cast.movie_id AS complete_cast_movie_id_2, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, keyword.id AS keyword_id_5, keyword.keyword AS keyword, kind_type.id AS kind_type_id_7, kind_type.kind AS kind_type_kind_8, movie_info_idx.info AS movie_info_idx_info_9, movie_info_idx.movie_id AS movie_info_idx_movie_id_10, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,title,comp_cast_type,complete_cast,kind_type,info_type,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info > '7.0') And (info_type.id = movie_info_idx.info_type_id) And (kind_type.id = title.kind_id) And (complete_cast.subject_id = comp_cast_type.id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.id = complete_cast.status_id) And (keyword.keyword in ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser'))","create materialized view if not exists mv319 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, complete_cast.movie_id AS complete_cast_movie_id_2, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, keyword.id AS keyword_id_5, keyword.keyword AS keyword, kind_type.id AS kind_type_id_7, kind_type.kind AS kind_type_kind_8, movie_info_idx.info AS movie_info_idx_info_9, movie_info_idx.movie_id AS movie_info_idx_movie_id_10, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,title,comp_cast_type,complete_cast,kind_type,info_type,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info > '7.0') And (info_type.id = movie_info_idx.info_type_id) And (kind_type.id = title.kind_id) And (complete_cast.subject_id = comp_cast_type.id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.id = complete_cast.status_id) And (keyword.keyword in ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser'))"
320,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS comp_cast_type_kind_4, complete_cast.movie_id AS complete_cast_movie_id_5, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, keyword.id AS keyword_id_8, keyword.keyword AS keyword, kind_type.id AS kind_type_id_10, kind_type.kind AS kind_type_kind_11, movie_info_idx.info AS movie_info_idx_info_12, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,title,comp_cast_type,complete_cast,kind_type,cast_info,info_type,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info > '7.0') And (info_type.id = movie_info_idx.info_type_id) And (cast_info.movie_id = title.id) And (kind_type.id = title.kind_id) And (comp_cast_type.id = complete_cast.status_id) And (complete_cast.subject_id = comp_cast_type.id) And (comp_cast_type.kind = 'cast') And (keyword.keyword in ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser'))","create materialized view if not exists mv320 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS comp_cast_type_kind_4, complete_cast.movie_id AS complete_cast_movie_id_5, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, keyword.id AS keyword_id_8, keyword.keyword AS keyword, kind_type.id AS kind_type_id_10, kind_type.kind AS kind_type_kind_11, movie_info_idx.info AS movie_info_idx_info_12, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,title,comp_cast_type,complete_cast,kind_type,cast_info,info_type,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info > '7.0') And (info_type.id = movie_info_idx.info_type_id) And (cast_info.movie_id = title.id) And (kind_type.id = title.kind_id) And (comp_cast_type.id = complete_cast.status_id) And (complete_cast.subject_id = comp_cast_type.id) And (comp_cast_type.kind = 'cast') And (keyword.keyword in ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser'))"
321,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, char_name.name AS name, comp_cast_type.id AS comp_cast_type_id_4, comp_cast_type.kind AS comp_cast_type_kind_5, complete_cast.movie_id AS complete_cast_movie_id_6, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, keyword.id AS keyword_id_9, keyword.keyword AS keyword, kind_type.id AS kind_type_id_11, kind_type.kind AS kind_type_kind_12, movie_info_idx.info AS movie_info_idx_info_13, title.production_year AS production_year, title.title AS title
 from movie_keyword,char_name,movie_info_idx,title,comp_cast_type,complete_cast,kind_type,cast_info,info_type,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (char_name.id = cast_info.person_role_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info > '7.0') And (info_type.id = movie_info_idx.info_type_id) And (cast_info.movie_id = title.id) And (kind_type.id = title.kind_id) And (comp_cast_type.id = complete_cast.status_id) And (complete_cast.subject_id = comp_cast_type.id) And (comp_cast_type.kind = 'cast') And (keyword.keyword in ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser'))","create materialized view if not exists mv321 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, char_name.name AS name, comp_cast_type.id AS comp_cast_type_id_4, comp_cast_type.kind AS comp_cast_type_kind_5, complete_cast.movie_id AS complete_cast_movie_id_6, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, keyword.id AS keyword_id_9, keyword.keyword AS keyword, kind_type.id AS kind_type_id_11, kind_type.kind AS kind_type_kind_12, movie_info_idx.info AS movie_info_idx_info_13, title.production_year AS production_year, title.title AS title
 from movie_keyword,char_name,movie_info_idx,title,comp_cast_type,complete_cast,kind_type,cast_info,info_type,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (char_name.id = cast_info.person_role_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info > '7.0') And (info_type.id = movie_info_idx.info_type_id) And (cast_info.movie_id = title.id) And (kind_type.id = title.kind_id) And (comp_cast_type.id = complete_cast.status_id) And (complete_cast.subject_id = comp_cast_type.id) And (comp_cast_type.kind = 'cast') And (keyword.keyword in ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser'))"
322,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, char_name.name AS char_name_name_3, comp_cast_type.id AS comp_cast_type_id_4, comp_cast_type.kind AS comp_cast_type_kind_5, complete_cast.movie_id AS complete_cast_movie_id_6, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, keyword.id AS keyword_id_9, keyword.keyword AS keyword, kind_type.id AS kind_type_id_11, kind_type.kind AS kind_type_kind_12, movie_info_idx.info AS movie_info_idx_info_13, name.name AS name_name_14, title.production_year AS production_year, title.title AS title
 from movie_keyword,char_name,movie_info_idx,name,title,comp_cast_type,complete_cast,kind_type,cast_info,info_type,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (char_name.id = cast_info.person_role_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info > '7.0') And (info_type.id = movie_info_idx.info_type_id) And (name.id = cast_info.person_id) And (cast_info.movie_id = title.id) And (kind_type.id = title.kind_id) And (comp_cast_type.id = complete_cast.status_id) And (complete_cast.subject_id = comp_cast_type.id) And (comp_cast_type.kind = 'cast') And (keyword.keyword in ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser'))","create materialized view if not exists mv322 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, char_name.name AS char_name_name_3, comp_cast_type.id AS comp_cast_type_id_4, comp_cast_type.kind AS comp_cast_type_kind_5, complete_cast.movie_id AS complete_cast_movie_id_6, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, keyword.id AS keyword_id_9, keyword.keyword AS keyword, kind_type.id AS kind_type_id_11, kind_type.kind AS kind_type_kind_12, movie_info_idx.info AS movie_info_idx_info_13, name.name AS name_name_14, title.production_year AS production_year, title.title AS title
 from movie_keyword,char_name,movie_info_idx,name,title,comp_cast_type,complete_cast,kind_type,cast_info,info_type,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (char_name.id = cast_info.person_role_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info > '7.0') And (info_type.id = movie_info_idx.info_type_id) And (name.id = cast_info.person_id) And (cast_info.movie_id = title.id) And (kind_type.id = title.kind_id) And (comp_cast_type.id = complete_cast.status_id) And (complete_cast.subject_id = comp_cast_type.id) And (comp_cast_type.kind = 'cast') And (keyword.keyword in ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser'))"
323,"select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id
 from keyword,movie_keyword
 where (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('superhero', 'marvel-comics', 'based-on-comic', 'fight'))","create materialized view if not exists mv323 as select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id
 from keyword,movie_keyword
 where (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('superhero', 'marvel-comics', 'based-on-comic', 'fight'))"
324,"select complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, complete_cast.subject_id AS subject_id, keyword.id AS id, keyword.keyword AS keyword
 from keyword,complete_cast,movie_keyword
 where (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('superhero', 'marvel-comics', 'based-on-comic', 'fight')) And (complete_cast.movie_id = movie_keyword.movie_id)","create materialized view if not exists mv324 as select complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, complete_cast.subject_id AS subject_id, keyword.id AS id, keyword.keyword AS keyword
 from keyword,complete_cast,movie_keyword
 where (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('superhero', 'marvel-comics', 'based-on-comic', 'fight')) And (complete_cast.movie_id = movie_keyword.movie_id)"
325,"select complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, complete_cast.subject_id AS subject_id, keyword.id AS id, keyword.keyword AS keyword, movie_info_idx.info AS info, movie_info_idx.info_type_id AS info_type_id
 from complete_cast,keyword,movie_info_idx,movie_keyword
 where (complete_cast.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('superhero', 'marvel-comics', 'based-on-comic', 'fight')) And (movie_info_idx.movie_id = movie_keyword.movie_id) And (movie_info_idx.info > '8.0')","create materialized view if not exists mv325 as select complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, complete_cast.subject_id AS subject_id, keyword.id AS id, keyword.keyword AS keyword, movie_info_idx.info AS info, movie_info_idx.info_type_id AS info_type_id
 from complete_cast,keyword,movie_info_idx,movie_keyword
 where (complete_cast.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('superhero', 'marvel-comics', 'based-on-comic', 'fight')) And (movie_info_idx.movie_id = movie_keyword.movie_id) And (movie_info_idx.info > '8.0')"
326,"select complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, keyword.id AS keyword_id_5, keyword.keyword AS keyword, movie_info_idx.info AS movie_info_idx_info_7
 from movie_keyword,movie_info_idx,complete_cast,info_type,keyword
 where (complete_cast.movie_id = movie_keyword.movie_id) And (movie_info_idx.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info > '8.0') And (info_type.info = 'rating') And (keyword.keyword in ('superhero', 'marvel-comics', 'based-on-comic', 'fight'))","create materialized view if not exists mv326 as select complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, keyword.id AS keyword_id_5, keyword.keyword AS keyword, movie_info_idx.info AS movie_info_idx_info_7
 from movie_keyword,movie_info_idx,complete_cast,info_type,keyword
 where (complete_cast.movie_id = movie_keyword.movie_id) And (movie_info_idx.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info > '8.0') And (info_type.info = 'rating') And (keyword.keyword in ('superhero', 'marvel-comics', 'based-on-comic', 'fight'))"
327,"select complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, keyword.id AS keyword_id_5, keyword.keyword AS keyword, movie_info_idx.info AS movie_info_idx_info_7, title.id AS title_id_8, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,title,complete_cast,info_type,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_info_idx.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info > '8.0') And (info_type.info = 'rating') And (keyword.keyword in ('superhero', 'marvel-comics', 'based-on-comic', 'fight'))","create materialized view if not exists mv327 as select complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, keyword.id AS keyword_id_5, keyword.keyword AS keyword, movie_info_idx.info AS movie_info_idx_info_7, title.id AS title_id_8, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,title,complete_cast,info_type,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_info_idx.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info > '8.0') And (info_type.info = 'rating') And (keyword.keyword in ('superhero', 'marvel-comics', 'based-on-comic', 'fight'))"
328,"select complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, keyword.id AS keyword_id_5, keyword.keyword AS keyword, kind_type.id AS kind_type_id_7, kind_type.kind AS kind, movie_info_idx.info AS movie_info_idx_info_9, title.id AS title_id_10, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,title,complete_cast,kind_type,info_type,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_info_idx.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info > '8.0') And (kind_type.id = title.kind_id) And (info_type.info = 'rating') And (keyword.keyword in ('superhero', 'marvel-comics', 'based-on-comic', 'fight'))","create materialized view if not exists mv328 as select complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, keyword.id AS keyword_id_5, keyword.keyword AS keyword, kind_type.id AS kind_type_id_7, kind_type.kind AS kind, movie_info_idx.info AS movie_info_idx_info_9, title.id AS title_id_10, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,title,complete_cast,kind_type,info_type,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_info_idx.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info > '8.0') And (kind_type.id = title.kind_id) And (info_type.info = 'rating') And (keyword.keyword in ('superhero', 'marvel-comics', 'based-on-comic', 'fight'))"
329,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, keyword.id AS keyword_id_6, keyword.keyword AS keyword, kind_type.id AS kind_type_id_8, kind_type.kind AS kind_type_kind_9, movie_info_idx.info AS movie_info_idx_info_10, title.id AS title_id_11, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,title,comp_cast_type,complete_cast,kind_type,info_type,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.movie_id = movie_keyword.movie_id) And (movie_info_idx.info > '8.0') And (kind_type.id = title.kind_id) And (comp_cast_type.id = complete_cast.status_id) And (info_type.info = 'rating') And (keyword.keyword in ('superhero', 'marvel-comics', 'based-on-comic', 'fight'))","create materialized view if not exists mv329 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, keyword.id AS keyword_id_6, keyword.keyword AS keyword, kind_type.id AS kind_type_id_8, kind_type.kind AS kind_type_kind_9, movie_info_idx.info AS movie_info_idx_info_10, title.id AS title_id_11, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,title,comp_cast_type,complete_cast,kind_type,info_type,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.movie_id = movie_keyword.movie_id) And (movie_info_idx.info > '8.0') And (kind_type.id = title.kind_id) And (comp_cast_type.id = complete_cast.status_id) And (info_type.info = 'rating') And (keyword.keyword in ('superhero', 'marvel-comics', 'based-on-comic', 'fight'))"
330,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, keyword.id AS keyword_id_6, keyword.keyword AS keyword, kind_type.id AS kind_type_id_8, kind_type.kind AS kind_type_kind_9, movie_info_idx.info AS movie_info_idx_info_10, title.id AS title_id_11, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,title,comp_cast_type,complete_cast,kind_type,info_type,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.movie_id = movie_keyword.movie_id) And (movie_info_idx.info > '8.0') And (kind_type.id = title.kind_id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (info_type.info = 'rating') And (keyword.keyword in ('superhero', 'marvel-comics', 'based-on-comic', 'fight'))","create materialized view if not exists mv330 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, keyword.id AS keyword_id_6, keyword.keyword AS keyword, kind_type.id AS kind_type_id_8, kind_type.kind AS kind_type_kind_9, movie_info_idx.info AS movie_info_idx_info_10, title.id AS title_id_11, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,title,comp_cast_type,complete_cast,kind_type,info_type,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.movie_id = movie_keyword.movie_id) And (movie_info_idx.info > '8.0') And (kind_type.id = title.kind_id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (info_type.info = 'rating') And (keyword.keyword in ('superhero', 'marvel-comics', 'based-on-comic', 'fight'))"
331,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS comp_cast_type_kind_4, complete_cast.movie_id AS complete_cast_movie_id_5, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, keyword.id AS keyword_id_9, keyword.keyword AS keyword, kind_type.id AS kind_type_id_11, kind_type.kind AS kind_type_kind_12, movie_info_idx.info AS movie_info_idx_info_13, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,title,comp_cast_type,complete_cast,kind_type,cast_info,info_type,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.movie_id = movie_keyword.movie_id) And (movie_info_idx.info > '8.0') And (cast_info.movie_id = title.id) And (kind_type.id = title.kind_id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (info_type.info = 'rating') And (keyword.keyword in ('superhero', 'marvel-comics', 'based-on-comic', 'fight'))","create materialized view if not exists mv331 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS comp_cast_type_kind_4, complete_cast.movie_id AS complete_cast_movie_id_5, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, keyword.id AS keyword_id_9, keyword.keyword AS keyword, kind_type.id AS kind_type_id_11, kind_type.kind AS kind_type_kind_12, movie_info_idx.info AS movie_info_idx_info_13, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,title,comp_cast_type,complete_cast,kind_type,cast_info,info_type,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.movie_id = movie_keyword.movie_id) And (movie_info_idx.info > '8.0') And (cast_info.movie_id = title.id) And (kind_type.id = title.kind_id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (info_type.info = 'rating') And (keyword.keyword in ('superhero', 'marvel-comics', 'based-on-comic', 'fight'))"
332,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS comp_cast_type_kind_4, complete_cast.movie_id AS complete_cast_movie_id_5, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, keyword.id AS keyword_id_9, keyword.keyword AS keyword, kind_type.id AS kind_type_id_11, kind_type.kind AS kind_type_kind_12, movie_info_idx.info AS movie_info_idx_info_13, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,name,title,comp_cast_type,complete_cast,kind_type,cast_info,info_type,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_info_idx.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info > '8.0') And (name.id = cast_info.person_id) And (cast_info.movie_id = title.id) And (kind_type.id = title.kind_id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (info_type.info = 'rating') And (keyword.keyword in ('superhero', 'marvel-comics', 'based-on-comic', 'fight'))","create materialized view if not exists mv332 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS comp_cast_type_kind_4, complete_cast.movie_id AS complete_cast_movie_id_5, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, keyword.id AS keyword_id_9, keyword.keyword AS keyword, kind_type.id AS kind_type_id_11, kind_type.kind AS kind_type_kind_12, movie_info_idx.info AS movie_info_idx_info_13, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,name,title,comp_cast_type,complete_cast,kind_type,cast_info,info_type,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_info_idx.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info > '8.0') And (name.id = cast_info.person_id) And (cast_info.movie_id = title.id) And (kind_type.id = title.kind_id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (info_type.info = 'rating') And (keyword.keyword in ('superhero', 'marvel-comics', 'based-on-comic', 'fight'))"
333,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, char_name.name AS name, comp_cast_type.id AS comp_cast_type_id_4, comp_cast_type.kind AS comp_cast_type_kind_5, complete_cast.movie_id AS complete_cast_movie_id_6, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_8, info_type.info AS info_type_info_9, keyword.id AS keyword_id_10, keyword.keyword AS keyword, kind_type.id AS kind_type_id_12, kind_type.kind AS kind_type_kind_13, movie_info_idx.info AS movie_info_idx_info_14, title.production_year AS production_year, title.title AS title
 from movie_keyword,char_name,movie_info_idx,name,title,comp_cast_type,complete_cast,kind_type,cast_info,info_type,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (char_name.id = cast_info.person_role_id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.movie_id = movie_keyword.movie_id) And (movie_info_idx.info > '8.0') And (name.id = cast_info.person_id) And (cast_info.movie_id = title.id) And (kind_type.id = title.kind_id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (info_type.info = 'rating') And (keyword.keyword in ('superhero', 'marvel-comics', 'based-on-comic', 'fight'))","create materialized view if not exists mv333 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, char_name.name AS name, comp_cast_type.id AS comp_cast_type_id_4, comp_cast_type.kind AS comp_cast_type_kind_5, complete_cast.movie_id AS complete_cast_movie_id_6, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_8, info_type.info AS info_type_info_9, keyword.id AS keyword_id_10, keyword.keyword AS keyword, kind_type.id AS kind_type_id_12, kind_type.kind AS kind_type_kind_13, movie_info_idx.info AS movie_info_idx_info_14, title.production_year AS production_year, title.title AS title
 from movie_keyword,char_name,movie_info_idx,name,title,comp_cast_type,complete_cast,kind_type,cast_info,info_type,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (char_name.id = cast_info.person_role_id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.movie_id = movie_keyword.movie_id) And (movie_info_idx.info > '8.0') And (name.id = cast_info.person_id) And (cast_info.movie_id = title.id) And (kind_type.id = title.kind_id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (info_type.info = 'rating') And (keyword.keyword in ('superhero', 'marvel-comics', 'based-on-comic', 'fight'))"
334,"select complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, complete_cast.subject_id AS subject_id, info_type.id AS id, info_type.info AS info_type_info_4, movie_info_idx.info AS movie_info_idx_info_5
 from info_type,movie_info_idx,complete_cast
 where (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'rating') And (complete_cast.movie_id = movie_info_idx.movie_id)","create materialized view if not exists mv334 as select complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, complete_cast.subject_id AS subject_id, info_type.id AS id, info_type.info AS info_type_info_4, movie_info_idx.info AS movie_info_idx_info_5
 from info_type,movie_info_idx,complete_cast
 where (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'rating') And (complete_cast.movie_id = movie_info_idx.movie_id)"
335,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, movie_info_idx.info AS movie_info_idx_info_6
 from info_type,comp_cast_type,movie_info_idx,complete_cast
 where (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'rating') And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind like '%complete%') And (complete_cast.movie_id = movie_info_idx.movie_id)","create materialized view if not exists mv335 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, movie_info_idx.info AS movie_info_idx_info_6
 from info_type,comp_cast_type,movie_info_idx,complete_cast
 where (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'rating') And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind like '%complete%') And (complete_cast.movie_id = movie_info_idx.movie_id)"
336,"select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS kind, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, movie_info_idx.info AS movie_info_idx_info_8
 from movie_info_idx,comp_cast_type,complete_cast,cast_info,info_type
 where (complete_cast.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind like '%complete%') And (cast_info.movie_id = complete_cast.movie_id) And (info_type.info = 'rating')","create materialized view if not exists mv336 as select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS kind, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, movie_info_idx.info AS movie_info_idx_info_8
 from movie_info_idx,comp_cast_type,complete_cast,cast_info,info_type
 where (complete_cast.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind like '%complete%') And (cast_info.movie_id = complete_cast.movie_id) And (info_type.info = 'rating')"
337,"select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, char_name.name AS name, comp_cast_type.id AS comp_cast_type_id_4, comp_cast_type.kind AS kind, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, movie_info_idx.info AS movie_info_idx_info_9
 from char_name,movie_info_idx,comp_cast_type,complete_cast,cast_info,info_type
 where (char_name.id = cast_info.person_role_id) And (complete_cast.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind like '%complete%') And (cast_info.movie_id = complete_cast.movie_id) And (info_type.info = 'rating')","create materialized view if not exists mv337 as select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, char_name.name AS name, comp_cast_type.id AS comp_cast_type_id_4, comp_cast_type.kind AS kind, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, movie_info_idx.info AS movie_info_idx_info_9
 from char_name,movie_info_idx,comp_cast_type,complete_cast,cast_info,info_type
 where (char_name.id = cast_info.person_role_id) And (complete_cast.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind like '%complete%') And (cast_info.movie_id = complete_cast.movie_id) And (info_type.info = 'rating')"
338,"select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, char_name.name AS name, comp_cast_type.id AS comp_cast_type_id_4, comp_cast_type.kind AS kind, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, movie_info_idx.info AS movie_info_idx_info_9
 from char_name,movie_info_idx,name,comp_cast_type,complete_cast,cast_info,info_type
 where (char_name.id = cast_info.person_role_id) And (complete_cast.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (name.id = cast_info.person_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind like '%complete%') And (cast_info.movie_id = complete_cast.movie_id) And (info_type.info = 'rating')","create materialized view if not exists mv338 as select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, char_name.name AS name, comp_cast_type.id AS comp_cast_type_id_4, comp_cast_type.kind AS kind, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, movie_info_idx.info AS movie_info_idx_info_9
 from char_name,movie_info_idx,name,comp_cast_type,complete_cast,cast_info,info_type
 where (char_name.id = cast_info.person_role_id) And (complete_cast.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (name.id = cast_info.person_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind like '%complete%') And (cast_info.movie_id = complete_cast.movie_id) And (info_type.info = 'rating')"
339,"select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, char_name.name AS name, comp_cast_type.id AS comp_cast_type_id_4, comp_cast_type.kind AS kind, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, movie_info_idx.info AS movie_info_idx_info_9, movie_keyword.keyword_id AS keyword_id
 from char_name,movie_info_idx,name,comp_cast_type,complete_cast,cast_info,info_type,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (complete_cast.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (name.id = cast_info.person_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind like '%complete%') And (cast_info.movie_id = complete_cast.movie_id) And (movie_keyword.movie_id = cast_info.movie_id) And (info_type.info = 'rating')","create materialized view if not exists mv339 as select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, char_name.name AS name, comp_cast_type.id AS comp_cast_type_id_4, comp_cast_type.kind AS kind, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, movie_info_idx.info AS movie_info_idx_info_9, movie_keyword.keyword_id AS keyword_id
 from char_name,movie_info_idx,name,comp_cast_type,complete_cast,cast_info,info_type,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (complete_cast.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (name.id = cast_info.person_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind like '%complete%') And (cast_info.movie_id = complete_cast.movie_id) And (movie_keyword.movie_id = cast_info.movie_id) And (info_type.info = 'rating')"
340,"select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, char_name.name AS name, comp_cast_type.id AS comp_cast_type_id_4, comp_cast_type.kind AS kind, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, keyword.id AS keyword_id_9, keyword.keyword AS keyword, movie_info_idx.info AS movie_info_idx_info_11
 from char_name,movie_info_idx,name,keyword,comp_cast_type,complete_cast,cast_info,info_type,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (complete_cast.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (name.id = cast_info.person_id) And (keyword.id = movie_keyword.keyword_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind like '%complete%') And (cast_info.movie_id = complete_cast.movie_id) And (movie_keyword.movie_id = cast_info.movie_id) And (info_type.info = 'rating')","create materialized view if not exists mv340 as select cast_info.movie_id AS movie_id, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, char_name.name AS name, comp_cast_type.id AS comp_cast_type_id_4, comp_cast_type.kind AS kind, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, keyword.id AS keyword_id_9, keyword.keyword AS keyword, movie_info_idx.info AS movie_info_idx_info_11
 from char_name,movie_info_idx,name,keyword,comp_cast_type,complete_cast,cast_info,info_type,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (complete_cast.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (name.id = cast_info.person_id) And (keyword.id = movie_keyword.keyword_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind like '%complete%') And (cast_info.movie_id = complete_cast.movie_id) And (movie_keyword.movie_id = cast_info.movie_id) And (info_type.info = 'rating')"
341,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, char_name.name AS name, comp_cast_type.id AS comp_cast_type_id_4, comp_cast_type.kind AS kind, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, keyword.id AS keyword_id_9, keyword.keyword AS keyword, movie_info_idx.info AS movie_info_idx_info_11, movie_keyword.movie_id AS movie_keyword_movie_id_12, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
 from char_name,movie_info_idx,name,keyword,title,comp_cast_type,complete_cast,cast_info,info_type,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (complete_cast.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (name.id = cast_info.person_id) And (keyword.id = movie_keyword.keyword_id) And (title.id = cast_info.movie_id) And (movie_keyword.movie_id = title.id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind like '%complete%') And (cast_info.movie_id = complete_cast.movie_id) And (movie_keyword.movie_id = cast_info.movie_id) And (info_type.info = 'rating')","create materialized view if not exists mv341 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, char_name.name AS name, comp_cast_type.id AS comp_cast_type_id_4, comp_cast_type.kind AS kind, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, keyword.id AS keyword_id_9, keyword.keyword AS keyword, movie_info_idx.info AS movie_info_idx_info_11, movie_keyword.movie_id AS movie_keyword_movie_id_12, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
 from char_name,movie_info_idx,name,keyword,title,comp_cast_type,complete_cast,cast_info,info_type,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (complete_cast.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (name.id = cast_info.person_id) And (keyword.id = movie_keyword.keyword_id) And (title.id = cast_info.movie_id) And (movie_keyword.movie_id = title.id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind like '%complete%') And (cast_info.movie_id = complete_cast.movie_id) And (movie_keyword.movie_id = cast_info.movie_id) And (info_type.info = 'rating')"
342,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, char_name.name AS name, comp_cast_type.id AS comp_cast_type_id_4, comp_cast_type.kind AS comp_cast_type_kind_5, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, keyword.id AS keyword_id_9, keyword.keyword AS keyword, kind_type.id AS kind_type_id_11, kind_type.kind AS kind_type_kind_12, movie_info_idx.info AS movie_info_idx_info_13, movie_keyword.movie_id AS movie_keyword_movie_id_14, title.production_year AS production_year, title.title AS title
 from char_name,movie_info_idx,name,keyword,title,comp_cast_type,complete_cast,kind_type,cast_info,info_type,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (complete_cast.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (name.id = cast_info.person_id) And (keyword.id = movie_keyword.keyword_id) And (title.id = cast_info.movie_id) And (movie_keyword.movie_id = title.id) And (kind_type.id = title.kind_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind like '%complete%') And (cast_info.movie_id = complete_cast.movie_id) And (movie_keyword.movie_id = cast_info.movie_id) And (info_type.info = 'rating')","create materialized view if not exists mv342 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, char_name.name AS name, comp_cast_type.id AS comp_cast_type_id_4, comp_cast_type.kind AS comp_cast_type_kind_5, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, keyword.id AS keyword_id_9, keyword.keyword AS keyword, kind_type.id AS kind_type_id_11, kind_type.kind AS kind_type_kind_12, movie_info_idx.info AS movie_info_idx_info_13, movie_keyword.movie_id AS movie_keyword_movie_id_14, title.production_year AS production_year, title.title AS title
 from char_name,movie_info_idx,name,keyword,title,comp_cast_type,complete_cast,kind_type,cast_info,info_type,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (complete_cast.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (name.id = cast_info.person_id) And (keyword.id = movie_keyword.keyword_id) And (title.id = cast_info.movie_id) And (movie_keyword.movie_id = title.id) And (kind_type.id = title.kind_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind like '%complete%') And (cast_info.movie_id = complete_cast.movie_id) And (movie_keyword.movie_id = cast_info.movie_id) And (info_type.info = 'rating')"
343,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, char_name.name AS name, comp_cast_type.id AS comp_cast_type_id_4, comp_cast_type.kind AS comp_cast_type_kind_5, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, keyword.id AS keyword_id_8, keyword.keyword AS keyword, kind_type.id AS kind_type_id_10, kind_type.kind AS kind_type_kind_11, movie_info_idx.info AS movie_info_idx_info_12, movie_keyword.movie_id AS movie_keyword_movie_id_13, title.production_year AS production_year, title.title AS title
 from char_name,movie_info_idx,name,keyword,title,comp_cast_type,complete_cast,kind_type,cast_info,info_type,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (complete_cast.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (name.id = cast_info.person_id) And (keyword.id = movie_keyword.keyword_id) And (title.id = cast_info.movie_id) And (movie_keyword.movie_id = title.id) And (kind_type.id = title.kind_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind like '%complete%') And (cast_info.movie_id = complete_cast.movie_id) And (comp_cast_type.id = complete_cast.subject_id) And (movie_keyword.movie_id = cast_info.movie_id) And (info_type.info = 'rating')","create materialized view if not exists mv343 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, char_name.name AS name, comp_cast_type.id AS comp_cast_type_id_4, comp_cast_type.kind AS comp_cast_type_kind_5, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, keyword.id AS keyword_id_8, keyword.keyword AS keyword, kind_type.id AS kind_type_id_10, kind_type.kind AS kind_type_kind_11, movie_info_idx.info AS movie_info_idx_info_12, movie_keyword.movie_id AS movie_keyword_movie_id_13, title.production_year AS production_year, title.title AS title
 from char_name,movie_info_idx,name,keyword,title,comp_cast_type,complete_cast,kind_type,cast_info,info_type,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (complete_cast.movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (name.id = cast_info.person_id) And (keyword.id = movie_keyword.keyword_id) And (title.id = cast_info.movie_id) And (movie_keyword.movie_id = title.id) And (kind_type.id = title.kind_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind like '%complete%') And (cast_info.movie_id = complete_cast.movie_id) And (comp_cast_type.id = complete_cast.subject_id) And (movie_keyword.movie_id = cast_info.movie_id) And (info_type.info = 'rating')"
344,"select comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id
 from comp_cast_type,complete_cast
 where (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'complete')","create materialized view if not exists mv344 as select comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id
 from comp_cast_type,complete_cast
 where (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'complete')"
345,"select comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.note AS note
 from movie_companies,comp_cast_type,complete_cast
 where (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.note IS NULL) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'complete')","create materialized view if not exists mv345 as select comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.note AS note
 from movie_companies,comp_cast_type,complete_cast
 where (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.note IS NULL) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'complete')"
346,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_type.id AS company_type_id_2, company_type.kind AS company_type_kind_3, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, movie_companies.company_id AS company_id, movie_companies.note AS note
 from movie_companies,company_type,comp_cast_type,complete_cast
 where (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.note IS NULL) And (company_type.kind = 'production companies') And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'complete')","create materialized view if not exists mv346 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_type.id AS company_type_id_2, company_type.kind AS company_type_kind_3, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, movie_companies.company_id AS company_id, movie_companies.note AS note
 from movie_companies,company_type,comp_cast_type,complete_cast
 where (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.note IS NULL) And (company_type.kind = 'production companies') And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'complete')"
347,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, movie_companies.note AS note
 from movie_companies,company_type,company_name,comp_cast_type,complete_cast
 where (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.note IS NULL) And (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'complete')","create materialized view if not exists mv347 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, movie_companies.note AS note
 from movie_companies,company_type,company_name,comp_cast_type,complete_cast
 where (movie_companies.company_type_id = company_type.id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.note IS NULL) And (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'complete')"
348,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, movie_companies.note AS note, movie_info.info AS info
 from movie_info,movie_companies,company_type,company_name,comp_cast_type,complete_cast
 where (movie_info.movie_id = movie_companies.movie_id) And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note IS NULL) And (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'complete')","create materialized view if not exists mv348 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, movie_companies.note AS note, movie_info.info AS info
 from movie_info,movie_companies,company_type,company_name,comp_cast_type,complete_cast
 where (movie_info.movie_id = movie_companies.movie_id) And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note IS NULL) And (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'complete')"
349,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, movie_companies.note AS note, movie_info.info AS info, movie_keyword.keyword_id AS keyword_id
 from movie_info,movie_companies,company_type,company_name,comp_cast_type,complete_cast,movie_keyword
 where (movie_info.movie_id = movie_companies.movie_id) And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note IS NULL) And (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'complete')","create materialized view if not exists mv349 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, movie_companies.note AS note, movie_info.info AS info, movie_keyword.keyword_id AS keyword_id
 from movie_info,movie_companies,company_type,company_name,comp_cast_type,complete_cast,movie_keyword
 where (movie_info.movie_id = movie_companies.movie_id) And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note IS NULL) And (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'complete')"
350,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, movie_companies.note AS note, movie_info.info AS info, movie_keyword.keyword_id AS keyword_id, title.id AS title_id_12, title.production_year AS production_year, title.title AS title
 from movie_info,movie_companies,company_type,title,company_name,comp_cast_type,complete_cast,movie_keyword
 where (movie_info.movie_id = movie_companies.movie_id) And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note IS NULL) And (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (title.id = movie_keyword.movie_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'complete')","create materialized view if not exists mv350 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, movie_companies.note AS note, movie_info.info AS info, movie_keyword.keyword_id AS keyword_id, title.id AS title_id_12, title.production_year AS production_year, title.title AS title
 from movie_info,movie_companies,company_type,title,company_name,comp_cast_type,complete_cast,movie_keyword
 where (movie_info.movie_id = movie_companies.movie_id) And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note IS NULL) And (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (title.id = movie_keyword.movie_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'complete')"
351,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS complete_cast_movie_id_7, complete_cast.subject_id AS subject_id, movie_companies.note AS note, movie_info.info AS info, movie_keyword.keyword_id AS keyword_id, movie_link.link_type_id AS link_type_id, movie_link.movie_id AS movie_link_movie_id_13, title.production_year AS production_year, title.title AS title
 from movie_info,movie_companies,company_type,title,company_name,comp_cast_type,complete_cast,movie_link,movie_keyword
 where (movie_info.movie_id = movie_companies.movie_id) And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note IS NULL) And (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (title.id = movie_keyword.movie_id) And (title.id = movie_link.movie_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'complete')","create materialized view if not exists mv351 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS complete_cast_movie_id_7, complete_cast.subject_id AS subject_id, movie_companies.note AS note, movie_info.info AS info, movie_keyword.keyword_id AS keyword_id, movie_link.link_type_id AS link_type_id, movie_link.movie_id AS movie_link_movie_id_13, title.production_year AS production_year, title.title AS title
 from movie_info,movie_companies,company_type,title,company_name,comp_cast_type,complete_cast,movie_link,movie_keyword
 where (movie_info.movie_id = movie_companies.movie_id) And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note IS NULL) And (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (title.id = movie_keyword.movie_id) And (title.id = movie_link.movie_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'complete')"
352,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS complete_cast_movie_id_7, complete_cast.subject_id AS subject_id, link_type.id AS link_type_id_9, link_type.link AS link, movie_companies.note AS note, movie_info.info AS info, movie_keyword.keyword_id AS keyword_id, movie_link.movie_id AS movie_link_movie_id_14, title.id AS title_id_15, title.production_year AS production_year, title.title AS title
 from link_type,movie_info,movie_companies,company_type,title,company_name,comp_cast_type,complete_cast,movie_link,movie_keyword
 where (link_type.id = movie_link.link_type_id) And (movie_info.movie_id = movie_companies.movie_id) And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note IS NULL) And (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (title.id = movie_keyword.movie_id) And (title.id = movie_link.movie_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'complete')","create materialized view if not exists mv352 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS complete_cast_movie_id_7, complete_cast.subject_id AS subject_id, link_type.id AS link_type_id_9, link_type.link AS link, movie_companies.note AS note, movie_info.info AS info, movie_keyword.keyword_id AS keyword_id, movie_link.movie_id AS movie_link_movie_id_14, title.id AS title_id_15, title.production_year AS production_year, title.title AS title
 from link_type,movie_info,movie_companies,company_type,title,company_name,comp_cast_type,complete_cast,movie_link,movie_keyword
 where (link_type.id = movie_link.link_type_id) And (movie_info.movie_id = movie_companies.movie_id) And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note IS NULL) And (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (title.id = movie_keyword.movie_id) And (title.id = movie_link.movie_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'complete')"
353,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS complete_cast_movie_id_7, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_9, keyword.keyword AS keyword, link_type.id AS link_type_id_11, link_type.link AS link, movie_companies.note AS note, movie_info.info AS info, movie_keyword.movie_id AS movie_keyword_movie_id_15, movie_link.movie_id AS movie_link_movie_id_16, title.production_year AS production_year, title.title AS title
 from link_type,movie_info,keyword,movie_companies,company_type,title,company_name,comp_cast_type,complete_cast,movie_link,movie_keyword
 where (link_type.id = movie_link.link_type_id) And (movie_info.movie_id = movie_companies.movie_id) And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (keyword.id = movie_keyword.keyword_id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note IS NULL) And (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (title.id = movie_keyword.movie_id) And (title.id = movie_link.movie_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'complete')","create materialized view if not exists mv353 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS complete_cast_movie_id_7, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_9, keyword.keyword AS keyword, link_type.id AS link_type_id_11, link_type.link AS link, movie_companies.note AS note, movie_info.info AS info, movie_keyword.movie_id AS movie_keyword_movie_id_15, movie_link.movie_id AS movie_link_movie_id_16, title.production_year AS production_year, title.title AS title
 from link_type,movie_info,keyword,movie_companies,company_type,title,company_name,comp_cast_type,complete_cast,movie_link,movie_keyword
 where (link_type.id = movie_link.link_type_id) And (movie_info.movie_id = movie_companies.movie_id) And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (keyword.id = movie_keyword.keyword_id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note IS NULL) And (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (title.id = movie_keyword.movie_id) And (title.id = movie_link.movie_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'complete')"
354,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS complete_cast_movie_id_7, keyword.id AS keyword_id_8, keyword.keyword AS keyword, link_type.id AS link_type_id_10, link_type.link AS link, movie_companies.note AS note, movie_info.info AS info, movie_keyword.movie_id AS movie_keyword_movie_id_14, movie_link.movie_id AS movie_link_movie_id_15, title.production_year AS production_year, title.title AS title
 from link_type,movie_info,keyword,movie_companies,company_type,title,company_name,comp_cast_type,complete_cast,movie_link,movie_keyword
 where (link_type.id = movie_link.link_type_id) And (movie_info.movie_id = movie_companies.movie_id) And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (keyword.id = movie_keyword.keyword_id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note IS NULL) And (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (title.id = movie_keyword.movie_id) And (title.id = movie_link.movie_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'complete') And (comp_cast_type.id = complete_cast.subject_id)","create materialized view if not exists mv354 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS complete_cast_movie_id_7, keyword.id AS keyword_id_8, keyword.keyword AS keyword, link_type.id AS link_type_id_10, link_type.link AS link, movie_companies.note AS note, movie_info.info AS info, movie_keyword.movie_id AS movie_keyword_movie_id_14, movie_link.movie_id AS movie_link_movie_id_15, title.production_year AS production_year, title.title AS title
 from link_type,movie_info,keyword,movie_companies,company_type,title,company_name,comp_cast_type,complete_cast,movie_link,movie_keyword
 where (link_type.id = movie_link.link_type_id) And (movie_info.movie_id = movie_companies.movie_id) And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (keyword.id = movie_keyword.keyword_id) And (movie_companies.movie_id = complete_cast.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.company_type_id = company_type.id) And (movie_companies.note IS NULL) And (company_name.id = movie_companies.company_id) And (company_type.kind = 'production companies') And (title.id = movie_keyword.movie_id) And (title.id = movie_link.movie_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'complete') And (comp_cast_type.id = complete_cast.subject_id)"
355,"select complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, complete_cast.subject_id AS subject_id, keyword.id AS id, keyword.keyword AS keyword
 from keyword,complete_cast,movie_keyword
 where (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'sequel') And (complete_cast.movie_id = movie_keyword.movie_id)","create materialized view if not exists mv355 as select complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, complete_cast.subject_id AS subject_id, keyword.id AS id, keyword.keyword AS keyword
 from keyword,complete_cast,movie_keyword
 where (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'sequel') And (complete_cast.movie_id = movie_keyword.movie_id)"
356,"select complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, complete_cast.subject_id AS subject_id, keyword.id AS id, keyword.keyword AS keyword, movie_info.info AS info
 from movie_info,keyword,complete_cast,movie_keyword
 where (movie_info.movie_id = movie_keyword.movie_id) And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'sequel') And (complete_cast.movie_id = movie_keyword.movie_id)","create materialized view if not exists mv356 as select complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, complete_cast.subject_id AS subject_id, keyword.id AS id, keyword.keyword AS keyword, movie_info.info AS info
 from movie_info,keyword,complete_cast,movie_keyword
 where (movie_info.movie_id = movie_keyword.movie_id) And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'sequel') And (complete_cast.movie_id = movie_keyword.movie_id)"
357,"select complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, complete_cast.subject_id AS subject_id, keyword.id AS id, keyword.keyword AS keyword, movie_info.info AS info, movie_link.link_type_id AS link_type_id
 from movie_keyword,movie_info,complete_cast,movie_link,keyword
 where (complete_cast.movie_id = movie_keyword.movie_id) And (movie_info.movie_id = movie_keyword.movie_id) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (keyword.keyword = 'sequel')","create materialized view if not exists mv357 as select complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, complete_cast.subject_id AS subject_id, keyword.id AS id, keyword.keyword AS keyword, movie_info.info AS info, movie_link.link_type_id AS link_type_id
 from movie_keyword,movie_info,complete_cast,movie_link,keyword
 where (complete_cast.movie_id = movie_keyword.movie_id) And (movie_info.movie_id = movie_keyword.movie_id) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (keyword.keyword = 'sequel')"
358,"select complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, complete_cast.subject_id AS subject_id, keyword.id AS id, keyword.keyword AS keyword, movie_info.info AS info, movie_link.link_type_id AS link_type_id, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info,title,complete_cast,movie_link,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_info.movie_id = movie_keyword.movie_id) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (movie_link.movie_id = title.id) And (keyword.keyword = 'sequel')","create materialized view if not exists mv358 as select complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, complete_cast.subject_id AS subject_id, keyword.id AS id, keyword.keyword AS keyword, movie_info.info AS info, movie_link.link_type_id AS link_type_id, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info,title,complete_cast,movie_link,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_info.movie_id = movie_keyword.movie_id) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (movie_link.movie_id = title.id) And (keyword.keyword = 'sequel')"
359,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, keyword.id AS keyword_id_4, keyword.keyword AS keyword, movie_info.info AS info, movie_link.link_type_id AS link_type_id, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info,title,comp_cast_type,complete_cast,movie_link,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_info.movie_id = movie_keyword.movie_id) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (movie_link.movie_id = title.id) And (comp_cast_type.id = complete_cast.subject_id) And (keyword.keyword = 'sequel')","create materialized view if not exists mv359 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, keyword.id AS keyword_id_4, keyword.keyword AS keyword, movie_info.info AS info, movie_link.link_type_id AS link_type_id, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info,title,comp_cast_type,complete_cast,movie_link,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_info.movie_id = movie_keyword.movie_id) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (movie_link.movie_id = title.id) And (comp_cast_type.id = complete_cast.subject_id) And (keyword.keyword = 'sequel')"
360,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, keyword.id AS keyword_id_4, keyword.keyword AS keyword, movie_info.info AS info, movie_link.link_type_id AS link_type_id, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info,title,comp_cast_type,complete_cast,movie_link,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_info.movie_id = movie_keyword.movie_id) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (movie_link.movie_id = title.id) And (comp_cast_type.id = complete_cast.subject_id) And (comp_cast_type.id = complete_cast.status_id) And (keyword.keyword = 'sequel')","create materialized view if not exists mv360 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, keyword.id AS keyword_id_4, keyword.keyword AS keyword, movie_info.info AS info, movie_link.link_type_id AS link_type_id, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info,title,comp_cast_type,complete_cast,movie_link,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_info.movie_id = movie_keyword.movie_id) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (movie_link.movie_id = title.id) And (comp_cast_type.id = complete_cast.subject_id) And (comp_cast_type.id = complete_cast.status_id) And (keyword.keyword = 'sequel')"
361,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_2, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_4, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_companies_movie_id_8, movie_companies.note AS note, movie_info.info AS info, movie_link.link_type_id AS link_type_id, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info,movie_companies,title,comp_cast_type,complete_cast,movie_link,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_info.movie_id = movie_keyword.movie_id) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.note IS NULL) And (movie_link.movie_id = title.id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (keyword.keyword = 'sequel')","create materialized view if not exists mv361 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_2, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_4, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_companies_movie_id_8, movie_companies.note AS note, movie_info.info AS info, movie_link.link_type_id AS link_type_id, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info,movie_companies,title,comp_cast_type,complete_cast,movie_link,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_info.movie_id = movie_keyword.movie_id) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.note IS NULL) And (movie_link.movie_id = title.id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (keyword.keyword = 'sequel')"
362,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_type.id AS company_type_id_2, company_type.kind AS company_type_kind_3, complete_cast.movie_id AS complete_cast_movie_id_4, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_6, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_companies_movie_id_9, movie_companies.note AS note, movie_info.info AS info, movie_link.link_type_id AS link_type_id, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info,movie_companies,title,company_type,comp_cast_type,complete_cast,movie_link,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_info.movie_id = movie_keyword.movie_id) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.note IS NULL) And (company_type.id = movie_companies.company_type_id) And (movie_link.movie_id = title.id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (keyword.keyword = 'sequel')","create materialized view if not exists mv362 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_type.id AS company_type_id_2, company_type.kind AS company_type_kind_3, complete_cast.movie_id AS complete_cast_movie_id_4, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_6, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_companies_movie_id_9, movie_companies.note AS note, movie_info.info AS info, movie_link.link_type_id AS link_type_id, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info,movie_companies,title,company_type,comp_cast_type,complete_cast,movie_link,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_info.movie_id = movie_keyword.movie_id) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.note IS NULL) And (company_type.id = movie_companies.company_type_id) And (movie_link.movie_id = title.id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (keyword.keyword = 'sequel')"
363,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS complete_cast_movie_id_7, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_9, keyword.keyword AS keyword, movie_companies.movie_id AS movie_companies_movie_id_11, movie_companies.note AS note, movie_info.info AS info, movie_link.link_type_id AS link_type_id, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info,movie_companies,title,company_type,company_name,comp_cast_type,complete_cast,movie_link,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_info.movie_id = movie_keyword.movie_id) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.note IS NULL) And (company_type.id = movie_companies.company_type_id) And (company_name.id = movie_companies.company_id) And (movie_link.movie_id = title.id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (keyword.keyword = 'sequel')","create materialized view if not exists mv363 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS complete_cast_movie_id_7, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_9, keyword.keyword AS keyword, movie_companies.movie_id AS movie_companies_movie_id_11, movie_companies.note AS note, movie_info.info AS info, movie_link.link_type_id AS link_type_id, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info,movie_companies,title,company_type,company_name,comp_cast_type,complete_cast,movie_link,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_info.movie_id = movie_keyword.movie_id) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.note IS NULL) And (company_type.id = movie_companies.company_type_id) And (company_name.id = movie_companies.company_id) And (movie_link.movie_id = title.id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (keyword.keyword = 'sequel')"
364,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS complete_cast_movie_id_7, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_9, keyword.keyword AS keyword, link_type.id AS link_type_id_11, link_type.link AS link, movie_companies.movie_id AS movie_companies_movie_id_13, movie_companies.note AS note, movie_info.info AS info, title.id AS title_id_16, title.production_year AS production_year, title.title AS title
 from link_type,movie_keyword,movie_info,movie_companies,title,company_type,company_name,comp_cast_type,complete_cast,movie_link,keyword
 where (link_type.id = movie_link.link_type_id) And (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_info.movie_id = movie_keyword.movie_id) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.note IS NULL) And (company_type.id = movie_companies.company_type_id) And (company_name.id = movie_companies.company_id) And (movie_link.movie_id = title.id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (keyword.keyword = 'sequel')","create materialized view if not exists mv364 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS complete_cast_movie_id_7, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_9, keyword.keyword AS keyword, link_type.id AS link_type_id_11, link_type.link AS link, movie_companies.movie_id AS movie_companies_movie_id_13, movie_companies.note AS note, movie_info.info AS info, title.id AS title_id_16, title.production_year AS production_year, title.title AS title
 from link_type,movie_keyword,movie_info,movie_companies,title,company_type,company_name,comp_cast_type,complete_cast,movie_link,keyword
 where (link_type.id = movie_link.link_type_id) And (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_info.movie_id = movie_keyword.movie_id) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (movie_companies.movie_id = movie_link.movie_id) And (movie_companies.note IS NULL) And (company_type.id = movie_companies.company_type_id) And (company_name.id = movie_companies.company_id) And (movie_link.movie_id = title.id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (keyword.keyword = 'sequel')"
365,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_4, keyword.keyword AS keyword
 from keyword,comp_cast_type,complete_cast,movie_keyword
 where (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'sequel') And (comp_cast_type.id = complete_cast.status_id) And (complete_cast.movie_id = movie_keyword.movie_id)","create materialized view if not exists mv365 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_4, keyword.keyword AS keyword
 from keyword,comp_cast_type,complete_cast,movie_keyword
 where (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'sequel') And (comp_cast_type.id = complete_cast.status_id) And (complete_cast.movie_id = movie_keyword.movie_id)"
366,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_4, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.note AS note
 from movie_keyword,movie_companies,comp_cast_type,complete_cast,keyword
 where (complete_cast.movie_id = movie_keyword.movie_id) And (movie_keyword.movie_id = movie_companies.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_companies.note IS NULL) And (comp_cast_type.id = complete_cast.status_id) And (keyword.keyword = 'sequel')","create materialized view if not exists mv366 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_4, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.note AS note
 from movie_keyword,movie_companies,comp_cast_type,complete_cast,keyword
 where (complete_cast.movie_id = movie_keyword.movie_id) And (movie_keyword.movie_id = movie_companies.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_companies.note IS NULL) And (comp_cast_type.id = complete_cast.status_id) And (keyword.keyword = 'sequel')"
367,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_7, keyword.keyword AS keyword, movie_companies.company_type_id AS company_type_id, movie_companies.note AS note
 from movie_keyword,movie_companies,company_name,comp_cast_type,complete_cast,keyword
 where (complete_cast.movie_id = movie_keyword.movie_id) And (movie_keyword.movie_id = movie_companies.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_companies.note IS NULL) And (company_name.id = movie_companies.company_id) And (comp_cast_type.id = complete_cast.status_id) And (keyword.keyword = 'sequel')","create materialized view if not exists mv367 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_7, keyword.keyword AS keyword, movie_companies.company_type_id AS company_type_id, movie_companies.note AS note
 from movie_keyword,movie_companies,company_name,comp_cast_type,complete_cast,keyword
 where (complete_cast.movie_id = movie_keyword.movie_id) And (movie_keyword.movie_id = movie_companies.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_companies.note IS NULL) And (company_name.id = movie_companies.company_id) And (comp_cast_type.id = complete_cast.status_id) And (keyword.keyword = 'sequel')"
368,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_9, keyword.keyword AS keyword, movie_companies.note AS note
 from movie_keyword,movie_companies,company_type,company_name,comp_cast_type,complete_cast,keyword
 where (complete_cast.movie_id = movie_keyword.movie_id) And (movie_keyword.movie_id = movie_companies.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_companies.note IS NULL) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (comp_cast_type.id = complete_cast.status_id) And (keyword.keyword = 'sequel')","create materialized view if not exists mv368 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_9, keyword.keyword AS keyword, movie_companies.note AS note
 from movie_keyword,movie_companies,company_type,company_name,comp_cast_type,complete_cast,keyword
 where (complete_cast.movie_id = movie_keyword.movie_id) And (movie_keyword.movie_id = movie_companies.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_companies.note IS NULL) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (comp_cast_type.id = complete_cast.status_id) And (keyword.keyword = 'sequel')"
369,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_9, keyword.keyword AS keyword, movie_companies.note AS note, movie_info.info AS info
 from movie_keyword,movie_info,movie_companies,company_type,company_name,comp_cast_type,complete_cast,keyword
 where (complete_cast.movie_id = movie_keyword.movie_id) And (movie_keyword.movie_id = movie_companies.movie_id) And (movie_keyword.movie_id = movie_info.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')) And (movie_companies.note IS NULL) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (comp_cast_type.id = complete_cast.status_id) And (keyword.keyword = 'sequel')","create materialized view if not exists mv369 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_9, keyword.keyword AS keyword, movie_companies.note AS note, movie_info.info AS info
 from movie_keyword,movie_info,movie_companies,company_type,company_name,comp_cast_type,complete_cast,keyword
 where (complete_cast.movie_id = movie_keyword.movie_id) And (movie_keyword.movie_id = movie_companies.movie_id) And (movie_keyword.movie_id = movie_info.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')) And (movie_companies.note IS NULL) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (comp_cast_type.id = complete_cast.status_id) And (keyword.keyword = 'sequel')"
370,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_9, keyword.keyword AS keyword, movie_companies.note AS note, movie_info.info AS info, title.id AS title_id_13, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info,movie_companies,company_type,title,company_name,comp_cast_type,complete_cast,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_keyword.movie_id = movie_companies.movie_id) And (movie_keyword.movie_id = movie_info.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')) And (movie_companies.note IS NULL) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (comp_cast_type.id = complete_cast.status_id) And (keyword.keyword = 'sequel')","create materialized view if not exists mv370 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_9, keyword.keyword AS keyword, movie_companies.note AS note, movie_info.info AS info, title.id AS title_id_13, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info,movie_companies,company_type,title,company_name,comp_cast_type,complete_cast,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_keyword.movie_id = movie_companies.movie_id) And (movie_keyword.movie_id = movie_info.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')) And (movie_companies.note IS NULL) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (comp_cast_type.id = complete_cast.status_id) And (keyword.keyword = 'sequel')"
371,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS complete_cast_movie_id_7, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_9, keyword.keyword AS keyword, movie_companies.note AS note, movie_info.info AS info, movie_link.link_type_id AS link_type_id, movie_link.movie_id AS movie_link_movie_id_14, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info,movie_companies,company_type,title,company_name,comp_cast_type,complete_cast,movie_link,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_keyword.movie_id = movie_companies.movie_id) And (movie_keyword.movie_id = movie_info.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')) And (movie_companies.note IS NULL) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (title.id = movie_link.movie_id) And (comp_cast_type.id = complete_cast.status_id) And (keyword.keyword = 'sequel')","create materialized view if not exists mv371 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS complete_cast_movie_id_7, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_9, keyword.keyword AS keyword, movie_companies.note AS note, movie_info.info AS info, movie_link.link_type_id AS link_type_id, movie_link.movie_id AS movie_link_movie_id_14, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info,movie_companies,company_type,title,company_name,comp_cast_type,complete_cast,movie_link,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_keyword.movie_id = movie_companies.movie_id) And (movie_keyword.movie_id = movie_info.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')) And (movie_companies.note IS NULL) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (title.id = movie_link.movie_id) And (comp_cast_type.id = complete_cast.status_id) And (keyword.keyword = 'sequel')"
372,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS complete_cast_movie_id_7, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_9, keyword.keyword AS keyword, link_type.id AS link_type_id_11, link_type.link AS link, movie_companies.note AS note, movie_info.info AS info, movie_link.movie_id AS movie_link_movie_id_15, title.production_year AS production_year, title.title AS title
 from link_type,movie_keyword,movie_info,movie_companies,company_type,title,company_name,comp_cast_type,complete_cast,movie_link,keyword
 where (link_type.id = movie_link.link_type_id) And (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_keyword.movie_id = movie_companies.movie_id) And (movie_keyword.movie_id = movie_info.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')) And (movie_companies.note IS NULL) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (title.id = movie_link.movie_id) And (comp_cast_type.id = complete_cast.status_id) And (keyword.keyword = 'sequel')","create materialized view if not exists mv372 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS complete_cast_movie_id_7, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_9, keyword.keyword AS keyword, link_type.id AS link_type_id_11, link_type.link AS link, movie_companies.note AS note, movie_info.info AS info, movie_link.movie_id AS movie_link_movie_id_15, title.production_year AS production_year, title.title AS title
 from link_type,movie_keyword,movie_info,movie_companies,company_type,title,company_name,comp_cast_type,complete_cast,movie_link,keyword
 where (link_type.id = movie_link.link_type_id) And (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_keyword.movie_id = movie_companies.movie_id) And (movie_keyword.movie_id = movie_info.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')) And (movie_companies.note IS NULL) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (title.id = movie_link.movie_id) And (comp_cast_type.id = complete_cast.status_id) And (keyword.keyword = 'sequel')"
373,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS complete_cast_movie_id_7, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_9, keyword.keyword AS keyword, link_type.id AS link_type_id_11, link_type.link AS link, movie_companies.note AS note, movie_info.info AS info, movie_link.movie_id AS movie_link_movie_id_15, title.production_year AS production_year, title.title AS title
 from link_type,movie_keyword,movie_info,movie_companies,company_type,title,company_name,comp_cast_type,complete_cast,movie_link,keyword
 where (link_type.id = movie_link.link_type_id) And (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_keyword.movie_id = movie_companies.movie_id) And (movie_keyword.movie_id = movie_info.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')) And (movie_companies.note IS NULL) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (title.id = movie_link.movie_id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (keyword.keyword = 'sequel')","create materialized view if not exists mv373 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, company_type.kind AS company_type_kind_6, complete_cast.movie_id AS complete_cast_movie_id_7, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_9, keyword.keyword AS keyword, link_type.id AS link_type_id_11, link_type.link AS link, movie_companies.note AS note, movie_info.info AS info, movie_link.movie_id AS movie_link_movie_id_15, title.production_year AS production_year, title.title AS title
 from link_type,movie_keyword,movie_info,movie_companies,company_type,title,company_name,comp_cast_type,complete_cast,movie_link,keyword
 where (link_type.id = movie_link.link_type_id) And (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_keyword.movie_id = movie_companies.movie_id) And (movie_keyword.movie_id = movie_info.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English')) And (movie_companies.note IS NULL) And (company_name.id = movie_companies.company_id) And (company_type.id = movie_companies.company_type_id) And (title.id = movie_link.movie_id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (keyword.keyword = 'sequel')"
374,"select complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, complete_cast.subject_id AS subject_id, keyword.id AS id, keyword.keyword AS keyword
 from keyword,complete_cast,movie_keyword
 where (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence')) And (complete_cast.movie_id = movie_keyword.movie_id)","create materialized view if not exists mv374 as select complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, complete_cast.subject_id AS subject_id, keyword.id AS id, keyword.keyword AS keyword
 from keyword,complete_cast,movie_keyword
 where (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence')) And (complete_cast.movie_id = movie_keyword.movie_id)"
375,"select complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, complete_cast.subject_id AS subject_id, keyword.id AS id, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.note AS note
 from movie_companies,keyword,complete_cast,movie_keyword
 where (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence')) And (complete_cast.movie_id = movie_keyword.movie_id)","create materialized view if not exists mv375 as select complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, complete_cast.subject_id AS subject_id, keyword.id AS id, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.note AS note
 from movie_companies,keyword,complete_cast,movie_keyword
 where (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence')) And (complete_cast.movie_id = movie_keyword.movie_id)"
376,"select complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, complete_cast.subject_id AS subject_id, keyword.id AS id, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.note AS note, movie_info.info AS info, movie_info.info_type_id AS info_type_id
 from movie_keyword,movie_info,movie_companies,complete_cast,keyword
 where (complete_cast.movie_id = movie_keyword.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_info.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence'))","create materialized view if not exists mv376 as select complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, complete_cast.subject_id AS subject_id, keyword.id AS id, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.note AS note, movie_info.info AS info, movie_info.info_type_id AS info_type_id
 from movie_keyword,movie_info,movie_companies,complete_cast,keyword
 where (complete_cast.movie_id = movie_keyword.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_info.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence'))"
377,"select complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, keyword.id AS keyword_id_5, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.note AS note, movie_info.info AS movie_info_info_10
 from movie_keyword,movie_info,movie_companies,complete_cast,info_type,keyword
 where (complete_cast.movie_id = movie_keyword.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_info.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info.info_type_id = info_type.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (info_type.info = 'countries') And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence'))","create materialized view if not exists mv377 as select complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, keyword.id AS keyword_id_5, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.note AS note, movie_info.info AS movie_info_info_10
 from movie_keyword,movie_info,movie_companies,complete_cast,info_type,keyword
 where (complete_cast.movie_id = movie_keyword.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_info.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info.info_type_id = info_type.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (info_type.info = 'countries') And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence'))"
378,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, keyword.id AS keyword_id_6, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.note AS note, movie_info.info AS movie_info_info_11
 from movie_keyword,movie_info,movie_companies,comp_cast_type,complete_cast,info_type,keyword
 where (complete_cast.movie_id = movie_keyword.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_info.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info.info_type_id = info_type.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (comp_cast_type.id = complete_cast.subject_id) And (info_type.info = 'countries') And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence'))","create materialized view if not exists mv378 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, keyword.id AS keyword_id_6, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.note AS note, movie_info.info AS movie_info_info_11
 from movie_keyword,movie_info,movie_companies,comp_cast_type,complete_cast,info_type,keyword
 where (complete_cast.movie_id = movie_keyword.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_info.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info.info_type_id = info_type.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (comp_cast_type.id = complete_cast.subject_id) And (info_type.info = 'countries') And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence'))"
379,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, keyword.id AS keyword_id_6, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.note AS note, movie_info.info AS movie_info_info_11, title.id AS title_id_12, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info,movie_companies,title,comp_cast_type,complete_cast,info_type,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_info.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (comp_cast_type.id = complete_cast.subject_id) And (info_type.info = 'countries') And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence'))","create materialized view if not exists mv379 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, keyword.id AS keyword_id_6, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.note AS note, movie_info.info AS movie_info_info_11, title.id AS title_id_12, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info,movie_companies,title,comp_cast_type,complete_cast,info_type,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_info.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (comp_cast_type.id = complete_cast.subject_id) And (info_type.info = 'countries') And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence'))"
380,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_2, complete_cast.status_id AS status_id, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, keyword.id AS keyword_id_6, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.note AS note, movie_info.info AS movie_info_info_11, movie_info.movie_id AS movie_info_movie_id_12, movie_info_idx.info AS movie_info_idx_info_13, movie_info_idx.info_type_id AS info_type_id, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
 from movie_info_idx,movie_info,keyword,movie_companies,title,comp_cast_type,complete_cast,info_type,movie_keyword
 where (movie_info_idx.movie_id = title.id) And (movie_info_idx.info < '8.5') And (movie_info.movie_id = title.id) And (movie_info.movie_id = movie_keyword.movie_id) And (movie_info.info_type_id = info_type.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence')) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (title.id = movie_keyword.movie_id) And (comp_cast_type.id = complete_cast.subject_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (info_type.info = 'countries')","create materialized view if not exists mv380 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_2, complete_cast.status_id AS status_id, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, keyword.id AS keyword_id_6, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.note AS note, movie_info.info AS movie_info_info_11, movie_info.movie_id AS movie_info_movie_id_12, movie_info_idx.info AS movie_info_idx_info_13, movie_info_idx.info_type_id AS info_type_id, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
 from movie_info_idx,movie_info,keyword,movie_companies,title,comp_cast_type,complete_cast,info_type,movie_keyword
 where (movie_info_idx.movie_id = title.id) And (movie_info_idx.info < '8.5') And (movie_info.movie_id = title.id) And (movie_info.movie_id = movie_keyword.movie_id) And (movie_info.info_type_id = info_type.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence')) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (title.id = movie_keyword.movie_id) And (comp_cast_type.id = complete_cast.subject_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (info_type.info = 'countries')"
381,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_2, complete_cast.status_id AS status_id, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, keyword.id AS keyword_id_6, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.note AS note, movie_info.info AS movie_info_info_11, movie_info.movie_id AS movie_info_movie_id_12, movie_info_idx.info AS movie_info_idx_info_13, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
 from movie_info_idx,movie_info,keyword,movie_companies,title,comp_cast_type,complete_cast,info_type,movie_keyword
 where (movie_info_idx.movie_id = title.id) And (movie_info_idx.info < '8.5') And (info_type.id = movie_info_idx.info_type_id) And (movie_info.movie_id = title.id) And (movie_info.movie_id = movie_keyword.movie_id) And (movie_info.info_type_id = info_type.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence')) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (title.id = movie_keyword.movie_id) And (comp_cast_type.id = complete_cast.subject_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (info_type.info = 'countries')","create materialized view if not exists mv381 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_2, complete_cast.status_id AS status_id, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, keyword.id AS keyword_id_6, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.note AS note, movie_info.info AS movie_info_info_11, movie_info.movie_id AS movie_info_movie_id_12, movie_info_idx.info AS movie_info_idx_info_13, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
 from movie_info_idx,movie_info,keyword,movie_companies,title,comp_cast_type,complete_cast,info_type,movie_keyword
 where (movie_info_idx.movie_id = title.id) And (movie_info_idx.info < '8.5') And (info_type.id = movie_info_idx.info_type_id) And (movie_info.movie_id = title.id) And (movie_info.movie_id = movie_keyword.movie_id) And (movie_info.info_type_id = info_type.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence')) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (title.id = movie_keyword.movie_id) And (comp_cast_type.id = complete_cast.subject_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (info_type.info = 'countries')"
382,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_2, complete_cast.status_id AS status_id, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, keyword.id AS keyword_id_6, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.note AS note, movie_info.info AS movie_info_info_11, movie_info.movie_id AS movie_info_movie_id_12, movie_info_idx.info AS movie_info_idx_info_13, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
 from movie_info_idx,movie_info,keyword,movie_companies,title,comp_cast_type,complete_cast,info_type,movie_keyword
 where (movie_info_idx.movie_id = title.id) And (movie_info_idx.info < '8.5') And (info_type.id = movie_info_idx.info_type_id) And (movie_info.movie_id = title.id) And (movie_info.movie_id = movie_keyword.movie_id) And (movie_info.info_type_id = info_type.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence')) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (title.id = movie_keyword.movie_id) And (comp_cast_type.id = complete_cast.subject_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (comp_cast_type.id = complete_cast.status_id) And (info_type.info = 'countries')","create materialized view if not exists mv382 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_2, complete_cast.status_id AS status_id, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, keyword.id AS keyword_id_6, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.note AS note, movie_info.info AS movie_info_info_11, movie_info.movie_id AS movie_info_movie_id_12, movie_info_idx.info AS movie_info_idx_info_13, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
 from movie_info_idx,movie_info,keyword,movie_companies,title,comp_cast_type,complete_cast,info_type,movie_keyword
 where (movie_info_idx.movie_id = title.id) And (movie_info_idx.info < '8.5') And (info_type.id = movie_info_idx.info_type_id) And (movie_info.movie_id = title.id) And (movie_info.movie_id = movie_keyword.movie_id) And (movie_info.info_type_id = info_type.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence')) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (title.id = movie_keyword.movie_id) And (comp_cast_type.id = complete_cast.subject_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (comp_cast_type.id = complete_cast.status_id) And (info_type.info = 'countries')"
383,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, complete_cast.movie_id AS complete_cast_movie_id_2, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, keyword.id AS keyword_id_6, keyword.keyword AS keyword, kind_type.id AS kind_type_id_8, kind_type.kind AS kind_type_kind_9, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.note AS note, movie_info.info AS movie_info_info_13, movie_info.movie_id AS movie_info_movie_id_14, movie_info_idx.info AS movie_info_idx_info_15, title.production_year AS production_year, title.title AS title
 from movie_info_idx,movie_info,keyword,movie_companies,title,comp_cast_type,complete_cast,kind_type,info_type,movie_keyword
 where (movie_info_idx.movie_id = title.id) And (movie_info_idx.info < '8.5') And (info_type.id = movie_info_idx.info_type_id) And (movie_info.movie_id = title.id) And (movie_info.movie_id = movie_keyword.movie_id) And (movie_info.info_type_id = info_type.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence')) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (title.id = movie_keyword.movie_id) And (kind_type.id = title.kind_id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (info_type.info = 'countries')","create materialized view if not exists mv383 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, complete_cast.movie_id AS complete_cast_movie_id_2, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, keyword.id AS keyword_id_6, keyword.keyword AS keyword, kind_type.id AS kind_type_id_8, kind_type.kind AS kind_type_kind_9, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.note AS note, movie_info.info AS movie_info_info_13, movie_info.movie_id AS movie_info_movie_id_14, movie_info_idx.info AS movie_info_idx_info_15, title.production_year AS production_year, title.title AS title
 from movie_info_idx,movie_info,keyword,movie_companies,title,comp_cast_type,complete_cast,kind_type,info_type,movie_keyword
 where (movie_info_idx.movie_id = title.id) And (movie_info_idx.info < '8.5') And (info_type.id = movie_info_idx.info_type_id) And (movie_info.movie_id = title.id) And (movie_info.movie_id = movie_keyword.movie_id) And (movie_info.info_type_id = info_type.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence')) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (title.id = movie_keyword.movie_id) And (kind_type.id = title.kind_id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (info_type.info = 'countries')"
384,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_type.id AS company_type_id_2, complete_cast.movie_id AS complete_cast_movie_id_3, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, keyword.id AS keyword_id_7, keyword.keyword AS keyword, kind_type.id AS kind_type_id_9, kind_type.kind AS kind_type_kind_10, movie_companies.company_id AS company_id, movie_companies.note AS note, movie_info.info AS movie_info_info_13, movie_info.movie_id AS movie_info_movie_id_14, movie_info_idx.info AS movie_info_idx_info_15, title.production_year AS production_year, title.title AS title
 from movie_info_idx,movie_info,keyword,movie_companies,title,company_type,comp_cast_type,complete_cast,kind_type,info_type,movie_keyword
 where (movie_info_idx.movie_id = title.id) And (movie_info_idx.info < '8.5') And (info_type.id = movie_info_idx.info_type_id) And (movie_info.movie_id = title.id) And (movie_info.movie_id = movie_keyword.movie_id) And (movie_info.info_type_id = info_type.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence')) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (company_type.id = movie_companies.company_type_id) And (title.id = movie_keyword.movie_id) And (kind_type.id = title.kind_id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (info_type.info = 'countries')","create materialized view if not exists mv384 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_type.id AS company_type_id_2, complete_cast.movie_id AS complete_cast_movie_id_3, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, keyword.id AS keyword_id_7, keyword.keyword AS keyword, kind_type.id AS kind_type_id_9, kind_type.kind AS kind_type_kind_10, movie_companies.company_id AS company_id, movie_companies.note AS note, movie_info.info AS movie_info_info_13, movie_info.movie_id AS movie_info_movie_id_14, movie_info_idx.info AS movie_info_idx_info_15, title.production_year AS production_year, title.title AS title
 from movie_info_idx,movie_info,keyword,movie_companies,title,company_type,comp_cast_type,complete_cast,kind_type,info_type,movie_keyword
 where (movie_info_idx.movie_id = title.id) And (movie_info_idx.info < '8.5') And (info_type.id = movie_info_idx.info_type_id) And (movie_info.movie_id = title.id) And (movie_info.movie_id = movie_keyword.movie_id) And (movie_info.info_type_id = info_type.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence')) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (company_type.id = movie_companies.company_type_id) And (title.id = movie_keyword.movie_id) And (kind_type.id = title.kind_id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (info_type.info = 'countries')"
385,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, complete_cast.movie_id AS complete_cast_movie_id_6, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_8, info_type.info AS info_type_info_9, keyword.id AS keyword_id_10, keyword.keyword AS keyword, kind_type.id AS kind_type_id_12, kind_type.kind AS kind_type_kind_13, movie_companies.note AS note, movie_info.info AS movie_info_info_15, movie_info.movie_id AS movie_info_movie_id_16, movie_info_idx.info AS movie_info_idx_info_17, title.production_year AS production_year, title.title AS title
 from movie_info_idx,movie_info,keyword,movie_companies,title,company_type,company_name,comp_cast_type,complete_cast,kind_type,info_type,movie_keyword
 where (movie_info_idx.movie_id = title.id) And (movie_info_idx.info < '8.5') And (info_type.id = movie_info_idx.info_type_id) And (movie_info.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence')) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (company_type.id = movie_companies.company_type_id) And (company_name.id = movie_companies.company_id) And (title.id = movie_keyword.movie_id) And (kind_type.id = title.kind_id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (info_type.info = 'countries') And (movie_info.movie_id = movie_keyword.movie_id)","create materialized view if not exists mv385 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, complete_cast.movie_id AS complete_cast_movie_id_6, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_8, info_type.info AS info_type_info_9, keyword.id AS keyword_id_10, keyword.keyword AS keyword, kind_type.id AS kind_type_id_12, kind_type.kind AS kind_type_kind_13, movie_companies.note AS note, movie_info.info AS movie_info_info_15, movie_info.movie_id AS movie_info_movie_id_16, movie_info_idx.info AS movie_info_idx_info_17, title.production_year AS production_year, title.title AS title
 from movie_info_idx,movie_info,keyword,movie_companies,title,company_type,company_name,comp_cast_type,complete_cast,kind_type,info_type,movie_keyword
 where (movie_info_idx.movie_id = title.id) And (movie_info_idx.info < '8.5') And (info_type.id = movie_info_idx.info_type_id) And (movie_info.movie_id = title.id) And (movie_info.info_type_id = info_type.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence')) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (company_type.id = movie_companies.company_type_id) And (company_name.id = movie_companies.company_id) And (title.id = movie_keyword.movie_id) And (kind_type.id = title.kind_id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (info_type.info = 'countries') And (movie_info.movie_id = movie_keyword.movie_id)"
386,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_4, keyword.keyword AS keyword
 from keyword,comp_cast_type,complete_cast,movie_keyword
 where (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence')) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = '__NOTEQUAL__complete+verified') And (complete_cast.movie_id = movie_keyword.movie_id)","create materialized view if not exists mv386 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_4, keyword.keyword AS keyword
 from keyword,comp_cast_type,complete_cast,movie_keyword
 where (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence')) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = '__NOTEQUAL__complete+verified') And (complete_cast.movie_id = movie_keyword.movie_id)"
387,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_4, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.note AS note
 from movie_keyword,movie_companies,comp_cast_type,complete_cast,keyword
 where (complete_cast.movie_id = movie_keyword.movie_id) And (movie_keyword.movie_id = movie_companies.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = '__NOTEQUAL__complete+verified') And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence'))","create materialized view if not exists mv387 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_4, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.note AS note
 from movie_keyword,movie_companies,comp_cast_type,complete_cast,keyword
 where (complete_cast.movie_id = movie_keyword.movie_id) And (movie_keyword.movie_id = movie_companies.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = '__NOTEQUAL__complete+verified') And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence'))"
388,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, company_type.id AS company_type_id_2, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_5, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_companies.note AS note
 from movie_keyword,movie_companies,company_type,comp_cast_type,complete_cast,keyword
 where (complete_cast.movie_id = movie_keyword.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (company_type.id = movie_companies.company_type_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = '__NOTEQUAL__complete+verified') And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence'))","create materialized view if not exists mv388 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, company_type.id AS company_type_id_2, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_5, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_companies.note AS note
 from movie_keyword,movie_companies,company_type,comp_cast_type,complete_cast,keyword
 where (complete_cast.movie_id = movie_keyword.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (company_type.id = movie_companies.company_type_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = '__NOTEQUAL__complete+verified') And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence'))"
389,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, company_type.id AS company_type_id_2, complete_cast.movie_id AS movie_id, keyword.id AS keyword_id_4, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_companies.note AS note
 from movie_keyword,movie_companies,company_type,comp_cast_type,complete_cast,keyword
 where (complete_cast.movie_id = movie_keyword.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (company_type.id = movie_companies.company_type_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = '__NOTEQUAL__complete+verified') And (comp_cast_type.id = complete_cast.subject_id) And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence'))","create materialized view if not exists mv389 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, company_type.id AS company_type_id_2, complete_cast.movie_id AS movie_id, keyword.id AS keyword_id_4, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_companies.note AS note
 from movie_keyword,movie_companies,company_type,comp_cast_type,complete_cast,keyword
 where (complete_cast.movie_id = movie_keyword.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (company_type.id = movie_companies.company_type_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = '__NOTEQUAL__complete+verified') And (comp_cast_type.id = complete_cast.subject_id) And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence'))"
390,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, company_type.id AS company_type_id_2, complete_cast.movie_id AS movie_id, keyword.id AS keyword_id_4, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_companies.note AS note, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_companies,company_type,title,comp_cast_type,complete_cast,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (company_type.id = movie_companies.company_type_id) And (comp_cast_type.id = complete_cast.subject_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = '__NOTEQUAL__complete+verified') And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence'))","create materialized view if not exists mv390 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, company_type.id AS company_type_id_2, complete_cast.movie_id AS movie_id, keyword.id AS keyword_id_4, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_companies.note AS note, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_companies,company_type,title,comp_cast_type,complete_cast,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (company_type.id = movie_companies.company_type_id) And (comp_cast_type.id = complete_cast.subject_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = '__NOTEQUAL__complete+verified') And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence'))"
391,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_type.id AS company_type_id_2, complete_cast.movie_id AS movie_id, keyword.id AS keyword_id_4, keyword.keyword AS keyword, kind_type.id AS kind_type_id_6, kind_type.kind AS kind_type_kind_7, movie_companies.company_id AS company_id, movie_companies.note AS note, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_companies,company_type,title,comp_cast_type,complete_cast,kind_type,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (company_type.id = movie_companies.company_type_id) And (kind_type.id = title.kind_id) And (comp_cast_type.id = complete_cast.subject_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = '__NOTEQUAL__complete+verified') And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence'))","create materialized view if not exists mv391 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_type.id AS company_type_id_2, complete_cast.movie_id AS movie_id, keyword.id AS keyword_id_4, keyword.keyword AS keyword, kind_type.id AS kind_type_id_6, kind_type.kind AS kind_type_kind_7, movie_companies.company_id AS company_id, movie_companies.note AS note, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_companies,company_type,title,comp_cast_type,complete_cast,kind_type,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (company_type.id = movie_companies.company_type_id) And (kind_type.id = title.kind_id) And (comp_cast_type.id = complete_cast.subject_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = '__NOTEQUAL__complete+verified') And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence'))"
392,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_type.id AS company_type_id_2, complete_cast.movie_id AS complete_cast_movie_id_3, keyword.id AS keyword_id_4, keyword.keyword AS keyword, kind_type.id AS kind_type_id_6, kind_type.kind AS kind_type_kind_7, movie_companies.company_id AS company_id, movie_companies.note AS note, movie_info_idx.info AS info, movie_info_idx.info_type_id AS info_type_id, movie_info_idx.movie_id AS movie_info_idx_movie_id_12, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,movie_companies,company_type,title,comp_cast_type,complete_cast,kind_type,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info > '6.5') And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (company_type.id = movie_companies.company_type_id) And (kind_type.id = title.kind_id) And (comp_cast_type.id = complete_cast.subject_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = '__NOTEQUAL__complete+verified') And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence'))","create materialized view if not exists mv392 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_type.id AS company_type_id_2, complete_cast.movie_id AS complete_cast_movie_id_3, keyword.id AS keyword_id_4, keyword.keyword AS keyword, kind_type.id AS kind_type_id_6, kind_type.kind AS kind_type_kind_7, movie_companies.company_id AS company_id, movie_companies.note AS note, movie_info_idx.info AS info, movie_info_idx.info_type_id AS info_type_id, movie_info_idx.movie_id AS movie_info_idx_movie_id_12, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,movie_companies,company_type,title,comp_cast_type,complete_cast,kind_type,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info > '6.5') And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (company_type.id = movie_companies.company_type_id) And (kind_type.id = title.kind_id) And (comp_cast_type.id = complete_cast.subject_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = '__NOTEQUAL__complete+verified') And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence'))"
393,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_type.id AS company_type_id_2, complete_cast.movie_id AS complete_cast_movie_id_3, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, keyword.id AS keyword_id_6, keyword.keyword AS keyword, kind_type.id AS kind_type_id_8, kind_type.kind AS kind_type_kind_9, movie_companies.company_id AS company_id, movie_companies.note AS note, movie_info_idx.info AS movie_info_idx_info_12, movie_info_idx.movie_id AS movie_info_idx_movie_id_13, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,movie_companies,company_type,title,comp_cast_type,complete_cast,kind_type,info_type,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info > '6.5') And (info_type.id = movie_info_idx.info_type_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (company_type.id = movie_companies.company_type_id) And (kind_type.id = title.kind_id) And (comp_cast_type.id = complete_cast.subject_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = '__NOTEQUAL__complete+verified') And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence'))","create materialized view if not exists mv393 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_type.id AS company_type_id_2, complete_cast.movie_id AS complete_cast_movie_id_3, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, keyword.id AS keyword_id_6, keyword.keyword AS keyword, kind_type.id AS kind_type_id_8, kind_type.kind AS kind_type_kind_9, movie_companies.company_id AS company_id, movie_companies.note AS note, movie_info_idx.info AS movie_info_idx_info_12, movie_info_idx.movie_id AS movie_info_idx_movie_id_13, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,movie_companies,company_type,title,comp_cast_type,complete_cast,kind_type,info_type,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info > '6.5') And (info_type.id = movie_info_idx.info_type_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (company_type.id = movie_companies.company_type_id) And (kind_type.id = title.kind_id) And (comp_cast_type.id = complete_cast.subject_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = '__NOTEQUAL__complete+verified') And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence'))"
394,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_type.id AS company_type_id_2, complete_cast.movie_id AS complete_cast_movie_id_3, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, keyword.id AS keyword_id_6, keyword.keyword AS keyword, kind_type.id AS kind_type_id_8, kind_type.kind AS kind_type_kind_9, movie_companies.company_id AS company_id, movie_companies.note AS note, movie_info.info AS movie_info_info_12, movie_info.info_type_id AS info_type_id, movie_info.movie_id AS movie_info_movie_id_14, movie_info_idx.info AS movie_info_idx_info_15, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,movie_info,movie_companies,company_type,title,comp_cast_type,complete_cast,kind_type,info_type,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info > '6.5') And (info_type.id = movie_info_idx.info_type_id) And (title.id = movie_info.movie_id) And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (company_type.id = movie_companies.company_type_id) And (kind_type.id = title.kind_id) And (comp_cast_type.id = complete_cast.subject_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = '__NOTEQUAL__complete+verified') And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence'))","create materialized view if not exists mv394 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_type.id AS company_type_id_2, complete_cast.movie_id AS complete_cast_movie_id_3, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, keyword.id AS keyword_id_6, keyword.keyword AS keyword, kind_type.id AS kind_type_id_8, kind_type.kind AS kind_type_kind_9, movie_companies.company_id AS company_id, movie_companies.note AS note, movie_info.info AS movie_info_info_12, movie_info.info_type_id AS info_type_id, movie_info.movie_id AS movie_info_movie_id_14, movie_info_idx.info AS movie_info_idx_info_15, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,movie_info,movie_companies,company_type,title,comp_cast_type,complete_cast,kind_type,info_type,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info > '6.5') And (info_type.id = movie_info_idx.info_type_id) And (title.id = movie_info.movie_id) And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (company_type.id = movie_companies.company_type_id) And (kind_type.id = title.kind_id) And (comp_cast_type.id = complete_cast.subject_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = '__NOTEQUAL__complete+verified') And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence'))"
395,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_type.id AS company_type_id_2, complete_cast.movie_id AS complete_cast_movie_id_3, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, keyword.id AS keyword_id_6, keyword.keyword AS keyword, kind_type.id AS kind_type_id_8, kind_type.kind AS kind_type_kind_9, movie_companies.company_id AS company_id, movie_companies.note AS note, movie_info.info AS movie_info_info_12, movie_info.info_type_id AS info_type_id, movie_info.movie_id AS movie_info_movie_id_14, movie_info_idx.info AS movie_info_idx_info_15, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,movie_info,movie_companies,company_type,title,comp_cast_type,complete_cast,kind_type,info_type,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info > '6.5') And (info_type.id = movie_info_idx.info_type_id) And (title.id = movie_info.movie_id) And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (info_type.id = movie_info.info_type_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (company_type.id = movie_companies.company_type_id) And (kind_type.id = title.kind_id) And (comp_cast_type.id = complete_cast.subject_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = '__NOTEQUAL__complete+verified') And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence'))","create materialized view if not exists mv395 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_type.id AS company_type_id_2, complete_cast.movie_id AS complete_cast_movie_id_3, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, keyword.id AS keyword_id_6, keyword.keyword AS keyword, kind_type.id AS kind_type_id_8, kind_type.kind AS kind_type_kind_9, movie_companies.company_id AS company_id, movie_companies.note AS note, movie_info.info AS movie_info_info_12, movie_info.info_type_id AS info_type_id, movie_info.movie_id AS movie_info_movie_id_14, movie_info_idx.info AS movie_info_idx_info_15, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,movie_info,movie_companies,company_type,title,comp_cast_type,complete_cast,kind_type,info_type,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info > '6.5') And (info_type.id = movie_info_idx.info_type_id) And (title.id = movie_info.movie_id) And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (info_type.id = movie_info.info_type_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (company_type.id = movie_companies.company_type_id) And (kind_type.id = title.kind_id) And (comp_cast_type.id = complete_cast.subject_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = '__NOTEQUAL__complete+verified') And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence'))"
396,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, complete_cast.movie_id AS complete_cast_movie_id_6, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, keyword.id AS keyword_id_9, keyword.keyword AS keyword, kind_type.id AS kind_type_id_11, kind_type.kind AS kind_type_kind_12, movie_companies.note AS note, movie_info.info AS movie_info_info_14, movie_info.info_type_id AS info_type_id, movie_info.movie_id AS movie_info_movie_id_16, movie_info_idx.info AS movie_info_idx_info_17, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,movie_info,movie_companies,company_type,title,company_name,comp_cast_type,complete_cast,kind_type,info_type,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info > '6.5') And (info_type.id = movie_info_idx.info_type_id) And (title.id = movie_info.movie_id) And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (info_type.id = movie_info.info_type_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (company_type.id = movie_companies.company_type_id) And (company_name.id = movie_companies.company_id) And (kind_type.id = title.kind_id) And (comp_cast_type.id = complete_cast.subject_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = '__NOTEQUAL__complete+verified') And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence'))","create materialized view if not exists mv396 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, complete_cast.movie_id AS complete_cast_movie_id_6, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, keyword.id AS keyword_id_9, keyword.keyword AS keyword, kind_type.id AS kind_type_id_11, kind_type.kind AS kind_type_kind_12, movie_companies.note AS note, movie_info.info AS movie_info_info_14, movie_info.info_type_id AS info_type_id, movie_info.movie_id AS movie_info_movie_id_16, movie_info_idx.info AS movie_info_idx_info_17, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,movie_info,movie_companies,company_type,title,company_name,comp_cast_type,complete_cast,kind_type,info_type,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info > '6.5') And (info_type.id = movie_info_idx.info_type_id) And (title.id = movie_info.movie_id) And (movie_info.info in ('Sweden', 'Germany', 'Swedish', 'German')) And (info_type.id = movie_info.info_type_id) And (movie_companies.movie_id = movie_keyword.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (company_type.id = movie_companies.company_type_id) And (company_name.id = movie_companies.company_id) And (kind_type.id = title.kind_id) And (comp_cast_type.id = complete_cast.subject_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = '__NOTEQUAL__complete+verified') And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence'))"
397,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_4, keyword.keyword AS keyword
 from keyword,comp_cast_type,complete_cast,movie_keyword
 where (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence')) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'complete') And (complete_cast.movie_id = movie_keyword.movie_id)","create materialized view if not exists mv397 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_4, keyword.keyword AS keyword
 from keyword,comp_cast_type,complete_cast,movie_keyword
 where (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence')) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'complete') And (complete_cast.movie_id = movie_keyword.movie_id)"
398,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_4, keyword.keyword AS keyword, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
 from movie_keyword,title,comp_cast_type,complete_cast,keyword
 where (title.id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'complete') And (complete_cast.movie_id = movie_keyword.movie_id) And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence'))","create materialized view if not exists mv398 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_4, keyword.keyword AS keyword, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
 from movie_keyword,title,comp_cast_type,complete_cast,keyword
 where (title.id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'complete') And (complete_cast.movie_id = movie_keyword.movie_id) And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence'))"
399,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_4, keyword.keyword AS keyword, kind_type.id AS kind_type_id_6, kind_type.kind AS kind_type_kind_7, title.production_year AS production_year, title.title AS title
 from movie_keyword,title,comp_cast_type,complete_cast,kind_type,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (kind_type.id = title.kind_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'complete') And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence'))","create materialized view if not exists mv399 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_4, keyword.keyword AS keyword, kind_type.id AS kind_type_id_6, kind_type.kind AS kind_type_kind_7, title.production_year AS production_year, title.title AS title
 from movie_keyword,title,comp_cast_type,complete_cast,kind_type,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (kind_type.id = title.kind_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'complete') And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence'))"
400,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, complete_cast.movie_id AS complete_cast_movie_id_2, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_4, keyword.keyword AS keyword, kind_type.id AS kind_type_id_6, kind_type.kind AS kind_type_kind_7, movie_info.info AS info, movie_info.info_type_id AS info_type_id, movie_info.movie_id AS movie_info_movie_id_10, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info,title,comp_cast_type,complete_cast,kind_type,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info.movie_id = title.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (kind_type.id = title.kind_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'complete') And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence'))","create materialized view if not exists mv400 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, complete_cast.movie_id AS complete_cast_movie_id_2, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_4, keyword.keyword AS keyword, kind_type.id AS kind_type_id_6, kind_type.kind AS kind_type_kind_7, movie_info.info AS info, movie_info.info_type_id AS info_type_id, movie_info.movie_id AS movie_info_movie_id_10, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info,title,comp_cast_type,complete_cast,kind_type,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info.movie_id = title.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (kind_type.id = title.kind_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'complete') And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence'))"
401,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, complete_cast.movie_id AS complete_cast_movie_id_2, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, keyword.id AS keyword_id_6, keyword.keyword AS keyword, kind_type.id AS kind_type_id_8, kind_type.kind AS kind_type_kind_9, movie_info.info AS movie_info_info_10, movie_info.movie_id AS movie_info_movie_id_11, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info,title,comp_cast_type,complete_cast,kind_type,info_type,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info.movie_id = title.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (info_type.id = movie_info.info_type_id) And (kind_type.id = title.kind_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'complete') And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence'))","create materialized view if not exists mv401 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, complete_cast.movie_id AS complete_cast_movie_id_2, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, keyword.id AS keyword_id_6, keyword.keyword AS keyword, kind_type.id AS kind_type_id_8, kind_type.kind AS kind_type_kind_9, movie_info.info AS movie_info_info_10, movie_info.movie_id AS movie_info_movie_id_11, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info,title,comp_cast_type,complete_cast,kind_type,info_type,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info.movie_id = title.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (info_type.id = movie_info.info_type_id) And (kind_type.id = title.kind_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'complete') And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence'))"
402,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, complete_cast.movie_id AS complete_cast_movie_id_2, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, keyword.id AS keyword_id_5, keyword.keyword AS keyword, kind_type.id AS kind_type_id_7, kind_type.kind AS kind_type_kind_8, movie_info.info AS movie_info_info_9, movie_info.movie_id AS movie_info_movie_id_10, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info,title,comp_cast_type,complete_cast,kind_type,info_type,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info.movie_id = title.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (info_type.id = movie_info.info_type_id) And (kind_type.id = title.kind_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'complete') And (comp_cast_type.id = complete_cast.subject_id) And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence'))","create materialized view if not exists mv402 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, complete_cast.movie_id AS complete_cast_movie_id_2, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, keyword.id AS keyword_id_5, keyword.keyword AS keyword, kind_type.id AS kind_type_id_7, kind_type.kind AS kind_type_kind_8, movie_info.info AS movie_info_info_9, movie_info.movie_id AS movie_info_movie_id_10, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info,title,comp_cast_type,complete_cast,kind_type,info_type,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info.movie_id = title.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (info_type.id = movie_info.info_type_id) And (kind_type.id = title.kind_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'complete') And (comp_cast_type.id = complete_cast.subject_id) And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence'))"
403,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, complete_cast.movie_id AS complete_cast_movie_id_2, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, keyword.id AS keyword_id_5, keyword.keyword AS keyword, kind_type.id AS kind_type_id_7, kind_type.kind AS kind_type_kind_8, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_companies_movie_id_11, movie_companies.note AS note, movie_info.info AS movie_info_info_13, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info,movie_companies,title,comp_cast_type,complete_cast,kind_type,info_type,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info.movie_id = title.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (info_type.id = movie_info.info_type_id) And (title.id = movie_companies.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (kind_type.id = title.kind_id) And (comp_cast_type.id = complete_cast.subject_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'complete') And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence'))","create materialized view if not exists mv403 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, complete_cast.movie_id AS complete_cast_movie_id_2, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, keyword.id AS keyword_id_5, keyword.keyword AS keyword, kind_type.id AS kind_type_id_7, kind_type.kind AS kind_type_kind_8, movie_companies.company_id AS company_id, movie_companies.company_type_id AS company_type_id, movie_companies.movie_id AS movie_companies_movie_id_11, movie_companies.note AS note, movie_info.info AS movie_info_info_13, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info,movie_companies,title,comp_cast_type,complete_cast,kind_type,info_type,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info.movie_id = title.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (info_type.id = movie_info.info_type_id) And (title.id = movie_companies.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (kind_type.id = title.kind_id) And (comp_cast_type.id = complete_cast.subject_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'complete') And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence'))"
404,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_type.id AS company_type_id_2, complete_cast.movie_id AS complete_cast_movie_id_3, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, keyword.id AS keyword_id_6, keyword.keyword AS keyword, kind_type.id AS kind_type_id_8, kind_type.kind AS kind_type_kind_9, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_companies_movie_id_11, movie_companies.note AS note, movie_info.info AS movie_info_info_13, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info,movie_companies,title,company_type,comp_cast_type,complete_cast,kind_type,info_type,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info.movie_id = title.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (info_type.id = movie_info.info_type_id) And (title.id = movie_companies.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (company_type.id = movie_companies.company_type_id) And (kind_type.id = title.kind_id) And (comp_cast_type.id = complete_cast.subject_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'complete') And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence'))","create materialized view if not exists mv404 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_type.id AS company_type_id_2, complete_cast.movie_id AS complete_cast_movie_id_3, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, keyword.id AS keyword_id_6, keyword.keyword AS keyword, kind_type.id AS kind_type_id_8, kind_type.kind AS kind_type_kind_9, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_companies_movie_id_11, movie_companies.note AS note, movie_info.info AS movie_info_info_13, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info,movie_companies,title,company_type,comp_cast_type,complete_cast,kind_type,info_type,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info.movie_id = title.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (info_type.id = movie_info.info_type_id) And (title.id = movie_companies.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (company_type.id = movie_companies.company_type_id) And (kind_type.id = title.kind_id) And (comp_cast_type.id = complete_cast.subject_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'complete') And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence'))"
405,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, complete_cast.movie_id AS complete_cast_movie_id_6, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, keyword.id AS keyword_id_9, keyword.keyword AS keyword, kind_type.id AS kind_type_id_11, kind_type.kind AS kind_type_kind_12, movie_companies.movie_id AS movie_companies_movie_id_13, movie_companies.note AS note, movie_info.info AS movie_info_info_15, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info,movie_companies,title,company_type,company_name,comp_cast_type,complete_cast,kind_type,info_type,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info.movie_id = title.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (info_type.id = movie_info.info_type_id) And (title.id = movie_companies.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (company_type.id = movie_companies.company_type_id) And (company_name.id = movie_companies.company_id) And (kind_type.id = title.kind_id) And (comp_cast_type.id = complete_cast.subject_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'complete') And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence'))","create materialized view if not exists mv405 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, complete_cast.movie_id AS complete_cast_movie_id_6, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, keyword.id AS keyword_id_9, keyword.keyword AS keyword, kind_type.id AS kind_type_id_11, kind_type.kind AS kind_type_kind_12, movie_companies.movie_id AS movie_companies_movie_id_13, movie_companies.note AS note, movie_info.info AS movie_info_info_15, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info,movie_companies,title,company_type,company_name,comp_cast_type,complete_cast,kind_type,info_type,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info.movie_id = title.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (info_type.id = movie_info.info_type_id) And (title.id = movie_companies.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (company_type.id = movie_companies.company_type_id) And (company_name.id = movie_companies.company_id) And (kind_type.id = title.kind_id) And (comp_cast_type.id = complete_cast.subject_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'complete') And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence'))"
406,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, complete_cast.movie_id AS complete_cast_movie_id_6, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, keyword.id AS keyword_id_9, keyword.keyword AS keyword, kind_type.id AS kind_type_id_11, kind_type.kind AS kind_type_kind_12, movie_companies.movie_id AS movie_companies_movie_id_13, movie_companies.note AS note, movie_info.info AS movie_info_info_15, movie_info_idx.info AS movie_info_idx_info_16, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,movie_info,movie_companies,title,company_type,company_name,comp_cast_type,complete_cast,kind_type,info_type,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info < '8.5') And (movie_info.movie_id = title.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (info_type.id = movie_info.info_type_id) And (title.id = movie_companies.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (company_type.id = movie_companies.company_type_id) And (company_name.id = movie_companies.company_id) And (kind_type.id = title.kind_id) And (comp_cast_type.id = complete_cast.subject_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'complete') And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence'))","create materialized view if not exists mv406 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, complete_cast.movie_id AS complete_cast_movie_id_6, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, keyword.id AS keyword_id_9, keyword.keyword AS keyword, kind_type.id AS kind_type_id_11, kind_type.kind AS kind_type_kind_12, movie_companies.movie_id AS movie_companies_movie_id_13, movie_companies.note AS note, movie_info.info AS movie_info_info_15, movie_info_idx.info AS movie_info_idx_info_16, movie_info_idx.info_type_id AS info_type_id, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,movie_info,movie_companies,title,company_type,company_name,comp_cast_type,complete_cast,kind_type,info_type,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info < '8.5') And (movie_info.movie_id = title.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (info_type.id = movie_info.info_type_id) And (title.id = movie_companies.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (company_type.id = movie_companies.company_type_id) And (company_name.id = movie_companies.company_id) And (kind_type.id = title.kind_id) And (comp_cast_type.id = complete_cast.subject_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'complete') And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence'))"
407,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, complete_cast.movie_id AS complete_cast_movie_id_6, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, keyword.id AS keyword_id_9, keyword.keyword AS keyword, kind_type.id AS kind_type_id_11, kind_type.kind AS kind_type_kind_12, movie_companies.movie_id AS movie_companies_movie_id_13, movie_companies.note AS note, movie_info.info AS movie_info_info_15, movie_info_idx.info AS movie_info_idx_info_16, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,movie_info,movie_companies,title,company_type,company_name,comp_cast_type,complete_cast,kind_type,info_type,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info < '8.5') And (info_type.id = movie_info_idx.info_type_id) And (movie_info.movie_id = title.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (title.id = movie_companies.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (company_type.id = movie_companies.company_type_id) And (company_name.id = movie_companies.company_id) And (kind_type.id = title.kind_id) And (comp_cast_type.id = complete_cast.subject_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'complete') And (info_type.id = movie_info.info_type_id) And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence'))","create materialized view if not exists mv407 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS comp_cast_type_kind_1, company_name.country_code AS country_code, company_name.id AS company_name_id_3, company_name.name AS name, company_type.id AS company_type_id_5, complete_cast.movie_id AS complete_cast_movie_id_6, info_type.id AS info_type_id_7, info_type.info AS info_type_info_8, keyword.id AS keyword_id_9, keyword.keyword AS keyword, kind_type.id AS kind_type_id_11, kind_type.kind AS kind_type_kind_12, movie_companies.movie_id AS movie_companies_movie_id_13, movie_companies.note AS note, movie_info.info AS movie_info_info_15, movie_info_idx.info AS movie_info_idx_info_16, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,movie_info,movie_companies,title,company_type,company_name,comp_cast_type,complete_cast,kind_type,info_type,keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info < '8.5') And (info_type.id = movie_info_idx.info_type_id) And (movie_info.movie_id = title.id) And (movie_info.info in ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American')) And (movie_info.info_type_id = info_type.id) And (title.id = movie_companies.movie_id) And (movie_companies.note not like '%(USA)%')  And  (movie_companies.note like '%(200%)%') And (company_type.id = movie_companies.company_type_id) And (company_name.id = movie_companies.company_id) And (kind_type.id = title.kind_id) And (comp_cast_type.id = complete_cast.subject_id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'complete') And (info_type.id = movie_info.info_type_id) And (keyword.keyword in ('murder', 'murder-in-title', 'blood', 'violence'))"
408,"select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id
 from keyword,movie_keyword
 where (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'computer-animation')","create materialized view if not exists mv408 as select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id
 from keyword,movie_keyword
 where (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'computer-animation')"
409,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, keyword.id AS id, keyword.keyword AS keyword
 from keyword,cast_info,movie_keyword
 where (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'computer-animation') And (cast_info.movie_id = movie_keyword.movie_id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)'))","create materialized view if not exists mv409 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, keyword.id AS id, keyword.keyword AS keyword
 from keyword,cast_info,movie_keyword
 where (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'computer-animation') And (cast_info.movie_id = movie_keyword.movie_id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)'))"
410,"select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, keyword.id AS id, keyword.keyword AS keyword
 from aka_name,cast_info,keyword,movie_keyword
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_keyword.movie_id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)')) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'computer-animation')","create materialized view if not exists mv410 as select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, keyword.id AS id, keyword.keyword AS keyword
 from aka_name,cast_info,keyword,movie_keyword
 where (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_keyword.movie_id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)')) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'computer-animation')"
411,"select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, keyword.id AS id, keyword.keyword AS keyword
 from char_name,movie_keyword,aka_name,cast_info,keyword
 where (char_name.id = cast_info.person_role_id) And (cast_info.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)')) And (keyword.keyword = 'computer-animation')","create materialized view if not exists mv411 as select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, keyword.id AS id, keyword.keyword AS keyword
 from char_name,movie_keyword,aka_name,cast_info,keyword
 where (char_name.id = cast_info.person_role_id) And (cast_info.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)')) And (keyword.keyword = 'computer-animation')"
412,"select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, keyword.id AS id, keyword.keyword AS keyword, movie_info.info AS info, movie_info.info_type_id AS info_type_id, movie_info.movie_id AS movie_info_movie_id_10
 from char_name,movie_keyword,movie_info,aka_name,cast_info,keyword
 where (char_name.id = cast_info.person_role_id) And (cast_info.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)')) And (keyword.keyword = 'computer-animation')","create materialized view if not exists mv412 as select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, keyword.id AS id, keyword.keyword AS keyword, movie_info.info AS info, movie_info.info_type_id AS info_type_id, movie_info.movie_id AS movie_info_movie_id_10
 from char_name,movie_keyword,movie_info,aka_name,cast_info,keyword
 where (char_name.id = cast_info.person_role_id) And (cast_info.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)')) And (keyword.keyword = 'computer-animation')"
413,"select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, keyword.id AS id, keyword.keyword AS keyword, movie_info.info AS info, movie_info.info_type_id AS movie_info_info_type_id_9, movie_info.movie_id AS movie_info_movie_id_10, person_info.info_type_id AS person_info_info_type_id_11
 from movie_keyword,person_info,char_name,movie_info,aka_name,cast_info,keyword
 where (cast_info.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (person_info.person_id = cast_info.person_id) And (char_name.id = cast_info.person_role_id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)')) And (keyword.keyword = 'computer-animation')","create materialized view if not exists mv413 as select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, keyword.id AS id, keyword.keyword AS keyword, movie_info.info AS info, movie_info.info_type_id AS movie_info_info_type_id_9, movie_info.movie_id AS movie_info_movie_id_10, person_info.info_type_id AS person_info_info_type_id_11
 from movie_keyword,person_info,char_name,movie_info,aka_name,cast_info,keyword
 where (cast_info.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (person_info.person_id = cast_info.person_id) And (char_name.id = cast_info.person_role_id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)')) And (keyword.keyword = 'computer-animation')"
414,"select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, keyword.id AS id, keyword.keyword AS keyword, movie_info.info AS info, movie_info.info_type_id AS movie_info_info_type_id_9, movie_info.movie_id AS movie_info_movie_id_10, name.gender AS gender, name.name AS name_name_12, person_info.info_type_id AS person_info_info_type_id_13
 from movie_keyword,person_info,char_name,name,movie_info,aka_name,cast_info,keyword
 where (cast_info.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (name.id = person_info.person_id) And (person_info.person_id = cast_info.person_id) And (char_name.id = cast_info.person_role_id) And (cast_info.person_id = name.id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)')) And (keyword.keyword = 'computer-animation')","create materialized view if not exists mv414 as select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, keyword.id AS id, keyword.keyword AS keyword, movie_info.info AS info, movie_info.info_type_id AS movie_info_info_type_id_9, movie_info.movie_id AS movie_info_movie_id_10, name.gender AS gender, name.name AS name_name_12, person_info.info_type_id AS person_info_info_type_id_13
 from movie_keyword,person_info,char_name,name,movie_info,aka_name,cast_info,keyword
 where (cast_info.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (name.id = person_info.person_id) And (person_info.person_id = cast_info.person_id) And (char_name.id = cast_info.person_role_id) And (cast_info.person_id = name.id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)')) And (keyword.keyword = 'computer-animation')"
415,"select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, keyword.id AS id, keyword.keyword AS keyword, movie_info.info AS info, movie_info.info_type_id AS movie_info_info_type_id_9, movie_info.movie_id AS movie_info_movie_id_10, name.gender AS gender, name.name AS name_name_12, person_info.info_type_id AS person_info_info_type_id_13, title.production_year AS production_year, title.title AS title
 from movie_keyword,person_info,char_name,name,movie_info,title,aka_name,cast_info,keyword
 where (title.id = movie_keyword.movie_id) And (cast_info.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (name.id = person_info.person_id) And (person_info.person_id = cast_info.person_id) And (char_name.id = cast_info.person_role_id) And (cast_info.person_id = name.id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)')) And (keyword.keyword = 'computer-animation')","create materialized view if not exists mv415 as select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, keyword.id AS id, keyword.keyword AS keyword, movie_info.info AS info, movie_info.info_type_id AS movie_info_info_type_id_9, movie_info.movie_id AS movie_info_movie_id_10, name.gender AS gender, name.name AS name_name_12, person_info.info_type_id AS person_info_info_type_id_13, title.production_year AS production_year, title.title AS title
 from movie_keyword,person_info,char_name,name,movie_info,title,aka_name,cast_info,keyword
 where (title.id = movie_keyword.movie_id) And (cast_info.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (name.id = person_info.person_id) And (person_info.person_id = cast_info.person_id) And (char_name.id = cast_info.person_role_id) And (cast_info.person_id = name.id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)')) And (keyword.keyword = 'computer-animation')"
416,"select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, keyword.id AS id, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_companies_movie_id_9, movie_info.info AS info, movie_info.info_type_id AS movie_info_info_type_id_11, name.gender AS gender, name.name AS name_name_13, person_info.info_type_id AS person_info_info_type_id_14, title.production_year AS production_year, title.title AS title
 from char_name,person_info,name,movie_info,keyword,movie_companies,title,aka_name,cast_info,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (name.id = person_info.person_id) And (person_info.person_id = cast_info.person_id) And (cast_info.person_id = name.id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'computer-animation') And (movie_companies.movie_id = title.id) And (title.id = movie_keyword.movie_id) And (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_keyword.movie_id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)'))","create materialized view if not exists mv416 as select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, keyword.id AS id, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_companies_movie_id_9, movie_info.info AS info, movie_info.info_type_id AS movie_info_info_type_id_11, name.gender AS gender, name.name AS name_name_13, person_info.info_type_id AS person_info_info_type_id_14, title.production_year AS production_year, title.title AS title
 from char_name,person_info,name,movie_info,keyword,movie_companies,title,aka_name,cast_info,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (name.id = person_info.person_id) And (person_info.person_id = cast_info.person_id) And (cast_info.person_id = name.id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'computer-animation') And (movie_companies.movie_id = title.id) And (title.id = movie_keyword.movie_id) And (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_keyword.movie_id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)'))"
417,"select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, complete_cast.movie_id AS complete_cast_movie_id_6, complete_cast.status_id AS status_id, complete_cast.subject_id AS subject_id, keyword.id AS id, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_info.info AS info, movie_info.info_type_id AS movie_info_info_type_id_13, name.gender AS gender, name.name AS name_name_15, person_info.info_type_id AS person_info_info_type_id_16, title.production_year AS production_year, title.title AS title
 from char_name,person_info,name,movie_info,keyword,movie_companies,title,complete_cast,aka_name,cast_info,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (name.id = person_info.person_id) And (person_info.person_id = cast_info.person_id) And (cast_info.person_id = name.id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'computer-animation') And (movie_companies.movie_id = title.id) And (title.id = complete_cast.movie_id) And (title.id = movie_keyword.movie_id) And (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_keyword.movie_id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)'))","create materialized view if not exists mv417 as select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, complete_cast.movie_id AS complete_cast_movie_id_6, complete_cast.status_id AS status_id, complete_cast.subject_id AS subject_id, keyword.id AS id, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_info.info AS info, movie_info.info_type_id AS movie_info_info_type_id_13, name.gender AS gender, name.name AS name_name_15, person_info.info_type_id AS person_info_info_type_id_16, title.production_year AS production_year, title.title AS title
 from char_name,person_info,name,movie_info,keyword,movie_companies,title,complete_cast,aka_name,cast_info,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (name.id = person_info.person_id) And (person_info.person_id = cast_info.person_id) And (cast_info.person_id = name.id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'computer-animation') And (movie_companies.movie_id = title.id) And (title.id = complete_cast.movie_id) And (title.id = movie_keyword.movie_id) And (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_keyword.movie_id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)'))"
418,"select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_8, complete_cast.status_id AS status_id, keyword.id AS keyword_id_10, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_info.info AS info, movie_info.info_type_id AS movie_info_info_type_id_14, name.gender AS gender, name.name AS name_name_16, person_info.info_type_id AS person_info_info_type_id_17, title.production_year AS production_year, title.title AS title
 from char_name,person_info,name,movie_info,keyword,movie_companies,title,comp_cast_type,complete_cast,aka_name,cast_info,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (name.id = person_info.person_id) And (person_info.person_id = cast_info.person_id) And (cast_info.person_id = name.id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'computer-animation') And (movie_companies.movie_id = title.id) And (title.id = complete_cast.movie_id) And (title.id = movie_keyword.movie_id) And (comp_cast_type.id = complete_cast.subject_id) And (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_keyword.movie_id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)'))","create materialized view if not exists mv418 as select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_8, complete_cast.status_id AS status_id, keyword.id AS keyword_id_10, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_info.info AS info, movie_info.info_type_id AS movie_info_info_type_id_14, name.gender AS gender, name.name AS name_name_16, person_info.info_type_id AS person_info_info_type_id_17, title.production_year AS production_year, title.title AS title
 from char_name,person_info,name,movie_info,keyword,movie_companies,title,comp_cast_type,complete_cast,aka_name,cast_info,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (name.id = person_info.person_id) And (person_info.person_id = cast_info.person_id) And (cast_info.person_id = name.id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'computer-animation') And (movie_companies.movie_id = title.id) And (title.id = complete_cast.movie_id) And (title.id = movie_keyword.movie_id) And (comp_cast_type.id = complete_cast.subject_id) And (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_keyword.movie_id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)'))"
419,"select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_8, complete_cast.status_id AS status_id, keyword.id AS keyword_id_10, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_info.info AS info, movie_info.info_type_id AS movie_info_info_type_id_14, name.gender AS gender, name.name AS name_name_16, person_info.info_type_id AS person_info_info_type_id_17, title.production_year AS production_year, title.title AS title
 from char_name,person_info,name,movie_info,keyword,movie_companies,title,comp_cast_type,complete_cast,aka_name,cast_info,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (name.id = person_info.person_id) And (person_info.person_id = cast_info.person_id) And (cast_info.person_id = name.id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'computer-animation') And (movie_companies.movie_id = title.id) And (title.id = complete_cast.movie_id) And (title.id = movie_keyword.movie_id) And (comp_cast_type.id = complete_cast.subject_id) And (comp_cast_type.id = complete_cast.status_id) And (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_keyword.movie_id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)'))","create materialized view if not exists mv419 as select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_8, complete_cast.status_id AS status_id, keyword.id AS keyword_id_10, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_info.info AS info, movie_info.info_type_id AS movie_info_info_type_id_14, name.gender AS gender, name.name AS name_name_16, person_info.info_type_id AS person_info_info_type_id_17, title.production_year AS production_year, title.title AS title
 from char_name,person_info,name,movie_info,keyword,movie_companies,title,comp_cast_type,complete_cast,aka_name,cast_info,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (name.id = person_info.person_id) And (person_info.person_id = cast_info.person_id) And (cast_info.person_id = name.id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'computer-animation') And (movie_companies.movie_id = title.id) And (title.id = complete_cast.movie_id) And (title.id = movie_keyword.movie_id) And (comp_cast_type.id = complete_cast.subject_id) And (comp_cast_type.id = complete_cast.status_id) And (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_keyword.movie_id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)'))"
420,"select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_8, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_10, info_type.info AS info_type_info_11, keyword.id AS keyword_id_12, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_info.info AS movie_info_info_15, movie_info.info_type_id AS info_type_id, name.gender AS gender, name.name AS name_name_18, title.production_year AS production_year, title.title AS title
 from char_name,person_info,name,movie_info,keyword,movie_companies,title,comp_cast_type,complete_cast,aka_name,cast_info,info_type,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (name.id = person_info.person_id) And (person_info.person_id = cast_info.person_id) And (info_type.id = person_info.info_type_id) And (cast_info.person_id = name.id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'computer-animation') And (movie_companies.movie_id = title.id) And (title.id = complete_cast.movie_id) And (title.id = movie_keyword.movie_id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_keyword.movie_id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)'))","create materialized view if not exists mv420 as select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_8, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_10, info_type.info AS info_type_info_11, keyword.id AS keyword_id_12, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_info.info AS movie_info_info_15, movie_info.info_type_id AS info_type_id, name.gender AS gender, name.name AS name_name_18, title.production_year AS production_year, title.title AS title
 from char_name,person_info,name,movie_info,keyword,movie_companies,title,comp_cast_type,complete_cast,aka_name,cast_info,info_type,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (name.id = person_info.person_id) And (person_info.person_id = cast_info.person_id) And (info_type.id = person_info.info_type_id) And (cast_info.person_id = name.id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'computer-animation') And (movie_companies.movie_id = title.id) And (title.id = complete_cast.movie_id) And (title.id = movie_keyword.movie_id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_keyword.movie_id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)'))"
421,"select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, company_name.country_code AS country_code, company_name.id AS company_name_id_9, complete_cast.movie_id AS complete_cast_movie_id_10, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_12, info_type.info AS info_type_info_13, keyword.id AS keyword_id_14, keyword.keyword AS keyword, movie_info.info AS movie_info_info_16, movie_info.info_type_id AS info_type_id, name.gender AS gender, name.name AS name_name_19, title.production_year AS production_year, title.title AS title
 from char_name,person_info,name,movie_info,keyword,movie_companies,title,company_name,comp_cast_type,complete_cast,aka_name,cast_info,info_type,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (name.id = person_info.person_id) And (person_info.person_id = cast_info.person_id) And (info_type.id = person_info.info_type_id) And (cast_info.person_id = name.id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'computer-animation') And (movie_companies.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (title.id = complete_cast.movie_id) And (title.id = movie_keyword.movie_id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_keyword.movie_id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)'))","create materialized view if not exists mv421 as select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, company_name.country_code AS country_code, company_name.id AS company_name_id_9, complete_cast.movie_id AS complete_cast_movie_id_10, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_12, info_type.info AS info_type_info_13, keyword.id AS keyword_id_14, keyword.keyword AS keyword, movie_info.info AS movie_info_info_16, movie_info.info_type_id AS info_type_id, name.gender AS gender, name.name AS name_name_19, title.production_year AS production_year, title.title AS title
 from char_name,person_info,name,movie_info,keyword,movie_companies,title,company_name,comp_cast_type,complete_cast,aka_name,cast_info,info_type,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (name.id = person_info.person_id) And (person_info.person_id = cast_info.person_id) And (info_type.id = person_info.info_type_id) And (cast_info.person_id = name.id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'computer-animation') And (movie_companies.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (title.id = complete_cast.movie_id) And (title.id = movie_keyword.movie_id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_keyword.movie_id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)'))"
422,"select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, company_name.country_code AS country_code, company_name.id AS company_name_id_9, complete_cast.movie_id AS complete_cast_movie_id_10, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_12, info_type.info AS info_type_info_13, keyword.id AS keyword_id_14, keyword.keyword AS keyword, movie_info.info AS movie_info_info_16, movie_info.info_type_id AS info_type_id, name.gender AS gender, name.name AS name_name_19, title.production_year AS production_year, title.title AS title
 from char_name,person_info,name,movie_info,keyword,movie_companies,title,company_name,comp_cast_type,complete_cast,aka_name,cast_info,info_type,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (name.id = person_info.person_id) And (person_info.person_id = cast_info.person_id) And (info_type.id = person_info.info_type_id) And (cast_info.person_id = name.id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (info_type.id = movie_info.info_type_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'computer-animation') And (movie_companies.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (title.id = complete_cast.movie_id) And (title.id = movie_keyword.movie_id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_keyword.movie_id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)'))","create materialized view if not exists mv422 as select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, company_name.country_code AS country_code, company_name.id AS company_name_id_9, complete_cast.movie_id AS complete_cast_movie_id_10, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_12, info_type.info AS info_type_info_13, keyword.id AS keyword_id_14, keyword.keyword AS keyword, movie_info.info AS movie_info_info_16, movie_info.info_type_id AS info_type_id, name.gender AS gender, name.name AS name_name_19, title.production_year AS production_year, title.title AS title
 from char_name,person_info,name,movie_info,keyword,movie_companies,title,company_name,comp_cast_type,complete_cast,aka_name,cast_info,info_type,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (name.id = person_info.person_id) And (person_info.person_id = cast_info.person_id) And (info_type.id = person_info.info_type_id) And (cast_info.person_id = name.id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (info_type.id = movie_info.info_type_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'computer-animation') And (movie_companies.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (title.id = complete_cast.movie_id) And (title.id = movie_keyword.movie_id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_keyword.movie_id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)'))"
423,"select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, company_name.country_code AS country_code, company_name.id AS company_name_id_9, complete_cast.movie_id AS complete_cast_movie_id_10, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_12, info_type.info AS info_type_info_13, keyword.id AS keyword_id_14, keyword.keyword AS keyword, movie_info.info AS movie_info_info_16, movie_info.info_type_id AS info_type_id, name.gender AS gender, name.name AS name_name_19, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from char_name,person_info,name,role_type,movie_info,keyword,movie_companies,title,company_name,comp_cast_type,complete_cast,aka_name,cast_info,info_type,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (name.id = person_info.person_id) And (person_info.person_id = cast_info.person_id) And (info_type.id = person_info.info_type_id) And (cast_info.person_id = name.id) And (role_type.id = cast_info.role_id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (info_type.id = movie_info.info_type_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'computer-animation') And (movie_companies.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (title.id = complete_cast.movie_id) And (title.id = movie_keyword.movie_id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.movie_id = movie_keyword.movie_id)","create materialized view if not exists mv423 as select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, company_name.country_code AS country_code, company_name.id AS company_name_id_9, complete_cast.movie_id AS complete_cast_movie_id_10, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_12, info_type.info AS info_type_info_13, keyword.id AS keyword_id_14, keyword.keyword AS keyword, movie_info.info AS movie_info_info_16, movie_info.info_type_id AS info_type_id, name.gender AS gender, name.name AS name_name_19, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from char_name,person_info,name,role_type,movie_info,keyword,movie_companies,title,company_name,comp_cast_type,complete_cast,aka_name,cast_info,info_type,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (name.id = person_info.person_id) And (person_info.person_id = cast_info.person_id) And (info_type.id = person_info.info_type_id) And (cast_info.person_id = name.id) And (role_type.id = cast_info.role_id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (info_type.id = movie_info.info_type_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'computer-animation') And (movie_companies.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (title.id = complete_cast.movie_id) And (title.id = movie_keyword.movie_id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)')) And (cast_info.movie_id = movie_keyword.movie_id)"
424,"select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, keyword.id AS id, keyword.keyword AS keyword, movie_info.info AS info, movie_info.info_type_id AS info_type_id, movie_info.movie_id AS movie_info_movie_id_10
 from char_name,movie_keyword,movie_info,aka_name,cast_info,keyword
 where (char_name.id = cast_info.person_role_id) And (cast_info.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.info = '__LIKE__USA:%200%') And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)')) And (keyword.keyword = 'computer-animation')","create materialized view if not exists mv424 as select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, keyword.id AS id, keyword.keyword AS keyword, movie_info.info AS info, movie_info.info_type_id AS info_type_id, movie_info.movie_id AS movie_info_movie_id_10
 from char_name,movie_keyword,movie_info,aka_name,cast_info,keyword
 where (char_name.id = cast_info.person_role_id) And (cast_info.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.info = '__LIKE__USA:%200%') And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)')) And (keyword.keyword = 'computer-animation')"
425,"select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, keyword.id AS id, keyword.keyword AS keyword, movie_info.info AS info, movie_info.info_type_id AS movie_info_info_type_id_9, movie_info.movie_id AS movie_info_movie_id_10, person_info.info_type_id AS person_info_info_type_id_11
 from movie_keyword,person_info,char_name,movie_info,aka_name,cast_info,keyword
 where (cast_info.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (person_info.person_id = cast_info.person_id) And (char_name.id = cast_info.person_role_id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.info = '__LIKE__USA:%200%') And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)')) And (keyword.keyword = 'computer-animation')","create materialized view if not exists mv425 as select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, keyword.id AS id, keyword.keyword AS keyword, movie_info.info AS info, movie_info.info_type_id AS movie_info_info_type_id_9, movie_info.movie_id AS movie_info_movie_id_10, person_info.info_type_id AS person_info_info_type_id_11
 from movie_keyword,person_info,char_name,movie_info,aka_name,cast_info,keyword
 where (cast_info.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (person_info.person_id = cast_info.person_id) And (char_name.id = cast_info.person_role_id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.info = '__LIKE__USA:%200%') And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)')) And (keyword.keyword = 'computer-animation')"
426,"select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, keyword.id AS id, keyword.keyword AS keyword, movie_info.info AS info, movie_info.info_type_id AS movie_info_info_type_id_9, movie_info.movie_id AS movie_info_movie_id_10, name.gender AS gender, name.name AS name_name_12, person_info.info_type_id AS person_info_info_type_id_13
 from movie_keyword,person_info,char_name,name,movie_info,aka_name,cast_info,keyword
 where (cast_info.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (name.id = person_info.person_id) And (person_info.person_id = cast_info.person_id) And (char_name.id = cast_info.person_role_id) And (cast_info.person_id = name.id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.info = '__LIKE__USA:%200%') And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)')) And (keyword.keyword = 'computer-animation')","create materialized view if not exists mv426 as select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, keyword.id AS id, keyword.keyword AS keyword, movie_info.info AS info, movie_info.info_type_id AS movie_info_info_type_id_9, movie_info.movie_id AS movie_info_movie_id_10, name.gender AS gender, name.name AS name_name_12, person_info.info_type_id AS person_info_info_type_id_13
 from movie_keyword,person_info,char_name,name,movie_info,aka_name,cast_info,keyword
 where (cast_info.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (name.id = person_info.person_id) And (person_info.person_id = cast_info.person_id) And (char_name.id = cast_info.person_role_id) And (cast_info.person_id = name.id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.info = '__LIKE__USA:%200%') And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)')) And (keyword.keyword = 'computer-animation')"
427,"select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, keyword.id AS id, keyword.keyword AS keyword, movie_info.info AS info, movie_info.info_type_id AS movie_info_info_type_id_9, movie_info.movie_id AS movie_info_movie_id_10, name.gender AS gender, name.name AS name_name_12, person_info.info_type_id AS person_info_info_type_id_13, title.production_year AS production_year, title.title AS title
 from movie_keyword,person_info,char_name,name,movie_info,title,aka_name,cast_info,keyword
 where (title.id = movie_keyword.movie_id) And (cast_info.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (name.id = person_info.person_id) And (person_info.person_id = cast_info.person_id) And (char_name.id = cast_info.person_role_id) And (cast_info.person_id = name.id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.movie_id = title.id) And (movie_info.info = '__LIKE__USA:%200%') And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)')) And (keyword.keyword = 'computer-animation')","create materialized view if not exists mv427 as select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, keyword.id AS id, keyword.keyword AS keyword, movie_info.info AS info, movie_info.info_type_id AS movie_info_info_type_id_9, movie_info.movie_id AS movie_info_movie_id_10, name.gender AS gender, name.name AS name_name_12, person_info.info_type_id AS person_info_info_type_id_13, title.production_year AS production_year, title.title AS title
 from movie_keyword,person_info,char_name,name,movie_info,title,aka_name,cast_info,keyword
 where (title.id = movie_keyword.movie_id) And (cast_info.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (name.id = person_info.person_id) And (person_info.person_id = cast_info.person_id) And (char_name.id = cast_info.person_role_id) And (cast_info.person_id = name.id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.movie_id = title.id) And (movie_info.info = '__LIKE__USA:%200%') And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)')) And (keyword.keyword = 'computer-animation')"
428,"select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, keyword.id AS id, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_companies_movie_id_9, movie_info.info AS info, movie_info.info_type_id AS movie_info_info_type_id_11, name.gender AS gender, name.name AS name_name_13, person_info.info_type_id AS person_info_info_type_id_14, title.production_year AS production_year, title.title AS title
 from char_name,person_info,name,movie_info,keyword,movie_companies,title,aka_name,cast_info,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (name.id = person_info.person_id) And (person_info.person_id = cast_info.person_id) And (cast_info.person_id = name.id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.movie_id = title.id) And (movie_info.info = '__LIKE__USA:%200%') And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'computer-animation') And (movie_companies.movie_id = title.id) And (title.id = movie_keyword.movie_id) And (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_keyword.movie_id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)'))","create materialized view if not exists mv428 as select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, keyword.id AS id, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_companies_movie_id_9, movie_info.info AS info, movie_info.info_type_id AS movie_info_info_type_id_11, name.gender AS gender, name.name AS name_name_13, person_info.info_type_id AS person_info_info_type_id_14, title.production_year AS production_year, title.title AS title
 from char_name,person_info,name,movie_info,keyword,movie_companies,title,aka_name,cast_info,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (name.id = person_info.person_id) And (person_info.person_id = cast_info.person_id) And (cast_info.person_id = name.id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.movie_id = title.id) And (movie_info.info = '__LIKE__USA:%200%') And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'computer-animation') And (movie_companies.movie_id = title.id) And (title.id = movie_keyword.movie_id) And (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_keyword.movie_id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)'))"
429,"select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, complete_cast.movie_id AS complete_cast_movie_id_6, complete_cast.status_id AS status_id, complete_cast.subject_id AS subject_id, keyword.id AS id, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_info.info AS info, movie_info.info_type_id AS movie_info_info_type_id_13, name.gender AS gender, name.name AS name_name_15, person_info.info_type_id AS person_info_info_type_id_16, title.production_year AS production_year, title.title AS title
 from char_name,person_info,name,movie_info,keyword,movie_companies,title,complete_cast,aka_name,cast_info,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (name.id = person_info.person_id) And (person_info.person_id = cast_info.person_id) And (cast_info.person_id = name.id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.movie_id = title.id) And (movie_info.info = '__LIKE__USA:%200%') And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'computer-animation') And (movie_companies.movie_id = title.id) And (title.id = complete_cast.movie_id) And (title.id = movie_keyword.movie_id) And (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_keyword.movie_id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)'))","create materialized view if not exists mv429 as select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, complete_cast.movie_id AS complete_cast_movie_id_6, complete_cast.status_id AS status_id, complete_cast.subject_id AS subject_id, keyword.id AS id, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_info.info AS info, movie_info.info_type_id AS movie_info_info_type_id_13, name.gender AS gender, name.name AS name_name_15, person_info.info_type_id AS person_info_info_type_id_16, title.production_year AS production_year, title.title AS title
 from char_name,person_info,name,movie_info,keyword,movie_companies,title,complete_cast,aka_name,cast_info,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (name.id = person_info.person_id) And (person_info.person_id = cast_info.person_id) And (cast_info.person_id = name.id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.movie_id = title.id) And (movie_info.info = '__LIKE__USA:%200%') And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'computer-animation') And (movie_companies.movie_id = title.id) And (title.id = complete_cast.movie_id) And (title.id = movie_keyword.movie_id) And (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_keyword.movie_id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)'))"
430,"select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_8, complete_cast.status_id AS status_id, keyword.id AS keyword_id_10, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_info.info AS info, movie_info.info_type_id AS movie_info_info_type_id_14, name.gender AS gender, name.name AS name_name_16, person_info.info_type_id AS person_info_info_type_id_17, title.production_year AS production_year, title.title AS title
 from char_name,person_info,name,movie_info,keyword,movie_companies,title,comp_cast_type,complete_cast,aka_name,cast_info,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (name.id = person_info.person_id) And (person_info.person_id = cast_info.person_id) And (cast_info.person_id = name.id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.movie_id = title.id) And (movie_info.info = '__LIKE__USA:%200%') And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'computer-animation') And (movie_companies.movie_id = title.id) And (title.id = complete_cast.movie_id) And (title.id = movie_keyword.movie_id) And (comp_cast_type.id = complete_cast.subject_id) And (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_keyword.movie_id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)'))","create materialized view if not exists mv430 as select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_8, complete_cast.status_id AS status_id, keyword.id AS keyword_id_10, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_info.info AS info, movie_info.info_type_id AS movie_info_info_type_id_14, name.gender AS gender, name.name AS name_name_16, person_info.info_type_id AS person_info_info_type_id_17, title.production_year AS production_year, title.title AS title
 from char_name,person_info,name,movie_info,keyword,movie_companies,title,comp_cast_type,complete_cast,aka_name,cast_info,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (name.id = person_info.person_id) And (person_info.person_id = cast_info.person_id) And (cast_info.person_id = name.id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.movie_id = title.id) And (movie_info.info = '__LIKE__USA:%200%') And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'computer-animation') And (movie_companies.movie_id = title.id) And (title.id = complete_cast.movie_id) And (title.id = movie_keyword.movie_id) And (comp_cast_type.id = complete_cast.subject_id) And (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_keyword.movie_id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)'))"
431,"select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_8, complete_cast.status_id AS status_id, keyword.id AS keyword_id_10, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_info.info AS info, movie_info.info_type_id AS movie_info_info_type_id_14, name.gender AS gender, name.name AS name_name_16, person_info.info_type_id AS person_info_info_type_id_17, title.production_year AS production_year, title.title AS title
 from char_name,person_info,name,movie_info,keyword,movie_companies,title,comp_cast_type,complete_cast,aka_name,cast_info,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (name.id = person_info.person_id) And (person_info.person_id = cast_info.person_id) And (cast_info.person_id = name.id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.movie_id = title.id) And (movie_info.info = '__LIKE__USA:%200%') And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'computer-animation') And (movie_companies.movie_id = title.id) And (title.id = complete_cast.movie_id) And (title.id = movie_keyword.movie_id) And (comp_cast_type.id = complete_cast.subject_id) And (comp_cast_type.id = complete_cast.status_id) And (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_keyword.movie_id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)'))","create materialized view if not exists mv431 as select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_8, complete_cast.status_id AS status_id, keyword.id AS keyword_id_10, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_info.info AS info, movie_info.info_type_id AS movie_info_info_type_id_14, name.gender AS gender, name.name AS name_name_16, person_info.info_type_id AS person_info_info_type_id_17, title.production_year AS production_year, title.title AS title
 from char_name,person_info,name,movie_info,keyword,movie_companies,title,comp_cast_type,complete_cast,aka_name,cast_info,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (name.id = person_info.person_id) And (person_info.person_id = cast_info.person_id) And (cast_info.person_id = name.id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.movie_id = title.id) And (movie_info.info = '__LIKE__USA:%200%') And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'computer-animation') And (movie_companies.movie_id = title.id) And (title.id = complete_cast.movie_id) And (title.id = movie_keyword.movie_id) And (comp_cast_type.id = complete_cast.subject_id) And (comp_cast_type.id = complete_cast.status_id) And (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_keyword.movie_id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)'))"
432,"select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_8, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_10, info_type.info AS info_type_info_11, keyword.id AS keyword_id_12, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_info.info AS movie_info_info_15, movie_info.info_type_id AS info_type_id, name.gender AS gender, name.name AS name_name_18, title.production_year AS production_year, title.title AS title
 from char_name,person_info,name,movie_info,keyword,movie_companies,title,comp_cast_type,complete_cast,aka_name,cast_info,info_type,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (name.id = person_info.person_id) And (person_info.person_id = cast_info.person_id) And (info_type.id = person_info.info_type_id) And (cast_info.person_id = name.id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.movie_id = title.id) And (movie_info.info = '__LIKE__USA:%200%') And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'computer-animation') And (movie_companies.movie_id = title.id) And (title.id = complete_cast.movie_id) And (title.id = movie_keyword.movie_id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_keyword.movie_id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)'))","create materialized view if not exists mv432 as select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_8, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_10, info_type.info AS info_type_info_11, keyword.id AS keyword_id_12, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_info.info AS movie_info_info_15, movie_info.info_type_id AS info_type_id, name.gender AS gender, name.name AS name_name_18, title.production_year AS production_year, title.title AS title
 from char_name,person_info,name,movie_info,keyword,movie_companies,title,comp_cast_type,complete_cast,aka_name,cast_info,info_type,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (name.id = person_info.person_id) And (person_info.person_id = cast_info.person_id) And (info_type.id = person_info.info_type_id) And (cast_info.person_id = name.id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.movie_id = title.id) And (movie_info.info = '__LIKE__USA:%200%') And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'computer-animation') And (movie_companies.movie_id = title.id) And (title.id = complete_cast.movie_id) And (title.id = movie_keyword.movie_id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_keyword.movie_id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)'))"
433,"select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, company_name.country_code AS country_code, company_name.id AS company_name_id_9, complete_cast.movie_id AS complete_cast_movie_id_10, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_12, info_type.info AS info_type_info_13, keyword.id AS keyword_id_14, keyword.keyword AS keyword, movie_info.info AS movie_info_info_16, movie_info.info_type_id AS info_type_id, name.gender AS gender, name.name AS name_name_19, title.production_year AS production_year, title.title AS title
 from char_name,person_info,name,movie_info,keyword,movie_companies,title,company_name,comp_cast_type,complete_cast,aka_name,cast_info,info_type,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (name.id = person_info.person_id) And (person_info.person_id = cast_info.person_id) And (info_type.id = person_info.info_type_id) And (cast_info.person_id = name.id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.movie_id = title.id) And (movie_info.info = '__LIKE__USA:%200%') And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'computer-animation') And (movie_companies.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (title.id = complete_cast.movie_id) And (title.id = movie_keyword.movie_id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_keyword.movie_id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)'))","create materialized view if not exists mv433 as select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, company_name.country_code AS country_code, company_name.id AS company_name_id_9, complete_cast.movie_id AS complete_cast_movie_id_10, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_12, info_type.info AS info_type_info_13, keyword.id AS keyword_id_14, keyword.keyword AS keyword, movie_info.info AS movie_info_info_16, movie_info.info_type_id AS info_type_id, name.gender AS gender, name.name AS name_name_19, title.production_year AS production_year, title.title AS title
 from char_name,person_info,name,movie_info,keyword,movie_companies,title,company_name,comp_cast_type,complete_cast,aka_name,cast_info,info_type,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (name.id = person_info.person_id) And (person_info.person_id = cast_info.person_id) And (info_type.id = person_info.info_type_id) And (cast_info.person_id = name.id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.movie_id = title.id) And (movie_info.info = '__LIKE__USA:%200%') And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'computer-animation') And (movie_companies.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (title.id = complete_cast.movie_id) And (title.id = movie_keyword.movie_id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_keyword.movie_id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)'))"
434,"select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, company_name.country_code AS country_code, company_name.id AS company_name_id_9, complete_cast.movie_id AS complete_cast_movie_id_10, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_12, info_type.info AS info_type_info_13, keyword.id AS keyword_id_14, keyword.keyword AS keyword, movie_info.info AS movie_info_info_16, movie_info.info_type_id AS info_type_id, name.gender AS gender, name.name AS name_name_19, title.production_year AS production_year, title.title AS title
 from char_name,person_info,name,movie_info,keyword,movie_companies,title,company_name,comp_cast_type,complete_cast,aka_name,cast_info,info_type,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (name.id = person_info.person_id) And (person_info.person_id = cast_info.person_id) And (info_type.id = person_info.info_type_id) And (cast_info.person_id = name.id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.movie_id = title.id) And (movie_info.info = '__LIKE__USA:%200%') And (info_type.id = movie_info.info_type_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'computer-animation') And (movie_companies.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (title.id = complete_cast.movie_id) And (title.id = movie_keyword.movie_id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_keyword.movie_id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)'))","create materialized view if not exists mv434 as select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, company_name.country_code AS country_code, company_name.id AS company_name_id_9, complete_cast.movie_id AS complete_cast_movie_id_10, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_12, info_type.info AS info_type_info_13, keyword.id AS keyword_id_14, keyword.keyword AS keyword, movie_info.info AS movie_info_info_16, movie_info.info_type_id AS info_type_id, name.gender AS gender, name.name AS name_name_19, title.production_year AS production_year, title.title AS title
 from char_name,person_info,name,movie_info,keyword,movie_companies,title,company_name,comp_cast_type,complete_cast,aka_name,cast_info,info_type,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (name.id = person_info.person_id) And (person_info.person_id = cast_info.person_id) And (info_type.id = person_info.info_type_id) And (cast_info.person_id = name.id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.movie_id = title.id) And (movie_info.info = '__LIKE__USA:%200%') And (info_type.id = movie_info.info_type_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'computer-animation') And (movie_companies.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (title.id = complete_cast.movie_id) And (title.id = movie_keyword.movie_id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_keyword.movie_id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)'))"
435,"select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, company_name.country_code AS country_code, company_name.id AS company_name_id_9, complete_cast.movie_id AS complete_cast_movie_id_10, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_12, info_type.info AS info_type_info_13, keyword.id AS keyword_id_14, keyword.keyword AS keyword, movie_info.info AS movie_info_info_16, movie_info.info_type_id AS info_type_id, name.gender AS gender, name.name AS name_name_19, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from char_name,person_info,name,role_type,movie_info,keyword,movie_companies,title,company_name,comp_cast_type,complete_cast,aka_name,cast_info,info_type,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (name.id = person_info.person_id) And (person_info.person_id = cast_info.person_id) And (info_type.id = person_info.info_type_id) And (cast_info.person_id = name.id) And (role_type.id = cast_info.role_id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.movie_id = title.id) And (movie_info.info = '__LIKE__USA:%200%') And (info_type.id = movie_info.info_type_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'computer-animation') And (movie_companies.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (title.id = complete_cast.movie_id) And (title.id = movie_keyword.movie_id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_keyword.movie_id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)'))","create materialized view if not exists mv435 as select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, company_name.country_code AS country_code, company_name.id AS company_name_id_9, complete_cast.movie_id AS complete_cast_movie_id_10, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_12, info_type.info AS info_type_info_13, keyword.id AS keyword_id_14, keyword.keyword AS keyword, movie_info.info AS movie_info_info_16, movie_info.info_type_id AS info_type_id, name.gender AS gender, name.name AS name_name_19, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from char_name,person_info,name,role_type,movie_info,keyword,movie_companies,title,company_name,comp_cast_type,complete_cast,aka_name,cast_info,info_type,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (name.id = person_info.person_id) And (person_info.person_id = cast_info.person_id) And (info_type.id = person_info.info_type_id) And (cast_info.person_id = name.id) And (role_type.id = cast_info.role_id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.movie_id = title.id) And (movie_info.info = '__LIKE__USA:%200%') And (info_type.id = movie_info.info_type_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'computer-animation') And (movie_companies.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (title.id = complete_cast.movie_id) And (title.id = movie_keyword.movie_id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (aka_name.person_id = cast_info.person_id) And (cast_info.movie_id = movie_keyword.movie_id) And (cast_info.note in ('(voice)', '(voice) (uncredited)', '(voice: English version)'))"
436,"select keyword.id AS id, keyword.keyword AS keyword, movie_info.info AS info, movie_info.info_type_id AS info_type_id, movie_info.movie_id AS movie_id
 from movie_info,keyword,movie_keyword
 where (movie_info.movie_id = movie_keyword.movie_id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'computer-animation')","create materialized view if not exists mv436 as select keyword.id AS id, keyword.keyword AS keyword, movie_info.info AS info, movie_info.info_type_id AS info_type_id, movie_info.movie_id AS movie_id
 from movie_info,keyword,movie_keyword
 where (movie_info.movie_id = movie_keyword.movie_id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'computer-animation')"
437,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, keyword.id AS id, keyword.keyword AS keyword, movie_info.info AS info, movie_info.info_type_id AS info_type_id
 from movie_info,keyword,cast_info,movie_keyword
 where (cast_info.movie_id = movie_info.movie_id) And (movie_info.movie_id = movie_keyword.movie_id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'computer-animation') And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)'))","create materialized view if not exists mv437 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, keyword.id AS id, keyword.keyword AS keyword, movie_info.info AS info, movie_info.info_type_id AS info_type_id
 from movie_info,keyword,cast_info,movie_keyword
 where (cast_info.movie_id = movie_info.movie_id) And (movie_info.movie_id = movie_keyword.movie_id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'computer-animation') And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)'))"
438,"select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, keyword.id AS id, keyword.keyword AS keyword, movie_info.info AS info, movie_info.info_type_id AS info_type_id
 from movie_keyword,movie_info,aka_name,cast_info,keyword
 where (movie_info.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (keyword.keyword = 'computer-animation')","create materialized view if not exists mv438 as select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, keyword.id AS id, keyword.keyword AS keyword, movie_info.info AS info, movie_info.info_type_id AS info_type_id
 from movie_keyword,movie_info,aka_name,cast_info,keyword
 where (movie_info.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (keyword.keyword = 'computer-animation')"
439,"select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, keyword.id AS id, keyword.keyword AS keyword, movie_info.info AS info, movie_info.info_type_id AS info_type_id
 from movie_keyword,char_name,movie_info,aka_name,cast_info,keyword
 where (movie_info.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (char_name.id = cast_info.person_role_id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (keyword.keyword = 'computer-animation')","create materialized view if not exists mv439 as select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, keyword.id AS id, keyword.keyword AS keyword, movie_info.info AS info, movie_info.info_type_id AS info_type_id
 from movie_keyword,char_name,movie_info,aka_name,cast_info,keyword
 where (movie_info.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (char_name.id = cast_info.person_role_id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (keyword.keyword = 'computer-animation')"
440,"select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, keyword.id AS id, keyword.keyword AS keyword, movie_info.info AS info, movie_info.info_type_id AS info_type_id, movie_keyword.movie_id AS movie_keyword_movie_id_10, title.production_year AS production_year, title.title AS title
 from movie_keyword,char_name,movie_info,title,aka_name,cast_info,keyword
 where (title.id = movie_keyword.movie_id) And (movie_info.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (char_name.id = cast_info.person_role_id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (keyword.keyword = 'computer-animation')","create materialized view if not exists mv440 as select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, keyword.id AS id, keyword.keyword AS keyword, movie_info.info AS info, movie_info.info_type_id AS info_type_id, movie_keyword.movie_id AS movie_keyword_movie_id_10, title.production_year AS production_year, title.title AS title
 from movie_keyword,char_name,movie_info,title,aka_name,cast_info,keyword
 where (title.id = movie_keyword.movie_id) And (movie_info.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (char_name.id = cast_info.person_role_id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (keyword.keyword = 'computer-animation')"
441,"select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, keyword.id AS id, keyword.keyword AS keyword, movie_info.info AS info, movie_info.info_type_id AS info_type_id, movie_keyword.movie_id AS movie_keyword_movie_id_10, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from movie_keyword,char_name,role_type,movie_info,title,aka_name,cast_info,keyword
 where (title.id = movie_keyword.movie_id) And (movie_info.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (char_name.id = cast_info.person_role_id) And (role_type.id = cast_info.role_id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (keyword.keyword = 'computer-animation')","create materialized view if not exists mv441 as select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, keyword.id AS id, keyword.keyword AS keyword, movie_info.info AS info, movie_info.info_type_id AS info_type_id, movie_keyword.movie_id AS movie_keyword_movie_id_10, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from movie_keyword,char_name,role_type,movie_info,title,aka_name,cast_info,keyword
 where (title.id = movie_keyword.movie_id) And (movie_info.movie_id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (char_name.id = cast_info.person_role_id) And (role_type.id = cast_info.role_id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (keyword.keyword = 'computer-animation')"
442,"select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, keyword.id AS id, keyword.keyword AS keyword, movie_info.info AS info, movie_info.info_type_id AS movie_info_info_type_id_9, person_info.info_type_id AS person_info_info_type_id_10, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from char_name,person_info,role_type,movie_info,keyword,title,aka_name,cast_info,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (person_info.person_id = cast_info.person_id) And (role_type.id = cast_info.role_id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.movie_id = title.id) And (movie_info.movie_id = movie_keyword.movie_id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'computer-animation') And (title.id = movie_keyword.movie_id) And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)'))","create materialized view if not exists mv442 as select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, keyword.id AS id, keyword.keyword AS keyword, movie_info.info AS info, movie_info.info_type_id AS movie_info_info_type_id_9, person_info.info_type_id AS person_info_info_type_id_10, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from char_name,person_info,role_type,movie_info,keyword,title,aka_name,cast_info,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (person_info.person_id = cast_info.person_id) And (role_type.id = cast_info.role_id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.movie_id = title.id) And (movie_info.movie_id = movie_keyword.movie_id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'computer-animation') And (title.id = movie_keyword.movie_id) And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)'))"
443,"select aka_name.person_id AS aka_name_person_id_0, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, keyword.id AS keyword_id_8, keyword.keyword AS keyword, movie_info.info AS movie_info_info_10, movie_info.info_type_id AS info_type_id, person_info.person_id AS person_info_person_id_12, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from char_name,person_info,role_type,movie_info,keyword,title,aka_name,cast_info,info_type,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (person_info.info_type_id = info_type.id) And (person_info.person_id = cast_info.person_id) And (role_type.id = cast_info.role_id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.movie_id = title.id) And (movie_info.movie_id = movie_keyword.movie_id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'computer-animation') And (title.id = movie_keyword.movie_id) And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (info_type.info = 'trivia')","create materialized view if not exists mv443 as select aka_name.person_id AS aka_name_person_id_0, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, keyword.id AS keyword_id_8, keyword.keyword AS keyword, movie_info.info AS movie_info_info_10, movie_info.info_type_id AS info_type_id, person_info.person_id AS person_info_person_id_12, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from char_name,person_info,role_type,movie_info,keyword,title,aka_name,cast_info,info_type,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (person_info.info_type_id = info_type.id) And (person_info.person_id = cast_info.person_id) And (role_type.id = cast_info.role_id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.movie_id = title.id) And (movie_info.movie_id = movie_keyword.movie_id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'computer-animation') And (title.id = movie_keyword.movie_id) And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (info_type.info = 'trivia')"
444,"select aka_name.person_id AS aka_name_person_id_0, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, keyword.id AS keyword_id_8, keyword.keyword AS keyword, movie_info.info AS movie_info_info_10, person_info.person_id AS person_info_person_id_11, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from char_name,person_info,role_type,movie_info,keyword,title,aka_name,cast_info,info_type,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (person_info.info_type_id = info_type.id) And (person_info.person_id = cast_info.person_id) And (role_type.id = cast_info.role_id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.movie_id = title.id) And (movie_info.movie_id = movie_keyword.movie_id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (info_type.id = movie_info.info_type_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'computer-animation') And (title.id = movie_keyword.movie_id) And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (info_type.info = 'trivia')","create materialized view if not exists mv444 as select aka_name.person_id AS aka_name_person_id_0, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS name, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, keyword.id AS keyword_id_8, keyword.keyword AS keyword, movie_info.info AS movie_info_info_10, person_info.person_id AS person_info_person_id_11, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from char_name,person_info,role_type,movie_info,keyword,title,aka_name,cast_info,info_type,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (person_info.info_type_id = info_type.id) And (person_info.person_id = cast_info.person_id) And (role_type.id = cast_info.role_id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.movie_id = title.id) And (movie_info.movie_id = movie_keyword.movie_id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (info_type.id = movie_info.info_type_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'computer-animation') And (title.id = movie_keyword.movie_id) And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (info_type.info = 'trivia')"
445,"select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, keyword.id AS keyword_id_8, keyword.keyword AS keyword, movie_info.info AS movie_info_info_10, name.gender AS gender, name.name AS name_name_12, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from char_name,person_info,name,role_type,movie_info,keyword,title,aka_name,cast_info,info_type,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (person_info.info_type_id = info_type.id) And (name.id = person_info.person_id) And (person_info.person_id = cast_info.person_id) And (cast_info.person_id = name.id) And (role_type.id = cast_info.role_id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.movie_id = title.id) And (movie_info.movie_id = movie_keyword.movie_id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (info_type.id = movie_info.info_type_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'computer-animation') And (title.id = movie_keyword.movie_id) And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (info_type.info = 'trivia')","create materialized view if not exists mv445 as select aka_name.person_id AS person_id, cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, keyword.id AS keyword_id_8, keyword.keyword AS keyword, movie_info.info AS movie_info_info_10, name.gender AS gender, name.name AS name_name_12, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from char_name,person_info,name,role_type,movie_info,keyword,title,aka_name,cast_info,info_type,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (person_info.info_type_id = info_type.id) And (name.id = person_info.person_id) And (person_info.person_id = cast_info.person_id) And (cast_info.person_id = name.id) And (role_type.id = cast_info.role_id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.movie_id = title.id) And (movie_info.movie_id = movie_keyword.movie_id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (info_type.id = movie_info.info_type_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'computer-animation') And (title.id = movie_keyword.movie_id) And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (info_type.info = 'trivia')"
446,"select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, complete_cast.movie_id AS complete_cast_movie_id_6, complete_cast.status_id AS status_id, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_9, info_type.info AS info_type_info_10, keyword.id AS keyword_id_11, keyword.keyword AS keyword, movie_info.info AS movie_info_info_13, name.gender AS gender, name.name AS name_name_15, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from char_name,person_info,name,role_type,movie_info,keyword,title,complete_cast,aka_name,cast_info,info_type,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (person_info.info_type_id = info_type.id) And (name.id = person_info.person_id) And (person_info.person_id = cast_info.person_id) And (cast_info.person_id = name.id) And (role_type.id = cast_info.role_id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.movie_id = title.id) And (movie_info.movie_id = movie_keyword.movie_id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (info_type.id = movie_info.info_type_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'computer-animation') And (title.id = complete_cast.movie_id) And (title.id = movie_keyword.movie_id) And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (info_type.info = 'trivia')","create materialized view if not exists mv446 as select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, complete_cast.movie_id AS complete_cast_movie_id_6, complete_cast.status_id AS status_id, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_9, info_type.info AS info_type_info_10, keyword.id AS keyword_id_11, keyword.keyword AS keyword, movie_info.info AS movie_info_info_13, name.gender AS gender, name.name AS name_name_15, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from char_name,person_info,name,role_type,movie_info,keyword,title,complete_cast,aka_name,cast_info,info_type,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (person_info.info_type_id = info_type.id) And (name.id = person_info.person_id) And (person_info.person_id = cast_info.person_id) And (cast_info.person_id = name.id) And (role_type.id = cast_info.role_id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.movie_id = title.id) And (movie_info.movie_id = movie_keyword.movie_id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (info_type.id = movie_info.info_type_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'computer-animation') And (title.id = complete_cast.movie_id) And (title.id = movie_keyword.movie_id) And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (info_type.info = 'trivia')"
447,"select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_8, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_10, info_type.info AS info_type_info_11, keyword.id AS keyword_id_12, keyword.keyword AS keyword, movie_info.info AS movie_info_info_14, name.gender AS gender, name.name AS name_name_16, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from char_name,person_info,name,role_type,movie_info,keyword,title,comp_cast_type,complete_cast,aka_name,cast_info,info_type,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (person_info.info_type_id = info_type.id) And (name.id = person_info.person_id) And (person_info.person_id = cast_info.person_id) And (cast_info.person_id = name.id) And (role_type.id = cast_info.role_id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.movie_id = title.id) And (movie_info.movie_id = movie_keyword.movie_id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (info_type.id = movie_info.info_type_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'computer-animation') And (title.id = complete_cast.movie_id) And (title.id = movie_keyword.movie_id) And (comp_cast_type.id = complete_cast.status_id) And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (info_type.info = 'trivia')","create materialized view if not exists mv447 as select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_8, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_10, info_type.info AS info_type_info_11, keyword.id AS keyword_id_12, keyword.keyword AS keyword, movie_info.info AS movie_info_info_14, name.gender AS gender, name.name AS name_name_16, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from char_name,person_info,name,role_type,movie_info,keyword,title,comp_cast_type,complete_cast,aka_name,cast_info,info_type,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (person_info.info_type_id = info_type.id) And (name.id = person_info.person_id) And (person_info.person_id = cast_info.person_id) And (cast_info.person_id = name.id) And (role_type.id = cast_info.role_id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.movie_id = title.id) And (movie_info.movie_id = movie_keyword.movie_id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (info_type.id = movie_info.info_type_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'computer-animation') And (title.id = complete_cast.movie_id) And (title.id = movie_keyword.movie_id) And (comp_cast_type.id = complete_cast.status_id) And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (info_type.info = 'trivia')"
448,"select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_8, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_10, info_type.info AS info_type_info_11, keyword.id AS keyword_id_12, keyword.keyword AS keyword, movie_info.info AS movie_info_info_14, name.gender AS gender, name.name AS name_name_16, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from char_name,person_info,name,role_type,movie_info,keyword,title,comp_cast_type,complete_cast,aka_name,cast_info,info_type,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (person_info.info_type_id = info_type.id) And (name.id = person_info.person_id) And (person_info.person_id = cast_info.person_id) And (cast_info.person_id = name.id) And (role_type.id = cast_info.role_id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.movie_id = title.id) And (movie_info.movie_id = movie_keyword.movie_id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (info_type.id = movie_info.info_type_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'computer-animation') And (title.id = complete_cast.movie_id) And (title.id = movie_keyword.movie_id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (info_type.info = 'trivia')","create materialized view if not exists mv448 as select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_8, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_10, info_type.info AS info_type_info_11, keyword.id AS keyword_id_12, keyword.keyword AS keyword, movie_info.info AS movie_info_info_14, name.gender AS gender, name.name AS name_name_16, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from char_name,person_info,name,role_type,movie_info,keyword,title,comp_cast_type,complete_cast,aka_name,cast_info,info_type,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (person_info.info_type_id = info_type.id) And (name.id = person_info.person_id) And (person_info.person_id = cast_info.person_id) And (cast_info.person_id = name.id) And (role_type.id = cast_info.role_id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.movie_id = title.id) And (movie_info.movie_id = movie_keyword.movie_id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (info_type.id = movie_info.info_type_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'computer-animation') And (title.id = complete_cast.movie_id) And (title.id = movie_keyword.movie_id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (info_type.info = 'trivia')"
449,"select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_8, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_10, info_type.info AS info_type_info_11, keyword.id AS keyword_id_12, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_info.info AS movie_info_info_15, name.gender AS gender, name.name AS name_name_17, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from char_name,person_info,name,role_type,movie_info,keyword,movie_companies,title,comp_cast_type,complete_cast,aka_name,cast_info,info_type,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (person_info.info_type_id = info_type.id) And (name.id = person_info.person_id) And (person_info.person_id = cast_info.person_id) And (cast_info.person_id = name.id) And (role_type.id = cast_info.role_id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.movie_id = title.id) And (movie_info.movie_id = movie_keyword.movie_id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (info_type.id = movie_info.info_type_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'computer-animation') And (movie_companies.movie_id = title.id) And (title.id = complete_cast.movie_id) And (title.id = movie_keyword.movie_id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (info_type.info = 'trivia')","create materialized view if not exists mv449 as select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_8, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_10, info_type.info AS info_type_info_11, keyword.id AS keyword_id_12, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_info.info AS movie_info_info_15, name.gender AS gender, name.name AS name_name_17, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from char_name,person_info,name,role_type,movie_info,keyword,movie_companies,title,comp_cast_type,complete_cast,aka_name,cast_info,info_type,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (person_info.info_type_id = info_type.id) And (name.id = person_info.person_id) And (person_info.person_id = cast_info.person_id) And (cast_info.person_id = name.id) And (role_type.id = cast_info.role_id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.movie_id = title.id) And (movie_info.movie_id = movie_keyword.movie_id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (info_type.id = movie_info.info_type_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'computer-animation') And (movie_companies.movie_id = title.id) And (title.id = complete_cast.movie_id) And (title.id = movie_keyword.movie_id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (info_type.info = 'trivia')"
450,"select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, company_name.country_code AS country_code, company_name.id AS company_name_id_9, complete_cast.movie_id AS complete_cast_movie_id_10, complete_cast.subject_id AS subject_id, info_type.info AS info_type_info_12, keyword.id AS keyword_id_13, keyword.keyword AS keyword, movie_info.info AS movie_info_info_15, movie_info.info_type_id AS info_type_id, name.gender AS gender, name.name AS name_name_18, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from char_name,person_info,name,role_type,movie_info,keyword,movie_companies,title,company_name,comp_cast_type,complete_cast,aka_name,cast_info,info_type,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (info_type.id = person_info.info_type_id) And (name.id = person_info.person_id) And (person_info.person_id = cast_info.person_id) And (cast_info.person_id = name.id) And (role_type.id = cast_info.role_id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (info_type.id = movie_info.info_type_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'computer-animation') And (movie_companies.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (title.id = complete_cast.movie_id) And (title.id = movie_keyword.movie_id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (person_info.info_type_id = info_type.id) And (info_type.info = 'trivia') And (movie_info.movie_id = movie_keyword.movie_id)","create materialized view if not exists mv450 as select aka_name.person_id AS person_id, cast_info.movie_id AS cast_info_movie_id_1, cast_info.note AS note, cast_info.person_role_id AS person_role_id, cast_info.role_id AS role_id, char_name.name AS char_name_name_5, comp_cast_type.id AS comp_cast_type_id_6, comp_cast_type.kind AS kind, company_name.country_code AS country_code, company_name.id AS company_name_id_9, complete_cast.movie_id AS complete_cast_movie_id_10, complete_cast.subject_id AS subject_id, info_type.info AS info_type_info_12, keyword.id AS keyword_id_13, keyword.keyword AS keyword, movie_info.info AS movie_info_info_15, movie_info.info_type_id AS info_type_id, name.gender AS gender, name.name AS name_name_18, role_type.role AS role, title.production_year AS production_year, title.title AS title
 from char_name,person_info,name,role_type,movie_info,keyword,movie_companies,title,company_name,comp_cast_type,complete_cast,aka_name,cast_info,info_type,movie_keyword
 where (char_name.id = cast_info.person_role_id) And (info_type.id = person_info.info_type_id) And (name.id = person_info.person_id) And (person_info.person_id = cast_info.person_id) And (cast_info.person_id = name.id) And (role_type.id = cast_info.role_id) And (cast_info.movie_id = movie_info.movie_id) And (movie_info.movie_id = title.id) And (movie_info.info IS NOT NULL)  And  (((movie_info.info = '__LIKE__Japan:%200%')) Or ((movie_info.info = '__LIKE__USA:%200%'))) And (info_type.id = movie_info.info_type_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'computer-animation') And (movie_companies.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (title.id = complete_cast.movie_id) And (title.id = movie_keyword.movie_id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (aka_name.person_id = cast_info.person_id) And (cast_info.note in ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)')) And (person_info.info_type_id = info_type.id) And (info_type.info = 'trivia') And (movie_info.movie_id = movie_keyword.movie_id)"
451,"select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id
 from keyword,movie_keyword
 where (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital'))","create materialized view if not exists mv451 as select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id
 from keyword,movie_keyword
 where (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital'))"
452,"select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
 from title,keyword,movie_keyword
 where (title.id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital'))","create materialized view if not exists mv452 as select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
 from title,keyword,movie_keyword
 where (title.id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital'))"
453,"select complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, complete_cast.subject_id AS subject_id, keyword.id AS id, keyword.keyword AS keyword, title.production_year AS production_year, title.title AS title
 from title,keyword,complete_cast,movie_keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = title.id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital'))","create materialized view if not exists mv453 as select complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, complete_cast.subject_id AS subject_id, keyword.id AS id, keyword.keyword AS keyword, title.production_year AS production_year, title.title AS title
 from title,keyword,complete_cast,movie_keyword
 where (title.id = movie_keyword.movie_id) And (complete_cast.movie_id = title.id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword in ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital'))"
454,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, keyword.id AS keyword_id_4, keyword.keyword AS keyword, title.production_year AS production_year, title.title AS title
 from movie_keyword,title,comp_cast_type,complete_cast,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (comp_cast_type.id = complete_cast.subject_id) And (complete_cast.movie_id = title.id) And (keyword.keyword in ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital'))","create materialized view if not exists mv454 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, keyword.id AS keyword_id_4, keyword.keyword AS keyword, title.production_year AS production_year, title.title AS title
 from movie_keyword,title,comp_cast_type,complete_cast,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (comp_cast_type.id = complete_cast.subject_id) And (complete_cast.movie_id = title.id) And (keyword.keyword in ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital'))"
455,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, keyword.id AS keyword_id_4, keyword.keyword AS keyword, title.production_year AS production_year, title.title AS title
 from movie_keyword,title,comp_cast_type,complete_cast,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (comp_cast_type.id = complete_cast.subject_id) And (complete_cast.movie_id = title.id) And (comp_cast_type.id = complete_cast.status_id) And (keyword.keyword in ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital'))","create materialized view if not exists mv455 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, keyword.id AS keyword_id_4, keyword.keyword AS keyword, title.production_year AS production_year, title.title AS title
 from movie_keyword,title,comp_cast_type,complete_cast,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (comp_cast_type.id = complete_cast.subject_id) And (complete_cast.movie_id = title.id) And (comp_cast_type.id = complete_cast.status_id) And (keyword.keyword in ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital'))"
456,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_2, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_4, keyword.keyword AS keyword, movie_info_idx.info AS info, movie_info_idx.info_type_id AS info_type_id, movie_keyword.movie_id AS movie_keyword_movie_id_8, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,title,comp_cast_type,complete_cast,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (complete_cast.movie_id = title.id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (keyword.keyword in ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital'))","create materialized view if not exists mv456 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_2, complete_cast.subject_id AS subject_id, keyword.id AS keyword_id_4, keyword.keyword AS keyword, movie_info_idx.info AS info, movie_info_idx.info_type_id AS info_type_id, movie_keyword.movie_id AS movie_keyword_movie_id_8, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,title,comp_cast_type,complete_cast,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (complete_cast.movie_id = title.id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (keyword.keyword in ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital'))"
457,"select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_2, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, keyword.id AS keyword_id_6, keyword.keyword AS keyword, movie_info_idx.info AS movie_info_idx_info_8, movie_keyword.movie_id AS movie_keyword_movie_id_9, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,title,comp_cast_type,complete_cast,info_type,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (info_type.id = movie_info_idx.info_type_id) And (complete_cast.movie_id = title.id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (keyword.keyword in ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital'))","create materialized view if not exists mv457 as select comp_cast_type.id AS comp_cast_type_id_0, comp_cast_type.kind AS kind, complete_cast.movie_id AS complete_cast_movie_id_2, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_4, info_type.info AS info_type_info_5, keyword.id AS keyword_id_6, keyword.keyword AS keyword, movie_info_idx.info AS movie_info_idx_info_8, movie_keyword.movie_id AS movie_keyword_movie_id_9, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,title,comp_cast_type,complete_cast,info_type,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (info_type.id = movie_info_idx.info_type_id) And (complete_cast.movie_id = title.id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (keyword.keyword in ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital'))"
458,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS kind, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, keyword.id AS keyword_id_8, keyword.keyword AS keyword, movie_info_idx.info AS movie_info_idx_info_10, movie_keyword.movie_id AS movie_keyword_movie_id_11, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,title,comp_cast_type,complete_cast,cast_info,info_type,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (info_type.id = movie_info_idx.info_type_id) And (cast_info.movie_id = title.id) And (complete_cast.movie_id = title.id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (keyword.keyword in ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital'))","create materialized view if not exists mv458 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS kind, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, keyword.id AS keyword_id_8, keyword.keyword AS keyword, movie_info_idx.info AS movie_info_idx_info_10, movie_keyword.movie_id AS movie_keyword_movie_id_11, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,title,comp_cast_type,complete_cast,cast_info,info_type,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (info_type.id = movie_info_idx.info_type_id) And (cast_info.movie_id = title.id) And (complete_cast.movie_id = title.id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (keyword.keyword in ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital'))"
459,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS kind, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, keyword.id AS keyword_id_8, keyword.keyword AS keyword, movie_info_idx.info AS movie_info_idx_info_10, movie_keyword.movie_id AS movie_keyword_movie_id_11, name.gender AS gender, name.name AS name, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,name,title,comp_cast_type,complete_cast,cast_info,info_type,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (info_type.id = movie_info_idx.info_type_id) And (name.id = cast_info.person_id) And (cast_info.movie_id = title.id) And (complete_cast.movie_id = title.id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (keyword.keyword in ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital'))","create materialized view if not exists mv459 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS kind, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, keyword.id AS keyword_id_8, keyword.keyword AS keyword, movie_info_idx.info AS movie_info_idx_info_10, movie_keyword.movie_id AS movie_keyword_movie_id_11, name.gender AS gender, name.name AS name, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,name,title,comp_cast_type,complete_cast,cast_info,info_type,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (info_type.id = movie_info_idx.info_type_id) And (name.id = cast_info.person_id) And (cast_info.movie_id = title.id) And (complete_cast.movie_id = title.id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (keyword.keyword in ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital'))"
460,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS kind, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, keyword.id AS keyword_id_8, keyword.keyword AS keyword, movie_info.info AS movie_info_info_10, movie_info.info_type_id AS info_type_id, movie_info_idx.info AS movie_info_idx_info_12, movie_keyword.movie_id AS movie_keyword_movie_id_13, name.gender AS gender, name.name AS name, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,name,movie_info,title,comp_cast_type,complete_cast,cast_info,info_type,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (info_type.id = movie_info_idx.info_type_id) And (name.id = cast_info.person_id) And (title.id = movie_info.movie_id) And (movie_info.info in ('Horror', 'Thriller')) And (cast_info.movie_id = title.id) And (complete_cast.movie_id = title.id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (keyword.keyword in ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital'))","create materialized view if not exists mv460 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS kind, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, keyword.id AS keyword_id_8, keyword.keyword AS keyword, movie_info.info AS movie_info_info_10, movie_info.info_type_id AS info_type_id, movie_info_idx.info AS movie_info_idx_info_12, movie_keyword.movie_id AS movie_keyword_movie_id_13, name.gender AS gender, name.name AS name, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,name,movie_info,title,comp_cast_type,complete_cast,cast_info,info_type,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (info_type.id = movie_info_idx.info_type_id) And (name.id = cast_info.person_id) And (title.id = movie_info.movie_id) And (movie_info.info in ('Horror', 'Thriller')) And (cast_info.movie_id = title.id) And (complete_cast.movie_id = title.id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (keyword.keyword in ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital'))"
461,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS kind, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, keyword.id AS keyword_id_8, keyword.keyword AS keyword, movie_info.info AS movie_info_info_10, movie_info.info_type_id AS info_type_id, movie_info_idx.info AS movie_info_idx_info_12, movie_keyword.movie_id AS movie_keyword_movie_id_13, name.gender AS gender, name.name AS name, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,name,movie_info,title,comp_cast_type,complete_cast,cast_info,info_type,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (info_type.id = movie_info_idx.info_type_id) And (name.id = cast_info.person_id) And (title.id = movie_info.movie_id) And (movie_info.info in ('Horror', 'Thriller')) And (info_type.id = movie_info.info_type_id) And (title.id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (complete_cast.movie_id = title.id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (keyword.keyword in ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital'))","create materialized view if not exists mv461 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS kind, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, keyword.id AS keyword_id_8, keyword.keyword AS keyword, movie_info.info AS movie_info_info_10, movie_info.info_type_id AS info_type_id, movie_info_idx.info AS movie_info_idx_info_12, movie_keyword.movie_id AS movie_keyword_movie_id_13, name.gender AS gender, name.name AS name, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,name,movie_info,title,comp_cast_type,complete_cast,cast_info,info_type,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (info_type.id = movie_info_idx.info_type_id) And (name.id = cast_info.person_id) And (title.id = movie_info.movie_id) And (movie_info.info in ('Horror', 'Thriller')) And (info_type.id = movie_info.info_type_id) And (title.id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (comp_cast_type.id = complete_cast.status_id) And (comp_cast_type.id = complete_cast.subject_id) And (complete_cast.movie_id = title.id) And (cast_info.movie_id = title.id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (keyword.keyword in ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital'))"
462,"select comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id
 from comp_cast_type,complete_cast
 where (complete_cast.subject_id = comp_cast_type.id) And (comp_cast_type.kind in ('cast', 'crew'))","create materialized view if not exists mv462 as select comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id
 from comp_cast_type,complete_cast
 where (complete_cast.subject_id = comp_cast_type.id) And (comp_cast_type.kind in ('cast', 'crew'))"
463,"select comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id
 from comp_cast_type,complete_cast
 where (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind in ('cast', 'crew')) And (comp_cast_type.kind = 'complete+verified') And (complete_cast.subject_id = comp_cast_type.id)","create materialized view if not exists mv463 as select comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id
 from comp_cast_type,complete_cast
 where (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind in ('cast', 'crew')) And (comp_cast_type.kind = 'complete+verified') And (complete_cast.subject_id = comp_cast_type.id)"
464,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.subject_id AS subject_id
 from comp_cast_type,cast_info,complete_cast
 where (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (comp_cast_type.kind in ('cast', 'crew')) And (comp_cast_type.kind = 'complete+verified') And (cast_info.movie_id = complete_cast.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)'))","create materialized view if not exists mv464 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.subject_id AS subject_id
 from comp_cast_type,cast_info,complete_cast
 where (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (comp_cast_type.kind in ('cast', 'crew')) And (comp_cast_type.kind = 'complete+verified') And (cast_info.movie_id = complete_cast.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)'))"
465,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.subject_id AS subject_id, movie_info_idx.info AS info, movie_info_idx.info_type_id AS info_type_id
 from complete_cast,comp_cast_type,cast_info,movie_info_idx
 where (cast_info.movie_id = complete_cast.movie_id) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (comp_cast_type.kind in ('cast', 'crew')) And (comp_cast_type.kind = 'complete+verified') And (movie_info_idx.movie_id = cast_info.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)'))","create materialized view if not exists mv465 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.subject_id AS subject_id, movie_info_idx.info AS info, movie_info_idx.info_type_id AS info_type_id
 from complete_cast,comp_cast_type,cast_info,movie_info_idx
 where (cast_info.movie_id = complete_cast.movie_id) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (comp_cast_type.kind in ('cast', 'crew')) And (comp_cast_type.kind = 'complete+verified') And (movie_info_idx.movie_id = cast_info.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)'))"
466,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.subject_id AS subject_id, movie_info.info AS movie_info_info_6, movie_info.info_type_id AS movie_info_info_type_id_7, movie_info_idx.info AS movie_info_idx_info_8, movie_info_idx.info_type_id AS movie_info_idx_info_type_id_9
 from movie_info_idx,movie_info,comp_cast_type,complete_cast,cast_info
 where (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.movie_id = cast_info.movie_id) And (movie_info.info in ('Horror', 'Thriller')) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (comp_cast_type.kind in ('cast', 'crew')) And (comp_cast_type.kind = 'complete+verified') And (cast_info.movie_id = complete_cast.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)'))","create materialized view if not exists mv466 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.subject_id AS subject_id, movie_info.info AS movie_info_info_6, movie_info.info_type_id AS movie_info_info_type_id_7, movie_info_idx.info AS movie_info_idx_info_8, movie_info_idx.info_type_id AS movie_info_idx_info_type_id_9
 from movie_info_idx,movie_info,comp_cast_type,complete_cast,cast_info
 where (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.movie_id = cast_info.movie_id) And (movie_info.info in ('Horror', 'Thriller')) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (comp_cast_type.kind in ('cast', 'crew')) And (comp_cast_type.kind = 'complete+verified') And (cast_info.movie_id = complete_cast.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)'))"
467,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS kind, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, movie_info.info AS movie_info_info_8, movie_info_idx.info AS movie_info_idx_info_9, movie_info_idx.info_type_id AS info_type_id
 from movie_info_idx,movie_info,comp_cast_type,complete_cast,cast_info,info_type
 where (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.movie_id = cast_info.movie_id) And (movie_info.info in ('Horror', 'Thriller')) And (info_type.id = movie_info.info_type_id) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (comp_cast_type.kind in ('cast', 'crew')) And (comp_cast_type.kind = 'complete+verified') And (cast_info.movie_id = complete_cast.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)'))","create materialized view if not exists mv467 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS kind, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, movie_info.info AS movie_info_info_8, movie_info_idx.info AS movie_info_idx_info_9, movie_info_idx.info_type_id AS info_type_id
 from movie_info_idx,movie_info,comp_cast_type,complete_cast,cast_info,info_type
 where (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.movie_id = cast_info.movie_id) And (movie_info.info in ('Horror', 'Thriller')) And (info_type.id = movie_info.info_type_id) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (comp_cast_type.kind in ('cast', 'crew')) And (comp_cast_type.kind = 'complete+verified') And (cast_info.movie_id = complete_cast.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)'))"
468,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS kind, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, movie_info.info AS movie_info_info_8, movie_info_idx.info AS movie_info_idx_info_9, movie_info_idx.info_type_id AS info_type_id, name.gender AS gender, name.name AS name
 from movie_info_idx,name,movie_info,comp_cast_type,complete_cast,cast_info,info_type
 where (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.movie_id = cast_info.movie_id) And (name.id = cast_info.person_id) And (movie_info.info in ('Horror', 'Thriller')) And (info_type.id = movie_info.info_type_id) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (comp_cast_type.kind in ('cast', 'crew')) And (comp_cast_type.kind = 'complete+verified') And (cast_info.movie_id = complete_cast.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)'))","create materialized view if not exists mv468 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS kind, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, movie_info.info AS movie_info_info_8, movie_info_idx.info AS movie_info_idx_info_9, movie_info_idx.info_type_id AS info_type_id, name.gender AS gender, name.name AS name
 from movie_info_idx,name,movie_info,comp_cast_type,complete_cast,cast_info,info_type
 where (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.movie_id = cast_info.movie_id) And (name.id = cast_info.person_id) And (movie_info.info in ('Horror', 'Thriller')) And (info_type.id = movie_info.info_type_id) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (comp_cast_type.kind in ('cast', 'crew')) And (comp_cast_type.kind = 'complete+verified') And (cast_info.movie_id = complete_cast.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)'))"
469,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS kind, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, movie_info.info AS movie_info_info_8, movie_info.info_type_id AS info_type_id, movie_info_idx.info AS movie_info_idx_info_10, name.gender AS gender, name.name AS name
 from movie_info_idx,name,movie_info,comp_cast_type,complete_cast,cast_info,info_type
 where (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.movie_id = cast_info.movie_id) And (info_type.id = movie_info_idx.info_type_id) And (name.id = cast_info.person_id) And (movie_info.info in ('Horror', 'Thriller')) And (info_type.id = movie_info.info_type_id) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (comp_cast_type.kind in ('cast', 'crew')) And (comp_cast_type.kind = 'complete+verified') And (cast_info.movie_id = complete_cast.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)'))","create materialized view if not exists mv469 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS kind, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, movie_info.info AS movie_info_info_8, movie_info.info_type_id AS info_type_id, movie_info_idx.info AS movie_info_idx_info_10, name.gender AS gender, name.name AS name
 from movie_info_idx,name,movie_info,comp_cast_type,complete_cast,cast_info,info_type
 where (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.movie_id = cast_info.movie_id) And (info_type.id = movie_info_idx.info_type_id) And (name.id = cast_info.person_id) And (movie_info.info in ('Horror', 'Thriller')) And (info_type.id = movie_info.info_type_id) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (comp_cast_type.kind in ('cast', 'crew')) And (comp_cast_type.kind = 'complete+verified') And (cast_info.movie_id = complete_cast.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)'))"
470,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS kind, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, movie_info.info AS movie_info_info_8, movie_info.info_type_id AS info_type_id, movie_info_idx.info AS movie_info_idx_info_10, name.gender AS gender, name.name AS name, title.production_year AS production_year, title.title AS title
 from movie_info_idx,name,movie_info,title,comp_cast_type,complete_cast,cast_info,info_type
 where (title.id = movie_info_idx.movie_id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.movie_id = cast_info.movie_id) And (info_type.id = movie_info_idx.info_type_id) And (name.id = cast_info.person_id) And (movie_info.movie_id = title.id) And (movie_info.info in ('Horror', 'Thriller')) And (info_type.id = movie_info.info_type_id) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (comp_cast_type.kind in ('cast', 'crew')) And (comp_cast_type.kind = 'complete+verified') And (cast_info.movie_id = complete_cast.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)'))","create materialized view if not exists mv470 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS kind, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, movie_info.info AS movie_info_info_8, movie_info.info_type_id AS info_type_id, movie_info_idx.info AS movie_info_idx_info_10, name.gender AS gender, name.name AS name, title.production_year AS production_year, title.title AS title
 from movie_info_idx,name,movie_info,title,comp_cast_type,complete_cast,cast_info,info_type
 where (title.id = movie_info_idx.movie_id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.movie_id = cast_info.movie_id) And (info_type.id = movie_info_idx.info_type_id) And (name.id = cast_info.person_id) And (movie_info.movie_id = title.id) And (movie_info.info in ('Horror', 'Thriller')) And (info_type.id = movie_info.info_type_id) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (comp_cast_type.kind in ('cast', 'crew')) And (comp_cast_type.kind = 'complete+verified') And (cast_info.movie_id = complete_cast.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)'))"
471,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS kind, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, movie_info.info AS movie_info_info_8, movie_info.info_type_id AS info_type_id, movie_info_idx.info AS movie_info_idx_info_10, movie_keyword.keyword_id AS keyword_id, movie_keyword.movie_id AS movie_keyword_movie_id_12, name.gender AS gender, name.name AS name, title.production_year AS production_year, title.title AS title
 from movie_info_idx,name,movie_info,title,comp_cast_type,complete_cast,cast_info,info_type,movie_keyword
 where (title.id = movie_info_idx.movie_id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.movie_id = cast_info.movie_id) And (info_type.id = movie_info_idx.info_type_id) And (name.id = cast_info.person_id) And (movie_info.movie_id = title.id) And (movie_info.info in ('Horror', 'Thriller')) And (info_type.id = movie_info.info_type_id) And (movie_keyword.movie_id = title.id) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (comp_cast_type.kind in ('cast', 'crew')) And (comp_cast_type.kind = 'complete+verified') And (cast_info.movie_id = complete_cast.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)'))","create materialized view if not exists mv471 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS kind, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, movie_info.info AS movie_info_info_8, movie_info.info_type_id AS info_type_id, movie_info_idx.info AS movie_info_idx_info_10, movie_keyword.keyword_id AS keyword_id, movie_keyword.movie_id AS movie_keyword_movie_id_12, name.gender AS gender, name.name AS name, title.production_year AS production_year, title.title AS title
 from movie_info_idx,name,movie_info,title,comp_cast_type,complete_cast,cast_info,info_type,movie_keyword
 where (title.id = movie_info_idx.movie_id) And (movie_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.movie_id = cast_info.movie_id) And (info_type.id = movie_info_idx.info_type_id) And (name.id = cast_info.person_id) And (movie_info.movie_id = title.id) And (movie_info.info in ('Horror', 'Thriller')) And (info_type.id = movie_info.info_type_id) And (movie_keyword.movie_id = title.id) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (comp_cast_type.kind in ('cast', 'crew')) And (comp_cast_type.kind = 'complete+verified') And (cast_info.movie_id = complete_cast.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)'))"
472,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS kind, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, keyword.keyword AS keyword, movie_info.info AS movie_info_info_9, movie_info.info_type_id AS info_type_id, movie_info_idx.info AS movie_info_idx_info_11, name.gender AS gender, name.name AS name, title.production_year AS production_year, title.title AS title
 from movie_info_idx,name,movie_info,keyword,title,comp_cast_type,complete_cast,cast_info,info_type,movie_keyword
 where (movie_info_idx.movie_id = title.id) And (info_type.id = movie_info_idx.info_type_id) And (name.id = cast_info.person_id) And (title.id = movie_info.movie_id) And (movie_info.info in ('Horror', 'Thriller')) And (info_type.id = movie_info.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (title.id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (comp_cast_type.kind in ('cast', 'crew')) And (comp_cast_type.kind = 'complete+verified') And (cast_info.movie_id = complete_cast.movie_id) And (movie_info_idx.movie_id = cast_info.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (title.id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id)","create materialized view if not exists mv472 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS kind, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, keyword.keyword AS keyword, movie_info.info AS movie_info_info_9, movie_info.info_type_id AS info_type_id, movie_info_idx.info AS movie_info_idx_info_11, name.gender AS gender, name.name AS name, title.production_year AS production_year, title.title AS title
 from movie_info_idx,name,movie_info,keyword,title,comp_cast_type,complete_cast,cast_info,info_type,movie_keyword
 where (movie_info_idx.movie_id = title.id) And (info_type.id = movie_info_idx.info_type_id) And (name.id = cast_info.person_id) And (title.id = movie_info.movie_id) And (movie_info.info in ('Horror', 'Thriller')) And (info_type.id = movie_info.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (title.id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (comp_cast_type.kind in ('cast', 'crew')) And (comp_cast_type.kind = 'complete+verified') And (cast_info.movie_id = complete_cast.movie_id) And (movie_info_idx.movie_id = cast_info.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (title.id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id)"
473,"select comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id
 from comp_cast_type,complete_cast
 where (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'complete+verified') And (complete_cast.subject_id = comp_cast_type.id)","create materialized view if not exists mv473 as select comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.subject_id AS subject_id
 from comp_cast_type,complete_cast
 where (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'complete+verified') And (complete_cast.subject_id = comp_cast_type.id)"
474,"select comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, movie_info_idx.info AS info, movie_info_idx.info_type_id AS info_type_id
 from complete_cast,comp_cast_type,movie_info_idx
 where (movie_info_idx.movie_id = complete_cast.movie_id) And (complete_cast.subject_id = comp_cast_type.id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'complete+verified')","create materialized view if not exists mv474 as select comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.movie_id AS movie_id, complete_cast.status_id AS status_id, movie_info_idx.info AS info, movie_info_idx.info_type_id AS info_type_id
 from complete_cast,comp_cast_type,movie_info_idx
 where (movie_info_idx.movie_id = complete_cast.movie_id) And (complete_cast.subject_id = comp_cast_type.id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'complete+verified')"
475,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.status_id AS status_id, movie_info_idx.info AS info, movie_info_idx.info_type_id AS info_type_id
 from complete_cast,comp_cast_type,cast_info,movie_info_idx
 where (movie_info_idx.movie_id = complete_cast.movie_id) And (complete_cast.subject_id = comp_cast_type.id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'complete+verified') And (cast_info.movie_id = movie_info_idx.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)'))","create materialized view if not exists mv475 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.status_id AS status_id, movie_info_idx.info AS info, movie_info_idx.info_type_id AS info_type_id
 from complete_cast,comp_cast_type,cast_info,movie_info_idx
 where (movie_info_idx.movie_id = complete_cast.movie_id) And (complete_cast.subject_id = comp_cast_type.id) And (complete_cast.status_id = comp_cast_type.id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'complete+verified') And (cast_info.movie_id = movie_info_idx.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)'))"
476,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.subject_id AS subject_id, movie_info_idx.info AS info, movie_info_idx.info_type_id AS info_type_id, name.gender AS gender, name.name AS name
 from name,movie_info_idx,comp_cast_type,complete_cast,cast_info
 where (name.id = cast_info.person_id) And (cast_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.movie_id = complete_cast.movie_id) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'complete+verified') And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)'))","create materialized view if not exists mv476 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.subject_id AS subject_id, movie_info_idx.info AS info, movie_info_idx.info_type_id AS info_type_id, name.gender AS gender, name.name AS name
 from name,movie_info_idx,comp_cast_type,complete_cast,cast_info
 where (name.id = cast_info.person_id) And (cast_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.movie_id = complete_cast.movie_id) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'complete+verified') And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)'))"
477,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.subject_id AS subject_id, movie_info_idx.info AS info, movie_info_idx.info_type_id AS info_type_id, name.gender AS gender, name.name AS name, title.title AS title
 from name,movie_info_idx,title,comp_cast_type,complete_cast,cast_info
 where (name.id = cast_info.person_id) And (title.id = movie_info_idx.movie_id) And (cast_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.movie_id = complete_cast.movie_id) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'complete+verified') And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)'))","create materialized view if not exists mv477 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.subject_id AS subject_id, movie_info_idx.info AS info, movie_info_idx.info_type_id AS info_type_id, name.gender AS gender, name.name AS name, title.title AS title
 from name,movie_info_idx,title,comp_cast_type,complete_cast,cast_info
 where (name.id = cast_info.person_id) And (title.id = movie_info_idx.movie_id) And (cast_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.movie_id = complete_cast.movie_id) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'complete+verified') And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)'))"
478,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.subject_id AS subject_id, movie_info.info AS movie_info_info_6, movie_info.info_type_id AS movie_info_info_type_id_7, movie_info.movie_id AS movie_info_movie_id_8, movie_info_idx.info AS movie_info_idx_info_9, movie_info_idx.info_type_id AS movie_info_idx_info_type_id_10, name.gender AS gender, name.name AS name, title.title AS title
 from movie_info_idx,name,movie_info,title,comp_cast_type,complete_cast,cast_info
 where (title.id = movie_info_idx.movie_id) And (cast_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.movie_id = complete_cast.movie_id) And (name.id = cast_info.person_id) And (movie_info.movie_id = title.id) And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'complete+verified') And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)'))","create materialized view if not exists mv478 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS id, comp_cast_type.kind AS kind, complete_cast.subject_id AS subject_id, movie_info.info AS movie_info_info_6, movie_info.info_type_id AS movie_info_info_type_id_7, movie_info.movie_id AS movie_info_movie_id_8, movie_info_idx.info AS movie_info_idx_info_9, movie_info_idx.info_type_id AS movie_info_idx_info_type_id_10, name.gender AS gender, name.name AS name, title.title AS title
 from movie_info_idx,name,movie_info,title,comp_cast_type,complete_cast,cast_info
 where (title.id = movie_info_idx.movie_id) And (cast_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.movie_id = complete_cast.movie_id) And (name.id = cast_info.person_id) And (movie_info.movie_id = title.id) And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'complete+verified') And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)'))"
479,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS kind, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, movie_info.info AS movie_info_info_8, movie_info.movie_id AS movie_info_movie_id_9, movie_info_idx.info AS movie_info_idx_info_10, movie_info_idx.info_type_id AS info_type_id, name.gender AS gender, name.name AS name, title.title AS title
 from movie_info_idx,name,movie_info,title,comp_cast_type,complete_cast,cast_info,info_type
 where (title.id = movie_info_idx.movie_id) And (cast_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.movie_id = complete_cast.movie_id) And (name.id = cast_info.person_id) And (movie_info.movie_id = title.id) And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (info_type.id = movie_info.info_type_id) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'complete+verified') And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)'))","create materialized view if not exists mv479 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS kind, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, movie_info.info AS movie_info_info_8, movie_info.movie_id AS movie_info_movie_id_9, movie_info_idx.info AS movie_info_idx_info_10, movie_info_idx.info_type_id AS info_type_id, name.gender AS gender, name.name AS name, title.title AS title
 from movie_info_idx,name,movie_info,title,comp_cast_type,complete_cast,cast_info,info_type
 where (title.id = movie_info_idx.movie_id) And (cast_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.movie_id = complete_cast.movie_id) And (name.id = cast_info.person_id) And (movie_info.movie_id = title.id) And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (info_type.id = movie_info.info_type_id) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'complete+verified') And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)'))"
480,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS kind, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, movie_info.info AS movie_info_info_8, movie_info.info_type_id AS info_type_id, movie_info.movie_id AS movie_info_movie_id_10, movie_info_idx.info AS movie_info_idx_info_11, name.gender AS gender, name.name AS name, title.title AS title
 from movie_info_idx,name,movie_info,title,comp_cast_type,complete_cast,cast_info,info_type
 where (title.id = movie_info_idx.movie_id) And (cast_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.movie_id = complete_cast.movie_id) And (info_type.id = movie_info_idx.info_type_id) And (name.id = cast_info.person_id) And (movie_info.movie_id = title.id) And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (info_type.id = movie_info.info_type_id) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'complete+verified') And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)'))","create materialized view if not exists mv480 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS kind, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, movie_info.info AS movie_info_info_8, movie_info.info_type_id AS info_type_id, movie_info.movie_id AS movie_info_movie_id_10, movie_info_idx.info AS movie_info_idx_info_11, name.gender AS gender, name.name AS name, title.title AS title
 from movie_info_idx,name,movie_info,title,comp_cast_type,complete_cast,cast_info,info_type
 where (title.id = movie_info_idx.movie_id) And (cast_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.movie_id = complete_cast.movie_id) And (info_type.id = movie_info_idx.info_type_id) And (name.id = cast_info.person_id) And (movie_info.movie_id = title.id) And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (info_type.id = movie_info.info_type_id) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'complete+verified') And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)'))"
481,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS kind, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, movie_info.info AS movie_info_info_8, movie_info.info_type_id AS info_type_id, movie_info.movie_id AS movie_info_movie_id_10, movie_info_idx.info AS movie_info_idx_info_11, movie_keyword.keyword_id AS keyword_id, name.gender AS gender, name.name AS name, title.title AS title
 from movie_info_idx,name,movie_info,title,comp_cast_type,complete_cast,cast_info,info_type,movie_keyword
 where (title.id = movie_info_idx.movie_id) And (cast_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.movie_id = complete_cast.movie_id) And (info_type.id = movie_info_idx.info_type_id) And (name.id = cast_info.person_id) And (movie_info.movie_id = title.id) And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (info_type.id = movie_info.info_type_id) And (movie_keyword.movie_id = title.id) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'complete+verified') And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)'))","create materialized view if not exists mv481 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS kind, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, movie_info.info AS movie_info_info_8, movie_info.info_type_id AS info_type_id, movie_info.movie_id AS movie_info_movie_id_10, movie_info_idx.info AS movie_info_idx_info_11, movie_keyword.keyword_id AS keyword_id, name.gender AS gender, name.name AS name, title.title AS title
 from movie_info_idx,name,movie_info,title,comp_cast_type,complete_cast,cast_info,info_type,movie_keyword
 where (title.id = movie_info_idx.movie_id) And (cast_info.movie_id = movie_info_idx.movie_id) And (movie_info_idx.movie_id = complete_cast.movie_id) And (info_type.id = movie_info_idx.info_type_id) And (name.id = cast_info.person_id) And (movie_info.movie_id = title.id) And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (info_type.id = movie_info.info_type_id) And (movie_keyword.movie_id = title.id) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'complete+verified') And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)'))"
482,"select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS kind, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, keyword.keyword AS keyword, movie_info.info AS movie_info_info_9, movie_info.info_type_id AS info_type_id, movie_info_idx.info AS movie_info_idx_info_11, name.gender AS gender, name.name AS name, title.title AS title
 from movie_info_idx,name,movie_info,keyword,title,comp_cast_type,complete_cast,cast_info,info_type,movie_keyword
 where (movie_info_idx.movie_id = title.id) And (info_type.id = movie_info_idx.info_type_id) And (name.id = cast_info.person_id) And (title.id = movie_info.movie_id) And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (info_type.id = movie_info.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (title.id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'complete+verified') And (movie_info_idx.movie_id = complete_cast.movie_id) And (cast_info.movie_id = movie_info_idx.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (title.id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id)","create materialized view if not exists mv482 as select cast_info.movie_id AS movie_id, cast_info.note AS note, cast_info.person_id AS person_id, comp_cast_type.id AS comp_cast_type_id_3, comp_cast_type.kind AS kind, complete_cast.subject_id AS subject_id, info_type.id AS info_type_id_6, info_type.info AS info_type_info_7, keyword.keyword AS keyword, movie_info.info AS movie_info_info_9, movie_info.info_type_id AS info_type_id, movie_info_idx.info AS movie_info_idx_info_11, name.gender AS gender, name.name AS name, title.title AS title
 from movie_info_idx,name,movie_info,keyword,title,comp_cast_type,complete_cast,cast_info,info_type,movie_keyword
 where (movie_info_idx.movie_id = title.id) And (info_type.id = movie_info_idx.info_type_id) And (name.id = cast_info.person_id) And (title.id = movie_info.movie_id) And (movie_info.info in ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War')) And (info_type.id = movie_info.info_type_id) And (keyword.id = movie_keyword.keyword_id) And (title.id = movie_info_idx.movie_id) And (movie_info.movie_id = title.id) And (movie_keyword.movie_id = title.id) And (complete_cast.status_id = comp_cast_type.id) And (complete_cast.subject_id = comp_cast_type.id) And (comp_cast_type.kind = 'cast') And (comp_cast_type.kind = 'complete+verified') And (movie_info_idx.movie_id = complete_cast.movie_id) And (cast_info.movie_id = movie_info_idx.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (title.id = movie_keyword.movie_id) And (movie_keyword.keyword_id = keyword.id)"
483,"select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,title,info_type,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'votes') And (keyword.keyword in ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital'))","create materialized view if not exists mv483 as select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,title,info_type,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'votes') And (keyword.keyword in ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital'))"
484,"select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, movie_info.info AS movie_info_info_4, movie_info.info_type_id AS info_type_id, movie_info.movie_id AS movie_info_movie_id_6, movie_info_idx.info AS movie_info_idx_info_7, movie_keyword.movie_id AS movie_keyword_movie_id_8, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,movie_info,title,info_type,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info.movie_id) And (movie_info.info in ('Horror', 'Thriller')) And (info_type.info = 'votes') And (keyword.keyword in ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital'))","create materialized view if not exists mv484 as select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, keyword.id AS keyword_id_2, keyword.keyword AS keyword, movie_info.info AS movie_info_info_4, movie_info.info_type_id AS info_type_id, movie_info.movie_id AS movie_info_movie_id_6, movie_info_idx.info AS movie_info_idx_info_7, movie_keyword.movie_id AS movie_keyword_movie_id_8, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,movie_info,title,info_type,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info.movie_id) And (movie_info.info in ('Horror', 'Thriller')) And (info_type.info = 'votes') And (keyword.keyword in ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital'))"
485,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, keyword.id AS keyword_id_5, keyword.keyword AS keyword, movie_info.info AS movie_info_info_7, movie_info.info_type_id AS info_type_id, movie_info_idx.info AS movie_info_idx_info_9, movie_keyword.movie_id AS movie_keyword_movie_id_10, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,movie_info,title,cast_info,info_type,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info.movie_id) And (movie_info.info in ('Horror', 'Thriller')) And (title.id = cast_info.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (info_type.info = 'votes') And (keyword.keyword in ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital'))","create materialized view if not exists mv485 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS note, cast_info.person_id AS person_id, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, keyword.id AS keyword_id_5, keyword.keyword AS keyword, movie_info.info AS movie_info_info_7, movie_info.info_type_id AS info_type_id, movie_info_idx.info AS movie_info_idx_info_9, movie_keyword.movie_id AS movie_keyword_movie_id_10, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,movie_info,title,cast_info,info_type,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info.movie_id) And (movie_info.info in ('Horror', 'Thriller')) And (title.id = cast_info.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (info_type.info = 'votes') And (keyword.keyword in ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital'))"
486,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS cast_info_note_1, cast_info.person_id AS person_id, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, keyword.id AS keyword_id_5, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_companies.note AS movie_companies_note_8, movie_info.info AS movie_info_info_9, movie_info.info_type_id AS info_type_id, movie_info_idx.info AS movie_info_idx_info_11, movie_keyword.movie_id AS movie_keyword_movie_id_12, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,movie_info,movie_companies,title,cast_info,info_type,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info.movie_id) And (movie_info.info in ('Horror', 'Thriller')) And (title.id = movie_companies.movie_id) And (movie_companies.note like '%(Blu-ray)%') And (title.id = cast_info.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (info_type.info = 'votes') And (keyword.keyword in ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital'))","create materialized view if not exists mv486 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS cast_info_note_1, cast_info.person_id AS person_id, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, keyword.id AS keyword_id_5, keyword.keyword AS keyword, movie_companies.company_id AS company_id, movie_companies.note AS movie_companies_note_8, movie_info.info AS movie_info_info_9, movie_info.info_type_id AS info_type_id, movie_info_idx.info AS movie_info_idx_info_11, movie_keyword.movie_id AS movie_keyword_movie_id_12, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,movie_info,movie_companies,title,cast_info,info_type,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info.movie_id) And (movie_info.info in ('Horror', 'Thriller')) And (title.id = movie_companies.movie_id) And (movie_companies.note like '%(Blu-ray)%') And (title.id = cast_info.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (info_type.info = 'votes') And (keyword.keyword in ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital'))"
487,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS cast_info_note_1, cast_info.person_id AS person_id, company_name.id AS company_name_id_3, company_name.name AS name, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, keyword.id AS keyword_id_7, keyword.keyword AS keyword, movie_companies.note AS movie_companies_note_9, movie_info.info AS movie_info_info_10, movie_info.info_type_id AS info_type_id, movie_info_idx.info AS movie_info_idx_info_12, movie_keyword.movie_id AS movie_keyword_movie_id_13, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,movie_info,movie_companies,title,company_name,cast_info,info_type,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info.movie_id) And (movie_info.info in ('Horror', 'Thriller')) And (title.id = movie_companies.movie_id) And (movie_companies.note like '%(Blu-ray)%') And (company_name.id = movie_companies.company_id) And (title.id = cast_info.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (info_type.info = 'votes') And (keyword.keyword in ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital'))","create materialized view if not exists mv487 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS cast_info_note_1, cast_info.person_id AS person_id, company_name.id AS company_name_id_3, company_name.name AS name, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, keyword.id AS keyword_id_7, keyword.keyword AS keyword, movie_companies.note AS movie_companies_note_9, movie_info.info AS movie_info_info_10, movie_info.info_type_id AS info_type_id, movie_info_idx.info AS movie_info_idx_info_12, movie_keyword.movie_id AS movie_keyword_movie_id_13, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,movie_info,movie_companies,title,company_name,cast_info,info_type,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info.movie_id) And (movie_info.info in ('Horror', 'Thriller')) And (title.id = movie_companies.movie_id) And (movie_companies.note like '%(Blu-ray)%') And (company_name.id = movie_companies.company_id) And (title.id = cast_info.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (info_type.info = 'votes') And (keyword.keyword in ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital'))"
488,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS cast_info_note_1, cast_info.person_id AS person_id, company_name.id AS company_name_id_3, company_name.name AS name, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, keyword.id AS keyword_id_7, keyword.keyword AS keyword, movie_companies.note AS movie_companies_note_9, movie_info.info AS movie_info_info_10, movie_info_idx.info AS movie_info_idx_info_11, movie_keyword.movie_id AS movie_keyword_movie_id_12, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,movie_info,movie_companies,title,company_name,cast_info,info_type,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info.movie_id) And (movie_info.info in ('Horror', 'Thriller')) And (info_type.id = movie_info.info_type_id) And (title.id = movie_companies.movie_id) And (movie_companies.note like '%(Blu-ray)%') And (company_name.id = movie_companies.company_id) And (title.id = cast_info.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (info_type.info = 'votes') And (keyword.keyword in ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital'))","create materialized view if not exists mv488 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS cast_info_note_1, cast_info.person_id AS person_id, company_name.id AS company_name_id_3, company_name.name AS name, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, keyword.id AS keyword_id_7, keyword.keyword AS keyword, movie_companies.note AS movie_companies_note_9, movie_info.info AS movie_info_info_10, movie_info_idx.info AS movie_info_idx_info_11, movie_keyword.movie_id AS movie_keyword_movie_id_12, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,movie_info,movie_companies,title,company_name,cast_info,info_type,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (title.id = movie_info.movie_id) And (movie_info.info in ('Horror', 'Thriller')) And (info_type.id = movie_info.info_type_id) And (title.id = movie_companies.movie_id) And (movie_companies.note like '%(Blu-ray)%') And (company_name.id = movie_companies.company_id) And (title.id = cast_info.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (info_type.info = 'votes') And (keyword.keyword in ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital'))"
489,"select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS cast_info_note_1, cast_info.person_id AS person_id, company_name.id AS company_name_id_3, company_name.name AS company_name_name_4, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, keyword.id AS keyword_id_7, keyword.keyword AS keyword, movie_companies.note AS movie_companies_note_9, movie_info.info AS movie_info_info_10, movie_info_idx.info AS movie_info_idx_info_11, movie_keyword.movie_id AS movie_keyword_movie_id_12, name.gender AS gender, name.name AS name_name_14, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,name,movie_info,movie_companies,title,company_name,cast_info,info_type,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (name.id = cast_info.person_id) And (title.id = movie_info.movie_id) And (movie_info.info in ('Horror', 'Thriller')) And (info_type.id = movie_info.info_type_id) And (title.id = movie_companies.movie_id) And (movie_companies.note like '%(Blu-ray)%') And (company_name.id = movie_companies.company_id) And (title.id = cast_info.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (info_type.info = 'votes') And (keyword.keyword in ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital'))","create materialized view if not exists mv489 as select cast_info.movie_id AS cast_info_movie_id_0, cast_info.note AS cast_info_note_1, cast_info.person_id AS person_id, company_name.id AS company_name_id_3, company_name.name AS company_name_name_4, info_type.id AS info_type_id_5, info_type.info AS info_type_info_6, keyword.id AS keyword_id_7, keyword.keyword AS keyword, movie_companies.note AS movie_companies_note_9, movie_info.info AS movie_info_info_10, movie_info_idx.info AS movie_info_idx_info_11, movie_keyword.movie_id AS movie_keyword_movie_id_12, name.gender AS gender, name.name AS name_name_14, title.production_year AS production_year, title.title AS title
 from movie_keyword,movie_info_idx,name,movie_info,movie_companies,title,company_name,cast_info,info_type,keyword
 where (movie_keyword.keyword_id = keyword.id) And (title.id = movie_keyword.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.info_type_id = info_type.id) And (name.id = cast_info.person_id) And (title.id = movie_info.movie_id) And (movie_info.info in ('Horror', 'Thriller')) And (info_type.id = movie_info.info_type_id) And (title.id = movie_companies.movie_id) And (movie_companies.note like '%(Blu-ray)%') And (company_name.id = movie_companies.company_id) And (title.id = cast_info.movie_id) And (cast_info.note in ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)')) And (info_type.info = 'votes') And (keyword.keyword in ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital'))"
490,"select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id
 from keyword,movie_keyword
 where (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = '10,000-mile-club')","create materialized view if not exists mv490 as select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id
 from keyword,movie_keyword
 where (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = '10,000-mile-club')"
491,"select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id, movie_link.link_type_id AS link_type_id, movie_link.linked_movie_id AS linked_movie_id
 from movie_link,keyword,movie_keyword
 where (movie_keyword.movie_id = movie_link.movie_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = '10,000-mile-club')","create materialized view if not exists mv491 as select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id, movie_link.link_type_id AS link_type_id, movie_link.linked_movie_id AS linked_movie_id
 from movie_link,keyword,movie_keyword
 where (movie_keyword.movie_id = movie_link.movie_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = '10,000-mile-club')"
492,"select keyword.id AS keyword_id_0, keyword.keyword AS keyword, link_type.id AS link_type_id_2, link_type.link AS link, movie_keyword.movie_id AS movie_id, movie_link.linked_movie_id AS linked_movie_id
 from movie_link,keyword,link_type,movie_keyword
 where (movie_keyword.movie_id = movie_link.movie_id) And (link_type.id = movie_link.link_type_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = '10,000-mile-club')","create materialized view if not exists mv492 as select keyword.id AS keyword_id_0, keyword.keyword AS keyword, link_type.id AS link_type_id_2, link_type.link AS link, movie_keyword.movie_id AS movie_id, movie_link.linked_movie_id AS linked_movie_id
 from movie_link,keyword,link_type,movie_keyword
 where (movie_keyword.movie_id = movie_link.movie_id) And (link_type.id = movie_link.link_type_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = '10,000-mile-club')"
493,"select keyword.id AS keyword_id_0, keyword.keyword AS keyword, link_type.id AS link_type_id_2, link_type.link AS link, movie_keyword.movie_id AS movie_id, movie_link.linked_movie_id AS linked_movie_id, title.title AS title
 from link_type,movie_keyword,title,movie_link,keyword
 where (link_type.id = movie_link.link_type_id) And (title.id = movie_keyword.movie_id) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = '10,000-mile-club')","create materialized view if not exists mv493 as select keyword.id AS keyword_id_0, keyword.keyword AS keyword, link_type.id AS link_type_id_2, link_type.link AS link, movie_keyword.movie_id AS movie_id, movie_link.linked_movie_id AS linked_movie_id, title.title AS title
 from link_type,movie_keyword,title,movie_link,keyword
 where (link_type.id = movie_link.link_type_id) And (title.id = movie_keyword.movie_id) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = '10,000-mile-club')"
494,"select keyword.id AS keyword_id_0, keyword.keyword AS keyword, link_type.id AS link_type_id_2, link_type.link AS link, movie_keyword.movie_id AS movie_id, title.title AS title
 from link_type,movie_keyword,title,movie_link,keyword
 where (link_type.id = movie_link.link_type_id) And (title.id = movie_keyword.movie_id) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_keyword.keyword_id = keyword.id) And (title.id = movie_link.linked_movie_id) And (keyword.keyword = '10,000-mile-club')","create materialized view if not exists mv494 as select keyword.id AS keyword_id_0, keyword.keyword AS keyword, link_type.id AS link_type_id_2, link_type.link AS link, movie_keyword.movie_id AS movie_id, title.title AS title
 from link_type,movie_keyword,title,movie_link,keyword
 where (link_type.id = movie_link.link_type_id) And (title.id = movie_keyword.movie_id) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_keyword.keyword_id = keyword.id) And (title.id = movie_link.linked_movie_id) And (keyword.keyword = '10,000-mile-club')"
495,"select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id, movie_link.link_type_id AS link_type_id, movie_link.linked_movie_id AS linked_movie_id
 from movie_link,keyword,movie_keyword
 where (movie_keyword.movie_id = movie_link.movie_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'character-name-in-title')","create materialized view if not exists mv495 as select keyword.id AS id, keyword.keyword AS keyword, movie_keyword.movie_id AS movie_id, movie_link.link_type_id AS link_type_id, movie_link.linked_movie_id AS linked_movie_id
 from movie_link,keyword,movie_keyword
 where (movie_keyword.movie_id = movie_link.movie_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'character-name-in-title')"
496,"select keyword.id AS keyword_id_0, keyword.keyword AS keyword, link_type.id AS link_type_id_2, link_type.link AS link, movie_keyword.movie_id AS movie_id, movie_link.linked_movie_id AS linked_movie_id
 from movie_link,keyword,link_type,movie_keyword
 where (movie_keyword.movie_id = movie_link.movie_id) And (link_type.id = movie_link.link_type_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'character-name-in-title')","create materialized view if not exists mv496 as select keyword.id AS keyword_id_0, keyword.keyword AS keyword, link_type.id AS link_type_id_2, link_type.link AS link, movie_keyword.movie_id AS movie_id, movie_link.linked_movie_id AS linked_movie_id
 from movie_link,keyword,link_type,movie_keyword
 where (movie_keyword.movie_id = movie_link.movie_id) And (link_type.id = movie_link.link_type_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'character-name-in-title')"
497,"select keyword.id AS keyword_id_0, keyword.keyword AS keyword, link_type.id AS link_type_id_2, link_type.link AS link, movie_keyword.movie_id AS movie_id, movie_link.linked_movie_id AS linked_movie_id, title.title AS title
 from link_type,movie_keyword,title,movie_link,keyword
 where (link_type.id = movie_link.link_type_id) And (title.id = movie_keyword.movie_id) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'character-name-in-title')","create materialized view if not exists mv497 as select keyword.id AS keyword_id_0, keyword.keyword AS keyword, link_type.id AS link_type_id_2, link_type.link AS link, movie_keyword.movie_id AS movie_id, movie_link.linked_movie_id AS linked_movie_id, title.title AS title
 from link_type,movie_keyword,title,movie_link,keyword
 where (link_type.id = movie_link.link_type_id) And (title.id = movie_keyword.movie_id) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_keyword.keyword_id = keyword.id) And (keyword.keyword = 'character-name-in-title')"
498,"select keyword.id AS keyword_id_0, keyword.keyword AS keyword, link_type.id AS link_type_id_2, link_type.link AS link, movie_keyword.movie_id AS movie_id, title.title AS title
 from link_type,movie_keyword,title,movie_link,keyword
 where (link_type.id = movie_link.link_type_id) And (title.id = movie_keyword.movie_id) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_keyword.keyword_id = keyword.id) And (title.id = movie_link.linked_movie_id) And (keyword.keyword = 'character-name-in-title')","create materialized view if not exists mv498 as select keyword.id AS keyword_id_0, keyword.keyword AS keyword, link_type.id AS link_type_id_2, link_type.link AS link, movie_keyword.movie_id AS movie_id, title.title AS title
 from link_type,movie_keyword,title,movie_link,keyword
 where (link_type.id = movie_link.link_type_id) And (title.id = movie_keyword.movie_id) And (movie_keyword.movie_id = movie_link.movie_id) And (movie_keyword.keyword_id = keyword.id) And (title.id = movie_link.linked_movie_id) And (keyword.keyword = 'character-name-in-title')"
499,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info_idx.info AS movie_info_idx_info_2, movie_info_idx.movie_id AS movie_id
 from info_type,movie_info_idx
 where (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'rating') And (movie_info_idx.info < '3.0')","create materialized view if not exists mv499 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info_idx.info AS movie_info_idx_info_2, movie_info_idx.movie_id AS movie_id
 from info_type,movie_info_idx
 where (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'rating') And (movie_info_idx.info < '3.0')"
500,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info_idx.info AS movie_info_idx_info_2, movie_info_idx.movie_id AS movie_info_idx_movie_id_3, movie_link.link_type_id AS link_type_id, movie_link.movie_id AS movie_link_movie_id_5
 from info_type,movie_info_idx,movie_link
 where (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'rating') And (movie_link.linked_movie_id = movie_info_idx.movie_id) And (movie_info_idx.info < '3.0')","create materialized view if not exists mv500 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info_idx.info AS movie_info_idx_info_2, movie_info_idx.movie_id AS movie_info_idx_movie_id_3, movie_link.link_type_id AS link_type_id, movie_link.movie_id AS movie_link_movie_id_5
 from info_type,movie_info_idx,movie_link
 where (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'rating') And (movie_link.linked_movie_id = movie_info_idx.movie_id) And (movie_info_idx.info < '3.0')"
501,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info_idx.info AS movie_info_idx_info_2, movie_info_idx.movie_id AS movie_info_idx_movie_id_3, movie_link.link_type_id AS link_type_id, movie_link.movie_id AS movie_link_movie_id_5, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
 from info_type,title,movie_info_idx,movie_link
 where (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'rating') And (title.id = movie_info_idx.movie_id) And (movie_link.linked_movie_id = title.id) And (movie_link.linked_movie_id = movie_info_idx.movie_id) And (movie_info_idx.info < '3.0')","create materialized view if not exists mv501 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info_idx.info AS movie_info_idx_info_2, movie_info_idx.movie_id AS movie_info_idx_movie_id_3, movie_link.link_type_id AS link_type_id, movie_link.movie_id AS movie_link_movie_id_5, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
 from info_type,title,movie_info_idx,movie_link
 where (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'rating') And (title.id = movie_info_idx.movie_id) And (movie_link.linked_movie_id = title.id) And (movie_link.linked_movie_id = movie_info_idx.movie_id) And (movie_info_idx.info < '3.0')"
502,"select info_type.id AS id, info_type.info AS info_type_info_1, movie_info_idx.info AS movie_info_idx_info_2, movie_info_idx.movie_id AS movie_id, movie_link.link_type_id AS link_type_id, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
 from info_type,title,movie_info_idx,movie_link
 where (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'rating') And (title.id = movie_info_idx.movie_id) And (movie_link.linked_movie_id = title.id) And (movie_link.linked_movie_id = movie_info_idx.movie_id) And (movie_info_idx.info < '3.0') And (movie_info_idx.movie_id = movie_link.movie_id)","create materialized view if not exists mv502 as select info_type.id AS id, info_type.info AS info_type_info_1, movie_info_idx.info AS movie_info_idx_info_2, movie_info_idx.movie_id AS movie_id, movie_link.link_type_id AS link_type_id, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
 from info_type,title,movie_info_idx,movie_link
 where (movie_info_idx.info_type_id = info_type.id) And (info_type.info = 'rating') And (title.id = movie_info_idx.movie_id) And (movie_link.linked_movie_id = title.id) And (movie_link.linked_movie_id = movie_info_idx.movie_id) And (movie_info_idx.info < '3.0') And (movie_info_idx.movie_id = movie_link.movie_id)"
503,"select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, link_type.id AS link_type_id_2, link_type.link AS link, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.movie_id AS movie_id, movie_link.linked_movie_id AS linked_movie_id, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
 from link_type,movie_info_idx,title,movie_link,info_type
 where (movie_link.link_type_id = link_type.id) And (link_type.link in ('sequel', 'follows', 'followed by')) And (title.id = movie_info_idx.movie_id) And (movie_link.linked_movie_id = movie_info_idx.movie_id) And (movie_info_idx.movie_id = movie_link.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info < '3.0') And (movie_link.linked_movie_id = title.id) And (info_type.info = 'rating')","create materialized view if not exists mv503 as select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, link_type.id AS link_type_id_2, link_type.link AS link, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.movie_id AS movie_id, movie_link.linked_movie_id AS linked_movie_id, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
 from link_type,movie_info_idx,title,movie_link,info_type
 where (movie_link.link_type_id = link_type.id) And (link_type.link in ('sequel', 'follows', 'followed by')) And (title.id = movie_info_idx.movie_id) And (movie_link.linked_movie_id = movie_info_idx.movie_id) And (movie_info_idx.movie_id = movie_link.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info < '3.0') And (movie_link.linked_movie_id = title.id) And (info_type.info = 'rating')"
504,"select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, link_type.id AS link_type_id_2, link_type.link AS link, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_6, movie_link.linked_movie_id AS linked_movie_id, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
 from link_type,movie_info_idx,movie_companies,title,movie_link,info_type
 where (movie_link.link_type_id = link_type.id) And (link_type.link in ('sequel', 'follows', 'followed by')) And (title.id = movie_info_idx.movie_id) And (movie_link.linked_movie_id = movie_info_idx.movie_id) And (movie_info_idx.movie_id = movie_link.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info < '3.0') And (movie_companies.movie_id = title.id) And (movie_link.linked_movie_id = title.id) And (info_type.info = 'rating')","create materialized view if not exists mv504 as select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, link_type.id AS link_type_id_2, link_type.link AS link, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_6, movie_link.linked_movie_id AS linked_movie_id, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
 from link_type,movie_info_idx,movie_companies,title,movie_link,info_type
 where (movie_link.link_type_id = link_type.id) And (link_type.link in ('sequel', 'follows', 'followed by')) And (title.id = movie_info_idx.movie_id) And (movie_link.linked_movie_id = movie_info_idx.movie_id) And (movie_info_idx.movie_id = movie_link.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info < '3.0') And (movie_companies.movie_id = title.id) And (movie_link.linked_movie_id = title.id) And (info_type.info = 'rating')"
505,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, link_type.id AS link_type_id_5, link_type.link AS link, movie_companies.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_8, movie_link.linked_movie_id AS linked_movie_id, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
 from link_type,movie_info_idx,movie_companies,title,company_name,movie_link,info_type
 where (movie_link.link_type_id = link_type.id) And (link_type.link in ('sequel', 'follows', 'followed by')) And (title.id = movie_info_idx.movie_id) And (movie_link.linked_movie_id = movie_info_idx.movie_id) And (movie_info_idx.movie_id = movie_link.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info < '3.0') And (movie_companies.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (movie_link.linked_movie_id = title.id) And (info_type.info = 'rating')","create materialized view if not exists mv505 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, link_type.id AS link_type_id_5, link_type.link AS link, movie_companies.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_8, movie_link.linked_movie_id AS linked_movie_id, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
 from link_type,movie_info_idx,movie_companies,title,company_name,movie_link,info_type
 where (movie_link.link_type_id = link_type.id) And (link_type.link in ('sequel', 'follows', 'followed by')) And (title.id = movie_info_idx.movie_id) And (movie_link.linked_movie_id = movie_info_idx.movie_id) And (movie_info_idx.movie_id = movie_link.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info < '3.0') And (movie_companies.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (movie_link.linked_movie_id = title.id) And (info_type.info = 'rating')"
506,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, kind_type.id AS kind_type_id_5, kind_type.kind AS kind, link_type.id AS link_type_id_7, link_type.link AS link, movie_companies.movie_id AS movie_companies_movie_id_9, movie_info_idx.info AS movie_info_idx_info_10, movie_link.linked_movie_id AS linked_movie_id, movie_link.movie_id AS movie_link_movie_id_12, title.production_year AS production_year, title.title AS title
 from link_type,movie_info_idx,movie_companies,title,company_name,movie_link,info_type,kind_type
 where (movie_link.link_type_id = link_type.id) And (link_type.link in ('sequel', 'follows', 'followed by')) And (title.id = movie_info_idx.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.movie_id = movie_link.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info < '3.0') And (movie_companies.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (movie_link.linked_movie_id = title.id) And (kind_type.id = title.kind_id) And (movie_link.linked_movie_id = movie_info_idx.movie_id) And (info_type.info = 'rating')","create materialized view if not exists mv506 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, kind_type.id AS kind_type_id_5, kind_type.kind AS kind, link_type.id AS link_type_id_7, link_type.link AS link, movie_companies.movie_id AS movie_companies_movie_id_9, movie_info_idx.info AS movie_info_idx_info_10, movie_link.linked_movie_id AS linked_movie_id, movie_link.movie_id AS movie_link_movie_id_12, title.production_year AS production_year, title.title AS title
 from link_type,movie_info_idx,movie_companies,title,company_name,movie_link,info_type,kind_type
 where (movie_link.link_type_id = link_type.id) And (link_type.link in ('sequel', 'follows', 'followed by')) And (title.id = movie_info_idx.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.movie_id = movie_link.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info < '3.0') And (movie_companies.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (movie_link.linked_movie_id = title.id) And (kind_type.id = title.kind_id) And (movie_link.linked_movie_id = movie_info_idx.movie_id) And (info_type.info = 'rating')"
507,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, kind_type.id AS kind_type_id_5, kind_type.kind AS kind, link_type.id AS link_type_id_7, link_type.link AS link, movie_companies.movie_id AS movie_companies_movie_id_9, movie_info_idx.info AS movie_info_idx_info_10, movie_link.linked_movie_id AS linked_movie_id, movie_link.movie_id AS movie_link_movie_id_12, title.production_year AS production_year, title.title AS title
 from link_type,movie_info_idx,movie_companies,title,company_name,movie_link,info_type,kind_type
 where (movie_link.link_type_id = link_type.id) And (link_type.link in ('sequel', 'follows', 'followed by')) And (title.id = movie_info_idx.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.movie_id = movie_link.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info < '3.0') And (movie_companies.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (movie_link.linked_movie_id = title.id) And (kind_type.id = title.kind_id) And (movie_link.linked_movie_id = movie_info_idx.movie_id) And (info_type.info = 'rating') And (kind_type.kind = 'tv series')","create materialized view if not exists mv507 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, info_type.id AS info_type_id_3, info_type.info AS info_type_info_4, kind_type.id AS kind_type_id_5, kind_type.kind AS kind, link_type.id AS link_type_id_7, link_type.link AS link, movie_companies.movie_id AS movie_companies_movie_id_9, movie_info_idx.info AS movie_info_idx_info_10, movie_link.linked_movie_id AS linked_movie_id, movie_link.movie_id AS movie_link_movie_id_12, title.production_year AS production_year, title.title AS title
 from link_type,movie_info_idx,movie_companies,title,company_name,movie_link,info_type,kind_type
 where (movie_link.link_type_id = link_type.id) And (link_type.link in ('sequel', 'follows', 'followed by')) And (title.id = movie_info_idx.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.movie_id = movie_link.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info < '3.0') And (movie_companies.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (movie_link.linked_movie_id = title.id) And (kind_type.id = title.kind_id) And (movie_link.linked_movie_id = movie_info_idx.movie_id) And (info_type.info = 'rating') And (kind_type.kind = 'tv series')"
508,"select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, kind_type.id AS kind_type_id_2, kind_type.kind AS kind, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.movie_id AS movie_info_idx_movie_id_5, movie_link.link_type_id AS link_type_id, movie_link.linked_movie_id AS linked_movie_id, movie_link.movie_id AS movie_link_movie_id_8, title.production_year AS production_year, title.title AS title
 from movie_info_idx,title,movie_link,info_type,kind_type
 where (title.id = movie_info_idx.movie_id) And (movie_link.linked_movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info < '3.0') And (movie_link.linked_movie_id = title.id) And (kind_type.id = title.kind_id) And (info_type.info = 'rating')","create materialized view if not exists mv508 as select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, kind_type.id AS kind_type_id_2, kind_type.kind AS kind, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.movie_id AS movie_info_idx_movie_id_5, movie_link.link_type_id AS link_type_id, movie_link.linked_movie_id AS linked_movie_id, movie_link.movie_id AS movie_link_movie_id_8, title.production_year AS production_year, title.title AS title
 from movie_info_idx,title,movie_link,info_type,kind_type
 where (title.id = movie_info_idx.movie_id) And (movie_link.linked_movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info < '3.0') And (movie_link.linked_movie_id = title.id) And (kind_type.id = title.kind_id) And (info_type.info = 'rating')"
509,"select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, kind_type.id AS kind_type_id_2, kind_type.kind AS kind, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.movie_id AS movie_id, movie_link.link_type_id AS link_type_id, movie_link.linked_movie_id AS linked_movie_id, title.production_year AS production_year, title.title AS title
 from movie_info_idx,title,movie_link,info_type,kind_type
 where (title.id = movie_info_idx.movie_id) And (movie_link.linked_movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info < '3.0') And (movie_link.linked_movie_id = title.id) And (kind_type.id = title.kind_id) And (title.id = movie_link.movie_id) And (info_type.info = 'rating')","create materialized view if not exists mv509 as select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, kind_type.id AS kind_type_id_2, kind_type.kind AS kind, movie_info_idx.info AS movie_info_idx_info_4, movie_info_idx.movie_id AS movie_id, movie_link.link_type_id AS link_type_id, movie_link.linked_movie_id AS linked_movie_id, title.production_year AS production_year, title.title AS title
 from movie_info_idx,title,movie_link,info_type,kind_type
 where (title.id = movie_info_idx.movie_id) And (movie_link.linked_movie_id = movie_info_idx.movie_id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info < '3.0') And (movie_link.linked_movie_id = title.id) And (kind_type.id = title.kind_id) And (title.id = movie_link.movie_id) And (info_type.info = 'rating')"
510,"select info_type.info AS info_type_info_0, kind_type.id AS id, kind_type.kind AS kind, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_5, movie_link.link_type_id AS link_type_id, movie_link.linked_movie_id AS linked_movie_id, title.production_year AS production_year, title.title AS title
 from movie_info_idx,movie_companies,title,movie_link,info_type,kind_type
 where (title.id = movie_info_idx.movie_id) And (movie_link.linked_movie_id = movie_info_idx.movie_id) And (movie_info_idx.movie_id = title.id) And (info_type.id = movie_info_idx.info_type_id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info < '3.0') And (movie_companies.movie_id = title.id) And (title.id = movie_link.movie_id) And (movie_link.linked_movie_id = title.id) And (kind_type.id = title.kind_id) And (info_type.info = 'rating')","create materialized view if not exists mv510 as select info_type.info AS info_type_info_0, kind_type.id AS id, kind_type.kind AS kind, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_5, movie_link.link_type_id AS link_type_id, movie_link.linked_movie_id AS linked_movie_id, title.production_year AS production_year, title.title AS title
 from movie_info_idx,movie_companies,title,movie_link,info_type,kind_type
 where (title.id = movie_info_idx.movie_id) And (movie_link.linked_movie_id = movie_info_idx.movie_id) And (movie_info_idx.movie_id = title.id) And (info_type.id = movie_info_idx.info_type_id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info < '3.0') And (movie_companies.movie_id = title.id) And (title.id = movie_link.movie_id) And (movie_link.linked_movie_id = title.id) And (kind_type.id = title.kind_id) And (info_type.info = 'rating')"
511,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, info_type.info AS info_type_info_3, kind_type.id AS kind_type_id_4, kind_type.kind AS kind, movie_companies.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_7, movie_link.link_type_id AS link_type_id, movie_link.linked_movie_id AS linked_movie_id, title.production_year AS production_year, title.title AS title
 from movie_info_idx,movie_companies,title,company_name,movie_link,info_type,kind_type
 where (title.id = movie_info_idx.movie_id) And (movie_link.linked_movie_id = movie_info_idx.movie_id) And (movie_info_idx.movie_id = title.id) And (info_type.id = movie_info_idx.info_type_id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info < '3.0') And (movie_companies.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (title.id = movie_link.movie_id) And (movie_link.linked_movie_id = title.id) And (kind_type.id = title.kind_id) And (info_type.info = 'rating')","create materialized view if not exists mv511 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, info_type.info AS info_type_info_3, kind_type.id AS kind_type_id_4, kind_type.kind AS kind, movie_companies.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_7, movie_link.link_type_id AS link_type_id, movie_link.linked_movie_id AS linked_movie_id, title.production_year AS production_year, title.title AS title
 from movie_info_idx,movie_companies,title,company_name,movie_link,info_type,kind_type
 where (title.id = movie_info_idx.movie_id) And (movie_link.linked_movie_id = movie_info_idx.movie_id) And (movie_info_idx.movie_id = title.id) And (info_type.id = movie_info_idx.info_type_id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info < '3.0') And (movie_companies.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (title.id = movie_link.movie_id) And (movie_link.linked_movie_id = title.id) And (kind_type.id = title.kind_id) And (info_type.info = 'rating')"
512,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, info_type.info AS info_type_info_3, kind_type.id AS kind_type_id_4, kind_type.kind AS kind, link_type.id AS link_type_id_6, link_type.link AS link, movie_companies.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_9, movie_link.linked_movie_id AS linked_movie_id, title.production_year AS production_year, title.title AS title
 from link_type,movie_info_idx,movie_companies,title,company_name,movie_link,info_type,kind_type
 where (link_type.id = movie_link.link_type_id) And (title.id = movie_info_idx.movie_id) And (movie_link.linked_movie_id = movie_info_idx.movie_id) And (movie_info_idx.movie_id = title.id) And (info_type.id = movie_info_idx.info_type_id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info < '3.0') And (movie_companies.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (title.id = movie_link.movie_id) And (movie_link.linked_movie_id = title.id) And (kind_type.id = title.kind_id) And (info_type.info = 'rating')","create materialized view if not exists mv512 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, info_type.info AS info_type_info_3, kind_type.id AS kind_type_id_4, kind_type.kind AS kind, link_type.id AS link_type_id_6, link_type.link AS link, movie_companies.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_9, movie_link.linked_movie_id AS linked_movie_id, title.production_year AS production_year, title.title AS title
 from link_type,movie_info_idx,movie_companies,title,company_name,movie_link,info_type,kind_type
 where (link_type.id = movie_link.link_type_id) And (title.id = movie_info_idx.movie_id) And (movie_link.linked_movie_id = movie_info_idx.movie_id) And (movie_info_idx.movie_id = title.id) And (info_type.id = movie_info_idx.info_type_id) And (movie_info_idx.info_type_id = info_type.id) And (movie_info_idx.info < '3.0') And (movie_companies.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (title.id = movie_link.movie_id) And (movie_link.linked_movie_id = title.id) And (kind_type.id = title.kind_id) And (info_type.info = 'rating')"
513,"select link_type.id AS id, link_type.link AS link, movie_link.linked_movie_id AS linked_movie_id, movie_link.movie_id AS movie_id
 from link_type,movie_link
 where (movie_link.link_type_id = link_type.id) And (link_type.link in ('sequel', 'follows', 'followed by'))","create materialized view if not exists mv513 as select link_type.id AS id, link_type.link AS link, movie_link.linked_movie_id AS linked_movie_id, movie_link.movie_id AS movie_id
 from link_type,movie_link
 where (movie_link.link_type_id = link_type.id) And (link_type.link in ('sequel', 'follows', 'followed by'))"
514,"select link_type.id AS id, link_type.link AS link, movie_link.linked_movie_id AS linked_movie_id, movie_link.movie_id AS movie_id, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
 from link_type,title,movie_link
 where (movie_link.link_type_id = link_type.id) And (link_type.link in ('sequel', 'follows', 'followed by')) And (title.id = movie_link.linked_movie_id)","create materialized view if not exists mv514 as select link_type.id AS id, link_type.link AS link, movie_link.linked_movie_id AS linked_movie_id, movie_link.movie_id AS movie_id, title.kind_id AS kind_id, title.production_year AS production_year, title.title AS title
 from link_type,title,movie_link
 where (movie_link.link_type_id = link_type.id) And (link_type.link in ('sequel', 'follows', 'followed by')) And (title.id = movie_link.linked_movie_id)"
515,"select kind_type.id AS kind_type_id_0, kind_type.kind AS kind, link_type.id AS link_type_id_2, link_type.link AS link, movie_link.linked_movie_id AS linked_movie_id, movie_link.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
 from link_type,kind_type,title,movie_link
 where (movie_link.link_type_id = link_type.id) And (link_type.link in ('sequel', 'follows', 'followed by')) And (kind_type.id = title.kind_id) And (title.id = movie_link.linked_movie_id)","create materialized view if not exists mv515 as select kind_type.id AS kind_type_id_0, kind_type.kind AS kind, link_type.id AS link_type_id_2, link_type.link AS link, movie_link.linked_movie_id AS linked_movie_id, movie_link.movie_id AS movie_id, title.production_year AS production_year, title.title AS title
 from link_type,kind_type,title,movie_link
 where (movie_link.link_type_id = link_type.id) And (link_type.link in ('sequel', 'follows', 'followed by')) And (kind_type.id = title.kind_id) And (title.id = movie_link.linked_movie_id)"
516,"select kind_type.id AS kind_type_id_0, kind_type.kind AS kind, link_type.id AS link_type_id_2, link_type.link AS link, movie_info_idx.info AS info, movie_info_idx.info_type_id AS info_type_id, movie_info_idx.movie_id AS movie_id, movie_link.linked_movie_id AS linked_movie_id, title.production_year AS production_year, title.title AS title
 from link_type,movie_info_idx,title,movie_link,kind_type
 where (movie_link.link_type_id = link_type.id) And (link_type.link in ('sequel', 'follows', 'followed by')) And (movie_info_idx.movie_id = movie_link.movie_id) And (title.id = movie_link.linked_movie_id) And (kind_type.id = title.kind_id)","create materialized view if not exists mv516 as select kind_type.id AS kind_type_id_0, kind_type.kind AS kind, link_type.id AS link_type_id_2, link_type.link AS link, movie_info_idx.info AS info, movie_info_idx.info_type_id AS info_type_id, movie_info_idx.movie_id AS movie_id, movie_link.linked_movie_id AS linked_movie_id, title.production_year AS production_year, title.title AS title
 from link_type,movie_info_idx,title,movie_link,kind_type
 where (movie_link.link_type_id = link_type.id) And (link_type.link in ('sequel', 'follows', 'followed by')) And (movie_info_idx.movie_id = movie_link.movie_id) And (title.id = movie_link.linked_movie_id) And (kind_type.id = title.kind_id)"
517,"select kind_type.id AS kind_type_id_0, kind_type.kind AS kind, link_type.id AS link_type_id_2, link_type.link AS link, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_companies_movie_id_5, movie_info_idx.info AS info, movie_info_idx.info_type_id AS info_type_id, movie_info_idx.movie_id AS movie_info_idx_movie_id_8, title.production_year AS production_year, title.title AS title
 from link_type,movie_info_idx,movie_companies,title,movie_link,kind_type
 where (movie_link.link_type_id = link_type.id) And (link_type.link in ('sequel', 'follows', 'followed by')) And (movie_info_idx.movie_id = movie_link.movie_id) And (movie_companies.movie_id = title.id) And (title.id = movie_link.linked_movie_id) And (kind_type.id = title.kind_id)","create materialized view if not exists mv517 as select kind_type.id AS kind_type_id_0, kind_type.kind AS kind, link_type.id AS link_type_id_2, link_type.link AS link, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_companies_movie_id_5, movie_info_idx.info AS info, movie_info_idx.info_type_id AS info_type_id, movie_info_idx.movie_id AS movie_info_idx_movie_id_8, title.production_year AS production_year, title.title AS title
 from link_type,movie_info_idx,movie_companies,title,movie_link,kind_type
 where (movie_link.link_type_id = link_type.id) And (link_type.link in ('sequel', 'follows', 'followed by')) And (movie_info_idx.movie_id = movie_link.movie_id) And (movie_companies.movie_id = title.id) And (title.id = movie_link.linked_movie_id) And (kind_type.id = title.kind_id)"
518,"select kind_type.id AS kind_type_id_0, kind_type.kind AS kind, link_type.id AS link_type_id_2, link_type.link AS link, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_companies_movie_id_5, movie_info_idx.info AS info, movie_info_idx.info_type_id AS info_type_id, movie_link.linked_movie_id AS linked_movie_id, movie_link.movie_id AS movie_link_movie_id_9, title.production_year AS production_year, title.title AS title
 from link_type,movie_info_idx,movie_companies,title,movie_link,kind_type
 where (movie_link.link_type_id = link_type.id) And (link_type.link in ('sequel', 'follows', 'followed by')) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.movie_id = movie_link.movie_id) And (movie_info_idx.info < '3.5') And (movie_companies.movie_id = title.id) And (title.id = movie_link.linked_movie_id) And (kind_type.id = title.kind_id)","create materialized view if not exists mv518 as select kind_type.id AS kind_type_id_0, kind_type.kind AS kind, link_type.id AS link_type_id_2, link_type.link AS link, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_companies_movie_id_5, movie_info_idx.info AS info, movie_info_idx.info_type_id AS info_type_id, movie_link.linked_movie_id AS linked_movie_id, movie_link.movie_id AS movie_link_movie_id_9, title.production_year AS production_year, title.title AS title
 from link_type,movie_info_idx,movie_companies,title,movie_link,kind_type
 where (movie_link.link_type_id = link_type.id) And (link_type.link in ('sequel', 'follows', 'followed by')) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.movie_id = movie_link.movie_id) And (movie_info_idx.info < '3.5') And (movie_companies.movie_id = title.id) And (title.id = movie_link.linked_movie_id) And (kind_type.id = title.kind_id)"
519,"select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, kind_type.id AS kind_type_id_2, kind_type.kind AS kind, link_type.id AS link_type_id_4, link_type.link AS link, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_companies_movie_id_7, movie_info_idx.info AS movie_info_idx_info_8, movie_link.linked_movie_id AS linked_movie_id, movie_link.movie_id AS movie_link_movie_id_10, title.production_year AS production_year, title.title AS title
 from link_type,movie_info_idx,movie_companies,title,movie_link,info_type,kind_type
 where (movie_link.link_type_id = link_type.id) And (link_type.link in ('sequel', 'follows', 'followed by')) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.movie_id = movie_link.movie_id) And (movie_info_idx.info < '3.5') And (info_type.id = movie_info_idx.info_type_id) And (movie_companies.movie_id = title.id) And (title.id = movie_link.linked_movie_id) And (kind_type.id = title.kind_id)","create materialized view if not exists mv519 as select info_type.id AS info_type_id_0, info_type.info AS info_type_info_1, kind_type.id AS kind_type_id_2, kind_type.kind AS kind, link_type.id AS link_type_id_4, link_type.link AS link, movie_companies.company_id AS company_id, movie_companies.movie_id AS movie_companies_movie_id_7, movie_info_idx.info AS movie_info_idx_info_8, movie_link.linked_movie_id AS linked_movie_id, movie_link.movie_id AS movie_link_movie_id_10, title.production_year AS production_year, title.title AS title
 from link_type,movie_info_idx,movie_companies,title,movie_link,info_type,kind_type
 where (movie_link.link_type_id = link_type.id) And (link_type.link in ('sequel', 'follows', 'followed by')) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.movie_id = movie_link.movie_id) And (movie_info_idx.info < '3.5') And (info_type.id = movie_info_idx.info_type_id) And (movie_companies.movie_id = title.id) And (title.id = movie_link.linked_movie_id) And (kind_type.id = title.kind_id)"
520,"select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, info_type.info AS info_type_info_3, kind_type.id AS kind_type_id_4, kind_type.kind AS kind, link_type.id AS link_type_id_6, link_type.link AS link, movie_companies.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_9, movie_link.linked_movie_id AS linked_movie_id, title.production_year AS production_year, title.title AS title
 from link_type,movie_info_idx,movie_companies,title,company_name,movie_link,info_type,kind_type
 where (movie_link.link_type_id = link_type.id) And (link_type.link in ('sequel', 'follows', 'followed by')) And (title.id = movie_info_idx.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.movie_id = movie_link.movie_id) And (movie_info_idx.info < '3.5') And (movie_info_idx.info_type_id = info_type.id) And (movie_companies.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (title.id = movie_link.linked_movie_id) And (movie_link.movie_id = title.id) And (kind_type.id = title.kind_id) And (info_type.id = movie_info_idx.info_type_id)","create materialized view if not exists mv520 as select company_name.country_code AS country_code, company_name.id AS company_name_id_1, company_name.name AS name, info_type.info AS info_type_info_3, kind_type.id AS kind_type_id_4, kind_type.kind AS kind, link_type.id AS link_type_id_6, link_type.link AS link, movie_companies.movie_id AS movie_id, movie_info_idx.info AS movie_info_idx_info_9, movie_link.linked_movie_id AS linked_movie_id, title.production_year AS production_year, title.title AS title
 from link_type,movie_info_idx,movie_companies,title,company_name,movie_link,info_type,kind_type
 where (movie_link.link_type_id = link_type.id) And (link_type.link in ('sequel', 'follows', 'followed by')) And (title.id = movie_info_idx.movie_id) And (movie_info_idx.movie_id = title.id) And (movie_info_idx.movie_id = movie_link.movie_id) And (movie_info_idx.info < '3.5') And (movie_info_idx.info_type_id = info_type.id) And (movie_companies.movie_id = title.id) And (company_name.id = movie_companies.company_id) And (title.id = movie_link.linked_movie_id) And (movie_link.movie_id = title.id) And (kind_type.id = title.kind_id) And (info_type.id = movie_info_idx.info_type_id)"
